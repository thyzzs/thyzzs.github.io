<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>病理学笔记</title>
      <link href="/2024/10/29/pathology/"/>
      <url>/2024/10/29/pathology/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> Course Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Biology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思考</title>
      <link href="/2024/10/29/thought/"/>
      <url>/2024/10/29/thought/</url>
      
        <content type="html"><![CDATA[<h4 id="“缸中之脑”"><a href="#“缸中之脑”" class="headerlink" title="“缸中之脑”"></a>“缸中之脑”</h4><h4 id="网红经济"><a href="#网红经济" class="headerlink" title="网红经济"></a>网红经济</h4><h4 id="延迟退休"><a href="#延迟退休" class="headerlink" title="延迟退休"></a>延迟退休</h4>]]></content>
      
      
      <categories>
          
          <category> Course Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thoughts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生理学笔记</title>
      <link href="/2024/10/17/physiology/"/>
      <url>/2024/10/17/physiology/</url>
      
        <content type="html"><![CDATA[<h2 id="Chapter-1-Introduction"><a href="#Chapter-1-Introduction" class="headerlink" title="Chapter 1 Introduction"></a>Chapter 1 Introduction</h2><h3 id="1-1-The-scope-of-human-physiology"><a href="#1-1-The-scope-of-human-physiology" class="headerlink" title="1.1 The scope of human physiology"></a>1.1 The scope of human physiology</h3><p>Physiology is the study of how living organisms function.</p><h3 id="1-2-Internal-environment-and-homeostasis"><a href="#1-2-Internal-environment-and-homeostasis" class="headerlink" title="1.2 Internal environment and homeostasis"></a>1.2 Internal environment and homeostasis</h3><h4 id="1-2-1-Body-Organization"><a href="#1-2-1-Body-Organization" class="headerlink" title="1.2.1 Body Organization"></a>1.2.1 Body Organization</h4><h5 id="Tissue"><a href="#Tissue" class="headerlink" title="Tissue"></a>Tissue</h5><p>Muscle cells and tissue</p><ul><li>Skeletal, Cardiac, Smooth muscle cell</li></ul><p>Neurons and Nervous tissue</p><ul><li>Neuron controls other cell through conducting electrical signals</li></ul><p>Epithelial Cells and Epithelium</p><ul><li>Cuboidal, Columnar, Squamous, Ciliated cells</li><li>Simple, stratified epithelium</li></ul><p>Connective-Tissue Cells and Connective Tissue</p><ul><li>Bone, Cartilage, adipose tissue; loose, dense connective tissue;</li><li>Blood</li></ul><h5 id="Organs-and-Organ-Systems"><a href="#Organs-and-Organ-Systems" class="headerlink" title="Organs and Organ Systems"></a>Organs and Organ Systems</h5><ul><li>Organs are composed of two or more of the four kinds of tissues arranged in<br>various proportions and patterns.</li><li>Organ system is a collection of organs that together perform an overall function.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027200930500.png" alt="image-20241027200930500"></p><h5 id="Body-Fluid-Compartments"><a href="#Body-Fluid-Compartments" class="headerlink" title="Body Fluid Compartments"></a>Body Fluid Compartments</h5><p>Intracellular fluid</p><ul><li>the fluid contained within all the cells of the body (67%).</li></ul><p>Extracellular fluid</p><ul><li>plasma (20-25%)</li><li>interstitial fluid (75-80%)</li></ul><h4 id="1-2-2-Homeostasis"><a href="#1-2-2-Homeostasis" class="headerlink" title="1.2.2 Homeostasis"></a>1.2.2 Homeostasis</h4><p>Homeostasis is a state of dynamic constancy.</p><h3 id="1-3-Homeostatic-control-systems-in-the-body"><a href="#1-3-Homeostatic-control-systems-in-the-body" class="headerlink" title="1.3 Homeostatic control systems in the body"></a>1.3 Homeostatic control systems in the body</h3><p>Homeostatic control systems<br>• Feedback systems<br>• Resetting of set points<br>• Feedforward regulation</p><h3 id="1-4-Forms-of-functional-regulations-in-human-body"><a href="#1-4-Forms-of-functional-regulations-in-human-body" class="headerlink" title="1.4 Forms of functional regulations in human body"></a>1.4 Forms of functional regulations in human body</h3><p>Reflexes<br>• stimulus–response sequences</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027201348939.png" alt="image-20241027201348939"></p><h2 id="Chapter-2-Basic-Function-of-Cell"><a href="#Chapter-2-Basic-Function-of-Cell" class="headerlink" title="Chapter 2 Basic Function of Cell"></a>Chapter 2 Basic Function of Cell</h2><h3 id="2-1-Movement-of-molecules-across-the-cell-membranes"><a href="#2-1-Movement-of-molecules-across-the-cell-membranes" class="headerlink" title="2.1 Movement of molecules across the cell membranes"></a>2.1 Movement of molecules across the cell membranes</h3><h4 id="2-1-1-Functional-Structure-of-the-Cell-Membranes"><a href="#2-1-1-Functional-Structure-of-the-Cell-Membranes" class="headerlink" title="2.1.1 Functional Structure of the Cell Membranes"></a>2.1.1 Functional Structure of the Cell Membranes</h4><p>The plasma membrane forms the cell’s flexible outer surface, separating the cell’s internal environment from the external environment: selective barrier and communication</p><p>The cytoplasm consists of all the cellular contents between the plasma membrane and the nucleus: cytosol<br>and organelles</p><p>The nucleus is a large organelle that houses most of a cell’s DNA; Chromosome, a single molecule of DNA associated with several proteins, contains genes.</p><h5 id="2-1-1-1-Cell-Membrane"><a href="#2-1-1-1-Cell-Membrane" class="headerlink" title="2.1.1.1 Cell Membrane"></a>2.1.1.1 Cell Membrane</h5><p>Functions</p><ul><li>Regulate the passage of substances into and out of cells and between cell organelles and cytosol. 调节物质进出细胞</li><li>Detect chemical messengers arriving at the cell surface. 检测到达细胞表面的化学信使</li><li>Link adjacent cells together by membrane junctions. 通过膜连接将相邻的细胞连接在⼀起</li><li>Anchor cells to the extracellular matrix. 将细胞锚定于细胞外基质</li></ul><p>Membrane Structure</p><ul><li>The plasma membrane, a flexible yet sturdy barrier that surrounds and contains the cytoplasm of a cell. </li><li>Membranes are fluid structures because the lipids and many of the proteins are free to rotate and move sideways in their own half of the bilayer. </li><li>All membranes consist of a double layer of lipid molecules in which proteins are embedded. The major membrane lipids are phospholipids 磷脂.</li></ul><p>Phospholipids</p><ul><li>Phospholipids are amphipathic molecules 磷脂是两亲性分子<ul><li>Polar head and non-polar tail</li></ul></li><li>Lipid bilayer has the characteristics of a fluid 具有流体的特性<ul><li>Without chemical bonds, and fatty acids tail can bend ⽆化学键，脂肪酸尾部可弯曲</li></ul></li><li>Cholesterol is inserted into the lipid bilayer 胆固醇插⼊脂质双层<ul><li>limit the ordered packing of fatty acids 限制脂肪酸的有序堆积</li></ul></li></ul><p>Membrane Proteins</p><ul><li><strong>Integral proteins</strong> extend into or through the lipid bilayer and are firmly embedded in it. Most integral proteins are transmembrane proteins, which means that they span the entire lipid bilayer and protrude into both the cytosol and extracellular fluid. 整合蛋白延伸至脂质双层内或穿过脂质双层，并牢固地嵌入其中。大多数整合蛋白都是跨膜蛋白，这意味着它们跨越整个脂质双层，并突出到细胞溶胶和细胞外液中。</li><li><strong>Peripheral proteins</strong> are attached to the polar heads of membrane lipids or to integral proteins at the inner or outer surface of the membrane. 外周蛋白附着在膜脂的极性头部或膜内表面或外表面的整合蛋白上。</li></ul><p>The Fluid-Mosaic Model</p><ul><li>certain membrane proteins are anchored to cytoplasmic proteins 某些膜蛋⽩锚定在细胞质蛋⽩上</li><li>Proteins are covalently linked with membrane lipids to form structures called “lipid rafts” 蛋白质与膜脂质共价连接，形成称为“脂筏”的结构</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027202942693.png" alt="image-20241027202942693"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027203035814.png" alt="image-20241027203035814"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027203044553.png" alt="image-20241027203044553"></p><p>Membrane junctions</p><ul><li>Extracellular matrix-membrane 细胞外基质膜<ul><li>Integrins 整合素</li></ul></li><li>Desmosomes 桥粒<ul><li>Dense plaque: Cadherins 致密斑块：钙粘蛋⽩</li></ul></li><li>Tight junction 紧密连接<ul><li>Limited to a disk-shaped area of the membrane 仅限于膜的圆盘状区域</li></ul></li><li>Gap junction 间隙连接<ul><li>protein channels linking the cytosols of adjacent cells 连接相邻细胞胞质的蛋⽩质通道</li></ul></li></ul><h4 id="2-1-1-2-Cell-Organelles"><a href="#2-1-1-2-Cell-Organelles" class="headerlink" title="2.1.1.2 Cell Organelles"></a>2.1.1.2 Cell Organelles</h4><p>Nucleus</p><ul><li>Nuclear envelope, nuclear pore, chromatin, nucleolus</li></ul><p>Ribosome: protein factory</p><p>Endoplasmic reticulum</p><ul><li>protein folding, lipid, Calcium</li></ul><p>Golgi Apparatus</p><p>Secretory vesicles</p><p>Endosome</p><p>Mitochondria: bioenergetic hub</p><p>Peroxisome</p><p>Membrane-less organelles</p><ul><li>nuclear stress bodies, processing bodies (P bodies) and stress granules</li></ul><h4 id="2-1-2-Transmembrane-Transport-of-Molecules"><a href="#2-1-2-Transmembrane-Transport-of-Molecules" class="headerlink" title="2.1.2 Transmembrane Transport of Molecules"></a>2.1.2 Transmembrane Transport of Molecules</h4><p>Transport through the cell membrane, either directly through the lipid bilayer or through the proteins, occurs by one of two basic processes:</p><ul><li><p>Passive transport, is a movement of ions or other substances across cell membranes from a region of their higher concentration-in the direction down the concentration gradient.</p><p>  Simple diffusion; Facilitated diffusion; Osmosis.</p></li><li><p>Active transport is a movement of ions or other substances across the membrane against a concentration gradient.</p><p>  Primary active transport; Secondary active transport</p></li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027211519781.png" alt="image-20241027211519781"></p><h5 id="2-1-2-1-Diffusion"><a href="#2-1-2-1-Diffusion" class="headerlink" title="2.1.2.1 Diffusion"></a>2.1.2.1 Diffusion</h5><h6 id="Simple-Diffusion"><a href="#Simple-Diffusion" class="headerlink" title="Simple Diffusion"></a>Simple Diffusion</h6><p>The movement of molecules from one location to another solely as a result of their random thermal motion is known as <strong>diffusion</strong>. (The energy is from heat. Random movement with no preferred direction of movement)</p><p>The rate at which a substance is transported across a membrane refers to the number of molecules that cross the membrane in a unit of time, which is called the <strong>flux</strong>.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027205141232.png" alt="image-20241027205141232"></p><p>The magnitude of the net flux depends on several factors: the magnitude of the driving force, the membrane surface area, and the permeability of the membrane</p><p><strong>concentration difference 浓度差</strong>: the greater the concentration difference, the greater the magnitude of the net flux; </p><p><strong>temperature 温度</strong>: the higher the temperature,the greater the speed of molecular movement and the greater the net flux; </p><p><strong>mass of the molecule 分子质量</strong>: large molecules (for example,proteins) have a greater mass and lower speed than smaller molecules (for example, glucose) and thus have a smaller net flux;</p><p><strong>surface area 表面积</strong>: the greater the surface area between two regions, the greater the space available for diffusion and thus the greater the net flux; </p><p><strong>the medium 分子运动的介质</strong>: through which the molecules are moving-most polar molecules diffuse very slowly or not at all,whereas nonpolar molecules diffuse much more rapidly.</p><h6 id="Diffusion-Through-Ion-Channels"><a href="#Diffusion-Through-Ion-Channels" class="headerlink" title="Diffusion Through Ion Channels"></a>Diffusion Through Ion Channels</h6><p>Ions such as $Na^+, K^+, Cl^-, Ca^{2+}$ diffuse across plasma membranes at rates that are much faster than would be predicted from their very low solubility in membrane lipids.</p><p>Different cells have quite different permeabilities to these ions, whereas nonpolar substances have similar permeabilities.</p><p>Ion channels show a selectivity for the type of ion that can pass through them. This selectivity is based partially on the channel diameter and partially on the charged and polar surfaces of the protein subunits that form the channel walls and electrically attract or repel the ions.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027210153532.png" alt="image-20241027210153532"></p><p>Effect of electrical forces on ion movement</p><p>Positive and negative charges are distributed unequally between the inside and outside the cell. </p><p>Separation of electrical charge exist across the membrane, known as <strong>membrane potential</strong>. </p><p>Membrane potential function as electrical force to influence the movement of ions across the membrane.</p><p>Both the concentration difference and the electrical difference of ion determine the magnitude and direction of ion movement. </p><p>These two driving forces are collectively known as <strong>electrochemical gradient</strong> across the membrane.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027211433808.png" alt="image-20241027211433808"></p><h6 id="Regulation-of-diffusion-through-ion-channels"><a href="#Regulation-of-diffusion-through-ion-channels" class="headerlink" title="Regulation of diffusion through ion channels"></a>Regulation of diffusion through ion channels</h6><p>Three factors can alter the channel protein conformations:</p><ul><li>the binding of specific molecules to channel proteins may directly or indirectly produce either an change in the shape of the channel protein;such channels are termed <strong>ligand-sensitive channels</strong>, and the ligands that influence them are often chemical messengers. </li><li>Changes in the membrane potential can cause movement of the charged regions on a channel protein, altering its shape: <strong>voltage-gated channels</strong>. </li><li>Stretching the membrane may affect the conformation of some channel proteins: <strong>mechanosensitive channels</strong>.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027211422487.png" alt="image-20241027211422487"></p><h5 id="2-1-2-2-Mediated-Transport-System"><a href="#2-1-2-2-Mediated-Transport-System" class="headerlink" title="2.1.2.2 Mediated-Transport System"></a>2.1.2.2 Mediated-Transport System</h5><p>The movement of substances through a membrane by transporter(carrier) is called mediated transport.</p><ul><li>The solute must first binds to a specific site of transporter. </li><li>The molecules can move in either direction. </li><li>Transporter share similar characteristic with ion channel, but low efficiency. </li><li>Transporter can be saturated. (All binding site are occupied)</li></ul><p>Three factors determine the magnitude of solute flux through a mediated-transport system:</p><ul><li>The extent to which the transporter binding sites are saturated. </li><li>the number of transporters in the membrane</li><li>the rate at which the conformational change in the transport protein occurs.</li></ul><h6 id="Facilitated-diffusion"><a href="#Facilitated-diffusion" class="headerlink" title="Facilitated diffusion"></a>Facilitated diffusion</h6><ul><li>Like simple diffusion,molecules move across a membrane from high concentration to low concentration, or “downhill”in facilitated diffusion. </li><li>Facilitated diffusion uses a transporter to move solute. </li><li>Neither simple diffusion nor facilitated diffusion is coupled to ATP derived from metabolism.</li></ul><h6 id="Active-transport"><a href="#Active-transport" class="headerlink" title="Active transport"></a>Active transport</h6><ul><li>Moves a substance “uphill” across a membrane (against substance’s concentration gradient).</li><li>Consumes ATP</li><li>Needs transporter, or usually called pump<ul><li>the direct use of ATP in primary active transport</li><li>the use of an ion concentration difference across a membrane to drive the process in secondary active transport.</li></ul></li></ul><p>Primary Active Transport</p><ul><li>The transporter is an enzyme (ATPase) that catalyzes the breakdown of ATP and,in the process, phosphorylates itself. </li><li>Phosphorylation of the transporter protein (covalent modulation) changes its conformation and affinity binding with solutes. </li><li>For example, $Na^+/K^+ATPase,Ca^{2+}-ATPase, H^+-ATPase,H^+/K^+ATPase$</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027211353359.png" alt="image-20241027211353359"></p><p>Secondary Active Transport</p><ul><li>Moves ion(normally but not always Na+) across a membrane through established electrochemical gradient</li><li>Need transporter </li><li>Transport of another molecule is also coupled to ion movement (piggyback). </li><li>Both molecules bind to transporter. </li><li>The creation and maintenance of electrochemical gradient relies on the ATPase.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027211412123.png" alt="image-20241027211412123"></p><h5 id="2-1-2-3-Osmosis"><a href="#2-1-2-3-Osmosis" class="headerlink" title="2.1.2.3 Osmosis"></a>2.1.2.3 Osmosis</h5><p>Water (polar) diffuses across the plasma membranes of most cells very rapidly mediated by proteins known as aquaporins. </p><p>The net diffusion of water across a membrane is called osmosis. </p><p>Water concentration depends on the number of solute particles,regardless of chemical composition. </p><p>The total solute particle concentration of a solution is known as its osmolarity. </p><p>When a solution containing solutes is separated from pure water by a semipermeable membrane, the pressure that must be applied to the solution to prevent the net flow of water into it is known as the osmotic pressure of the solution.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027211918189.png" alt="image-20241027211918189"></p><p>Extracellular osmolarity and cell shape</p><ul><li>Unequal distribution of charged ion between inside and outside the cell contributes to the osmolarity of extracellular fluid. </li><li>A solution of nonpenetrating solute with the same osmolarity as normal extracellular fluid (about 300 mOsm) is said to be isotonic. </li><li>Isotonic solution would not cause the change in cell shape. </li><li>Hypertonic solution causes cells to shrink is, whereas hypotonic solution causes cells to swell. </li><li>Penetrating solutes do not contribute to the tonicity of a solution.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027212319704.png" alt="image-20241027212319704"></p><p>All hypoosmotic solutions are also hypotonic, whereas a hyperosmotic solution can be hypertonic, isotonic, or hypotonic.</p><h5 id="2-1-2-4-Endocytosis-and-Exocytosis"><a href="#2-1-2-4-Endocytosis-and-Exocytosis" class="headerlink" title="2.1.2.4 Endocytosis and Exocytosis"></a>2.1.2.4 Endocytosis and Exocytosis</h5><p>When living cells are observed under a light microscope,regions of the plasma membrane can be seen to fold into the cell, forming small pockets that pinch off to produce intracellular, membrane-bound vesicles that enclose a small volume of extracellular fluid. This process is known as endocytosis. </p><p>A similar process in the reverse direction,known as exocytosis,occurs when membrane-bound vesicles in the cytoplasm fuse with the plasma membrane and release their contents to the outside of the cell.</p><p>Transport of Molecules into Cells by Endocytosis</p><p>In pinocytosis also known as fluid endocytosis an endocytic vesicle encloses a small volume of extracellular fluid. (soluble molecules)</p><p>In phagocytosis cells engulf bacteria or large particles such as cell debris from damaged tissues.(pathogens or debris) In receptor-mediated endocytosis certain molecules in the extracellular fluid bind to specific proteins on the outer surface of the plasma membrane.(specific ligands)</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027212628802.png" alt="image-20241027212628802"></p><p>Transport of Molecules Out of Cells by Exocytosis</p><p>Exocytosis is basically endocytosis in reverse: vesicle inside the cell fuses with the plasma membrane and releases its contents into the extracellular fluid.</p><p>Exocytosis has three functions:</p><ul><li>to add components to the plasma membrane</li><li>to recycle receptors removed from the plasma membrane by endocytosis </li><li>to secrete specific substances out of the cell and into the extracellular fluid</li></ul><h3 id="2-2-Transmembrane-signal-transductions"><a href="#2-2-Transmembrane-signal-transductions" class="headerlink" title="2.2 Transmembrane signal transductions"></a>2.2 Transmembrane signal transductions</h3><h4 id="2-2-1-Overview"><a href="#2-2-1-Overview" class="headerlink" title="2.2.1 Overview"></a>2.2.1 Overview</h4><p>The process by which intercellular chemical signals communicate with cells and thereby elicit a physiological response is called signal transduction. 细胞间化学信号与细胞通讯并从而引起生理反应的过程称为信号转导。</p><p>Signal transduction enables coordination of cell function:</p><ul><li>Cell division (proliferation)</li><li>Cell development (differentiation)</li><li>Secretion</li><li>Contraction / relaxation</li><li>Firing of nerves</li></ul><p>Cellular Signalling</p><ul><li>Aberrant cellular signalling underlies disease processes</li><li>Many medications target to cellular signalling processes</li><li>Improved knowledge of cellular signalling processes continues to identify novel targets for drug design and improved therapy</li></ul><p>Intercellular Signals</p><ul><li>neurotransmitters and hormones</li><li>proteins, e.g. insulin</li><li>small peptides, e.g. bradykinin</li><li>amino acids, e.g. glutamate</li><li>steroids, e.g. oestrogen, testosterone</li><li>vitamins</li><li>fatty acid derivatives, e.g. prostaglandins, leukotrienes</li><li>gas, e.g. nitric oxide (NO), H2S</li></ul><h4 id="2-2-2-Receptors"><a href="#2-2-2-Receptors" class="headerlink" title="2.2.2 Receptors"></a>2.2.2 Receptors</h4><ul><li>typically integral membrane protein at the plasma membrane </li><li>recognise and bind to specific chemicals (ligands)</li><li>receptor numbers can be increased (up-regulation) and decreased (down-regulation)</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027214010295.png" alt="image-20241027214010295"></p><ul><li>Specificity: Receptors show specificity for the messenger; that is,they generally bind only one messenger or a class of messengers.</li><li>Affinity: The strength of the binding between a messenger<br>  and its receptor</li><li>Saturation</li><li>Competition</li></ul><h5 id="Ligands"><a href="#Ligands" class="headerlink" title="Ligands"></a>Ligands</h5><p>Ligands are chemical messengers which bind to receptor proteins</p><p>Agonist – ligand with two important properties</p><p>Antagonist – ligand which blocks the receptor has affinity but not efficacy</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027214255208.png" alt="image-20241027214255208"></p><h4 id="2-2-3-Six-steps-of-cellular-signalling"><a href="#2-2-3-Six-steps-of-cellular-signalling" class="headerlink" title="2.2.3 Six steps of cellular signalling"></a>2.2.3 Six steps of cellular signalling</h4><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027214325061.png" alt="image-20241027214325061"></p><h4 id="2-2-4-Signal-Transduction-pathway"><a href="#2-2-4-Signal-Transduction-pathway" class="headerlink" title="2.2.4 Signal Transduction pathway"></a>2.2.4 Signal Transduction pathway</h4><p>Signal transduction pathways: The “signal”is the receptor activation, and “transduction” denotes the process by which a stimulus is transformed into a response. </p><p>Signal transduction pathways differ at the very outset for lipid-soluble and lipid-insoluble messengers, the receptors for these two broad chemical classes of messenger are in different locations-the former inside the cell and the latter in the plasma membrane of the cell.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241027214907468.png" alt="image-20241027214907468"></p><p>Signal Transduction Mechanisms for Responses<br>Mediated by Intracellular Receptors</p><p>Most lipid-soluble messengers are hormones like steroid hormones, the thyroid hormones,and the steroid derivative, 1,25-dihydroxy vitamin D3. Structurally these hormones are all closely related, and their receptors constitute the steroid hormone receptor “superfamily.” </p><p>The receptors are intracellular and are inactive when no messenger is bound to them; the inactive receptors are mainly in the cell nucleus</p><p>Step of signalling</p><ol><li>A receptor is located in the nucleus,the hormone diffuses into the nucleus and binds to it,forming a hormone-receptor complex. </li><li>Inside the nucleus,the hormone-receptor complex functions as a transcription factor by binding to a region of DNA called the hormone response element (HRE), which is located at the beginning of a specific gene. </li><li>Binding of the complex to the HRE activates or deactivates the gene,which affects transcription of mRNA and ultimately increases or decreases synthesis of the protein coded by the gene. </li><li>The mRNA moves into the cytosol. </li><li>The mRNA is translated by ribosomes to yield proteins.</li></ol><p>Mechanism of Action for Steroid Hormones</p><ul><li>The receptors for steroid hormones are known as nuclear receptors. For the steroid hormone-receptor complex to activate (or deactivate)a particular gene, two complexes must bind to the HRE in a process called dimerization.</li></ul><p>Signal Transduction Mechanisms for Responses<br>Mediated by Membrane-Bound Receptors</p><ul><li>Signal transduction mediated by G-protein-linked receptor </li><li>Signal transduction mediated by ionotropic receptor </li><li>Signal transduction mediated by enzyme-linked receptor</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028154212510.png" alt="image-20241028154212510"></p><p>Signal transduction mediated by G-protein-linked receptor</p><ul><li>The signal transduction mediated by G-protein-linked receptor is achieved by the cascade activities of the membranous receptors,G protein,G protein effector, second messenger and other molecules in cell membrane and cytoplasm. </li><li>G-Protein-linked receptor: The structure consisted by a peptide chain that traverses the membrane seven times,belong to the same family: 7- transmembrane receptors </li><li>The conformation of the receptor changes after the ligand binding to them,and then activate G protein.</li></ul><p>G protein</p><ul><li>-Bound to the receptor is a protein located on the inner (cytosolic) surface of the plasma membrane and belonging to the family of proteins known as G proteins. </li><li>The binding of a first messenger to the receptor changes the conformation of the receptor. This change causes one of the three subunits of the G protein to link up with still another plasma-membrane protein, either an ion channel or an enzyme. </li><li>These ion channels and enzymes are termed plasma membrane effector proteins since they mediate the next steps in the sequences of events leading to the cell’s response.</li></ul><p>G protein effector</p><ul><li>Enzymes can catalyze the generation of second messengers,such as adenylyl cyclase phospholipase c, guanylyl cyclase….. </li><li>Ion channels </li><li>They mediate the next steps in the sequence of events leading to the cell’s response.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028154158066.png" alt="image-20241028154158066"></p><p>Second messenger</p><ul><li>First messengers: the intercellular chemical messengers that reach the cell from the extracellular fluid and bind to their specific receptors. </li><li>Second messengers: substances that enter or are generated in the cytoplasm as a result of receptor activation by the first messengers. </li><li>Serve as chemical relays from the plasma membrane to the biochemical machinery inside the cell. </li><li>CAMP,IP3,DG,cGMP,Ca2+</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028154408783.png" alt="image-20241028154408783"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028154414681.png" alt="image-20241028154414681"></p><p>Signal transduction mediated by ionotropic receptor</p><ul><li>Channel-linked receptors are a type of ligand-gated channel in which the ligand is a messenger that binds to a receptor. </li><li>The binding of a messenger to the receptor / ion channel causes the channel to open, increasing the membrane’s permeability for that specific ion. </li><li>Open ion channels allow a specific ion or class of ions to move across the plasma membrane down its electrochemical gradient. </li><li>Ion movement into or out of the cell can have two different effects on the target cell: (1) Ions entering and leaving can change the electrical properties of the cell and (2) entering ions can interact with proteins inside the cell to induce a response such as muscle contraction, secretion, change in metabolism, or altered transport of a substance.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028155026747.png" alt="image-20241028155026747"></p><p>Signal transduction mediated by enzyme-linked receptor</p><ul><li>The receptor side faces the interstitial fluid and the enzyme side faces the cytosol</li><li>A messenger binds to the receptor, changing its conformation. </li><li>The conformation change activates the tyrosine kinase. </li><li>The tyrosine kinase then catalyses phosphorylation of an intracellular protein. </li><li>Phosphorylation of the protein changes its activity by covalent regulation, bringing about a response in the target cell.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028155020227.png" alt="image-20241028155020227"></p><h3 id="2-3-Electrical-activities-of-the-cell"><a href="#2-3-Electrical-activities-of-the-cell" class="headerlink" title="2.3 Electrical activities of the cell"></a>2.3 Electrical activities of the cell</h3><h5 id="2-3-1-Electrical-Activities-of-the-Cell"><a href="#2-3-1-Electrical-Activities-of-the-Cell" class="headerlink" title="2.3.1 Electrical Activities of the Cell"></a>2.3.1 Electrical Activities of the Cell</h5><ul><li>The predominant solutes in the extracellular fluid are sodium and chloride ions. The intracellular fluid contains high concentrations of potassium ions and ionized nonpenetrating molecules, particularly proteins, with negatively charged side chains and phosphate compounds. </li><li>According to the physical principle, the oppositely charged molecules will move toward each other. </li><li>Plasma membrane separate the electrical charges with opposite sign.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028155012843.png" alt="image-20241028155012843"></p><p>Bioelectricity</p><ul><li>Separated electric charges of opposite sign have the potential to come together, which is called an electric potential (V), or a potential difference because it is determined by the difference in the amount of charge between two points. </li><li>The movement of electric charge is called a current (I). The hindrance to electrical charge movement is known as resistance (R). </li><li>The lipid layers of the plasma membrane (insulator) sperate two aqueous compartments (conductor): the intracellular fluid and the extracellular fluid.</li></ul><h4 id="2-3-2-Resting-Membrane-Potential"><a href="#2-3-2-Resting-Membrane-Potential" class="headerlink" title="2.3.2 Resting Membrane Potential"></a>2.3.2 Resting Membrane Potential</h4><ul><li>All living cells have a potential difference across their plasma membrane. </li><li>When the cell is at rest this potential difference is called the resting membrane potential of the cell A tiny excess of negative ions inside the cell and an excess of positive ions outside. </li><li>Extracellular fluid is designated as the voltage reference point,and the polarity of the membrane potential is stated in terms of the sign of the excess charge on the inside of the cell by comparison.</li><li>The ion concentration difference between inside and outside of a cell is established due to Na+/K+-ATPase activity. </li><li>One certain ion moves across the membrane creates the potential difference. </li><li>The differences in membrane permeabilities to different ion determines their movement.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028155841504.png" alt="image-20241028155841504"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028155939904.png" alt="image-20241028155939904"></p><p>outflux: The concentration gradient (the chemical gradient)</p><p>influx: The electrical gradient</p><blockquote><p>An <strong>electrochemical gradient</strong> is a gradient of <a href="https://en.wikipedia.org/wiki/Electrochemical_potential">electrochemical potential</a>, usually for an <a href="https://en.wikipedia.org/wiki/Ion">ion</a> that can move across a <a href="https://en.wikipedia.org/wiki/Membrane">membrane</a>. The gradient consists of two parts:</p><ul><li>The chemical gradient, or difference in <a href="https://en.wikipedia.org/wiki/Concentration">solute concentration</a> across a membrane.</li><li>The electrical gradient, or difference in <a href="https://en.wikipedia.org/wiki/Electric_charge">charge</a> across a membrane.</li></ul></blockquote><p>The equilibrium potential for K+ in cell</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028183632869.png" alt="image-20241028183632869"></p><p>A simple cell has a concentration of 150 mM K+ inside and 5 mM K+ outside. At these concentrations, the equilibrium potential for K+ can be calculated out as -90mV.</p><p>If only Na+ channels are open in plasma membrane, Na+ flux will move under its electrochemical gradient as similar as K+ does, but at reverse direction.</p><p>According to the Nernst equation, the Na+ flux through open channels will tend to bring the membrane potential toward +60 mV at its typical concentration.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028183730481.png" alt="image-20241028183730481"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028183734680.png" alt="image-20241028183734680"></p><p>The greater the membrane permeability to an ion species, the greater the contribution that ion species will make to the membrane potential.</p><p>The neuron compensates for the movement of Na+ and K+</p><p>the resting potential is generated across the plasma membrane largely because of the movement of K+out of the cell down its concentration gradient through open K+channels (called leak K+ channels)</p><p>a small number of open Na+ channels does pull the membrane potential slightly toward the Na+ equilibrium potential.</p><p>The Na+/K+-ATPase pump maintains the resting membrane potential</p><p>A membrane enzyme actively transports ions to compensate for Na+ and K+ leaks.</p><p>The pump uses the energy of ATP to move Na+ and K+ against their electrochemical gradients. Three Nat ions are pumped out of the neuron for every two K+ions that are pumped in (electrogenic pump).</p><h4 id="2-3-3-Graded-Potentials-and-Action-Potentials"><a href="#2-3-3-Graded-Potentials-and-Action-Potentials" class="headerlink" title="2.3.3 Graded Potentials and Action Potentials"></a>2.3.3 Graded Potentials and Action Potentials</h4><p>Transient changes in the membrane potential from its resting level produce electric signals. These signals occur in two forms: graded potentials and action<br>potentials.</p><p>The membrane is said to be depolarized when its potential is less negative (closer to zero) than the resting level. Overshoot refers to a reversal of the membrane potential polarity-that is, when the inside of a cell becomes positive relative to the outside. When a membrane potential that has been depolarized returns toward the resting value, it is said to be repolarizing. The membrane is hyperpolarized when the potential is more negative than the resting level.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028185352580.png" alt="image-20241028185352580"></p><p>Graded Potentials: Result from a net gain of Na+ ions</p><ul><li>Small and confined to a localised small region of membrane</li><li>The potential dissipates (in other words the charge leaks away from the membrane</li><li>Ions are diluted down by the bulk of the intracellular fluid and K+ moves out to restore the resting membrane potential</li><li>Its size is dependent upon the strength of the stimulus.</li><li>Areas downstream of the initial depolarisation are affected by the movement of these ions (i.e. these areas become depolarized).</li><li>The larger the potential the further it will tend to travel.</li><li>Depending upon the initiating event, graded potentials can occur in either a depolarizing or hyperpolarizing direction and their magnitude is related to the magnitude of the initiating event.</li><li>The magnitude of the current decreases with the distance from the initial site of the potential change.</li><li>Local current is decremental; that is, its amplitude decreases with increasing distance from the site of origin of the potential. The resulting change in membrane potential from resting level therefore also decreases with the distance from the potential’s site of origin.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028190210042.png" alt="image-20241028190210042"></p><p>The Action Potential</p><p>Nerve and muscle cells as well as some endocrine, immune, and reproductive cells have plasma membranes capable of producing action potentials. These membranes are called excitable membranes, and their ability to generate action potentials is known as excitability. Whereas all cells are capable of conducting graded potentials, only excitable membranes can conduct action potentials. The propagation of action potentials is the mechanism used by the nervous system to communicate over long distances.</p><p>Voltage-Gated Ion Channels</p><p>Na+and K+channels (voltage-gated) are similar in having sequences of charged amino acid residues in their structure that make the channels reversibly change shape in response to changes in membrane potential. When the membrane is at a negative potential (for example, at the resting membrane potential), both types of channels tend to close, whereas membrane depolarization tends to open them.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028191410313.png" alt="image-20241028191410313"></p><p>Action Potential Mechanism</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028191427028.png" alt="image-20241028191427028"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028191442529.png" alt="image-20241028191442529"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028191458890.png" alt="image-20241028191458890"></p><p>The depolarizing phase of the action potential is due to the opening of voltage-gated sodium channels, which increases the membrane permeability to sodium ions several hundredfold. (1) the sodium channels that opened during the depolarization phase undergo inactivation near the peak of the action potential, which causes them to close; and (2) voltage-gated potassium channels, which open more slowly than sodium channels,open in response to the depolarization.</p><p>Refractory Periods</p><ul><li>During the action potential, a second stimulus, no matter how strong, will not produce a second action potential, and the membrane is said to be in its absolute refractory period. (the voltage-gated Na+ channels are inactivated)</li><li>Following the absolute refractory period, there is an interval during which a second action potential can be produced, but only if the stimulus strength is considerably greater than usual. This is the relative refractory period, which can last 10 to 15 ms or longer in neurons and coincides roughly with the period of afterhyperpolarization. (only partial Na+ channels are recovered and K+ permeability is still above resting period.)</li><li>Supernormal period is most of after-depolarization potential when the threshold intensity is lower than normal value resulting from the membrane potential close to the threshold potential, and the action potential size is still less than the normal.</li><li>Subnormal period is the last stage coincides roughly with the period of after-hyperpolarization. Large stimulus is needed to depolarize the membrane above the threshold potential due to the hyperpolarized membrane potential.</li></ul><p>Threshold and the All-or-None Response</p><ul><li>Action potentials occur only when the net movement of positive charge through ion channels is inward. The membrane potential at which this occurs is called the threshold potential, and stimuli that are just strong enough to depolarize the membrane to this level are threshold stimuli.</li><li>The threshold of most excitable membranes is about 15 mV less negative than the resting membrane potential. Thus, if the resting potential of a neuron is 70 mV, the threshold potential may be 55 mV.</li><li>At depolarizations less than threshold, outward potassium movement still exceeds sodium entry, and the positive-feedback cycle cannot get started despite the increase in sodium entry. In such cases, the membrane will return to its resting level as soon as the stimulus is removed, and no action potential is generated. These weak depolarizations are subthreshold potentials, and the stimuli that cause them are subthreshold stimuli.</li><li>Changes in the membrane potential with increasing strength of depolarizing stimulus. When the membrane potential reaches threshold, action potentials are generated. Increasing the stimulus strength above threshold level does not cause larger action potentials.</li><li>Action potentials are all-or-none. The actual shape and amplitude of the action potential depends on the membrane conditions existing at a given time.</li><li>A single action potential cannot convey information about the magnitude of the stimulus that initiated it.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028193802888.png" alt="image-20241028193802888"></p><p>How does the action potential move along the length of the axon?</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028193900560.png" alt="image-20241028193900560"></p><p>Propagation of Action Potentials in Unmyelinated Axons</p><ul><li>Action potential doesn’t move but “sets off” a new action potential in the region of the axon just ahead of it. </li><li>Excitable membranes are able to conduct action potentials in either direction, the direction of propagation being determined by the stimulus location.</li><li>The larger the fiber diameter, the faster the action potential propagates.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028194052729.png" alt="image-20241028194052729"></p><p>Why does myelination speed up conduction? (Saltatory Conduction)</p><ul><li>In axons that are sheathed in myelin, action potentials are propagated by a specialized type of electrotonic conduction called saltatory conduction.</li><li>The nodes of Ranvier are gaps in the myelin where the axon membrane lacks insulation, is exposed to the interstitial fluid, and has a high<br>  concentration of voltage gated sodium and potassium channels.</li><li>The separation of charge in the intracellular fluid causes current to flow from one node of Ranvier to the next.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028194716804.png" alt="image-20241028194716804"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028194723849.png" alt="image-20241028194723849"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028194809920.png" alt="image-20241028194809920"></p><h4 id="2-3-4-Synapses"><a href="#2-3-4-Synapses" class="headerlink" title="2.3.4 Synapses"></a>2.3.4 Synapses</h4><p>TRANSMITTER:<br>diffusible molecule<br>released from nerve terminal<br>triggers response in innervated cell</p><p>RECEPTOR:<br>chemical group on cell surface<br>part of protein molecule<br>binds transmitter<br>mediates response</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028223401406.png" alt="image-20241028223401406"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028223502020.png" alt="image-20241028223502020" style="zoom:50%;"></p><ol><li>Calcium channels open when the axon terminal is depolarized. </li><li>More calcium ions flow into the axon terminal. </li><li>Calcium causes synaptic vesicles to release the neurotransmitters into the synaptic cleft. </li><li>Neurotransmitter molecules bind to receptors and </li><li>induce next response.</li><li>Some neurotransmitter molecules are degraded by enzymes.</li><li>Neurotransmitter molecules can be reuptaked into the presynaptic neuron </li><li>others simply diffuse out of the cleft.</li></ol><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028223527279.png" alt="image-20241028223527279"></p><p>Signal Transduction Mechanisms at Chemical Synapses</p><ul><li>The binding of the neurotransmitter opens the ion channel and changes the electrical properties of the postsynaptic neuron. The typical response is a change in the membrane potential, called a postsynaptic potential (PSP).</li><li>An excitatory synapse is one that brings the membrane potential of the postsynaptic neuron closer to the threshold for generating an action potential. This depolarization, which is called an excitatory postsynaptic potential (EPSP).</li><li>An inhibitory synapse is one that decreases the likelihood that an action potential will be generated in the postsynaptic neuron. When a neurotransmitter causes potassium channels to open,potassium will move out of the cell, hyperpolarizing it. This hyperpolarization is called an<br>  inhibitory postsynaptic potential (IPSP) .</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028223855097.png" alt="image-20241028223855097"></p><h3 id="2-4-Muscular-contraction"><a href="#2-4-Muscular-contraction" class="headerlink" title="2.4 Muscular contraction"></a>2.4 Muscular contraction</h3><h4 id="2-4-1-Structure"><a href="#2-4-1-Structure" class="headerlink" title="2.4.1 Structure"></a>2.4.1 Structure</h4><p>The contractile cells of the body can be classified into three major groups based on their shape, number and position of nuclei, presence of striations and whether they are under voluntary or involuntary control.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028225719274.png" alt="image-20241028225719274"></p><p>The term muscle refers to a number of muscle fibers bound together by connective tissue. Muscles are usually linked to bones by bundles of collagen fibers known as tendons, which are located at each end of the muscle.</p><p>Skeletal Muscle</p><ul><li>The most striking feature seen when observing skeletal-or cardiac-muscle fibers through a light microscope is a series of light and dark bands perpendicular to the long axis of the fiber. Because of this characteristic banding,both types are known as striated muscle. </li><li>The striated pattern in skeletal and cardiac fibers results from the arrangement of numerous thick and thin filaments in the cytoplasm into approximately cylindrical bundles (1 to 2 um in diameter) known as myofibrils. </li><li>Most of the cytoplasm of a fiber is filled with myofibrils,each of which extends from one end of the fiber to the other and is linked to the tendons at the ends of the fiber.</li></ul><p>Muscle fiber (single muscle cell)</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028230047625.png" alt="image-20241028230047625"></p><p>The thick and thin filaments in each myofibril are arranged in a repeating pattern along the length of the myofibril. One unit of this repeating pattern is known as a sarcomere.</p><p>Structure of Myofibril</p><ul><li>The thick filaments are composed almost entirely of the contractile protein myosin.</li><li>The thin filaments (which are about half the diameter of the thick filaments) contain the contractile protein actin, as well as to two other proteins - troponin and tropomyosin - that play important roles in regulating contraction.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028230231359.png" alt="image-20241028230231359"></p><p>Arrangements of Myofilaments</p><ul><li>The arrangement of thick and thin myofilaments forms the light and dark bands (striations) along the myofibril. </li><li>The thick filaments are located in the middle of each sarcomere, where their orderly parallel arrangement produces a wide, dark band known as the A band.</li><li>Each sarcomere contains two sets of thin filaments, one at each end. One end of each thin filament is anchored to a network of interconnecting proteins known as the Z line, whereas the other end overlaps a portion of the thick filaments.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028230342496.png" alt="image-20241028230342496"></p><p>Structure of Myofibril</p><ul><li>A light band, known as the I band, lies between the ends of the A bands of two adjacent sarcomeres and contains those portions of the thin filaments that do not overlap the thick filaments. </li><li>The H zone is a narrow light band in the center of the A band. It corresponds to the space between the opposing ends of the two sets of thin filaments in each sarcomere. </li><li>A narrow, dark band in the center of the H zone is known as the M line and corresponds to proteins that link together the central region of the thick filaments.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028230434086.png" alt="image-20241028230434086"></p><h4 id="2-4-2-Mechanism-of-striated-muscle-contraction"><a href="#2-4-2-Mechanism-of-striated-muscle-contraction" class="headerlink" title="2.4.2 Mechanism of striated muscle contraction"></a>2.4.2 Mechanism of striated muscle contraction</h4><p>The Sliding Filament Theory: The contraction of a muscle cell occurs as the thin filaments slide past the thick filaments.</p><ol><li><p>Ach is synthesized in the cytosol of the axon terminals of neurons.</p><p> <img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028230629236.png" alt="image-20241028230629236"></p></li><li><p>Ach is transported into and stored in synaptic vesicles.</p></li><li><p>An action potential triggers its release by exocytosis into synapse cleft.</p></li><li><p>Ach can bind to receptors on the postsynaptic cell.</p></li><li><p>Ach can be degraded into choline and acetate by an enzyme called acetylcholinesterase (AChE).</p></li><li><p>Choline is taken back into the presynaptic cell and can be used to synthesize more acetylcholine. The acetate diffuses away from the synapse and enters the bloodstream.</p></li></ol><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028230643342.png" alt="image-20241028230643342"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028230830209.png" alt="image-20241028230830209"></p><p>SOMATIC NERVOUS SYSTEM</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028230739614.png" alt="image-20241028230739614"></p><p>Excitation–Contraction Coupling</p><p>At the end of sarcoplasmic reticulum there are two enlarged regions, known as lateral sacs that are connected to each other by a series of smaller tubular elements. The lateral sacs store the calcium that is released following membrane excitation. </p><p>A separate tubular structure, the transverse tubule (T tubule), passing between adjacent lateral sacs and eventually joining the plasma membrane The lumen of the T tubule is continuous with the extracellular fluid surrounding the muscle fiber. The membrane of the T tubule is able to propagate action potentials.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028230946011.png" alt="image-20241028230946011"></p><ol><li>Once initiated in the plasma membrane,an action potential is rapidly conducted over the surface of the fiber and into its interior by way of the T tubules. </li><li>The action potential in a T tubule adjacent to the lateral sacs activates voltage-gated proteins in the T-tubule membrane that are physically or chemically linked to calcium- release channels in the membrane of the lateral sacs. </li><li>Depolarization of the T tubule by an action potential thus leads to the opening of the calcium channels in the lateral sacs, allowing calcium to diffuse from the calcium-rich lumen of the lateral sacs into the cytosol. The rise in cytosolic calcium concentration is normally enough to turn on all the cross bridges in the fiber. </li><li>A contraction continues until calcium is removed from troponin,and this is achieved by lowering the calcium concentration in the cytosol back to its pre-release level. </li><li>The cytosolic calcium concentration remains elevated,and the contraction continues for some time after a single action potential.</li></ol><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028231239944.png" alt="image-20241028231239944"></p><p>What cytoplasmic Ca2+ did?</p><ul><li>An action potential brings about the release of Ca2+ from the terminal cisternae of the sarcoplasmic reticulum. </li><li>Ca2+ flood into the cytosol and bind to the troponin, causing a change in the conformation of the troponin-tropomyosin complex. </li><li>This conformational change exposes the binding sites on actin.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232018963.png" alt="image-20241028232018963"></p><p>Sliding-Filament Mechanism</p><p>In skeletal muscle myosin molecules are bundled together to form thick filaments.</p><p>MYOSIN MOLECULE WITH HINGED HEAD AND TAIL</p><ul><li>The shape of an individual myosin molecule is similar to a golf club with two heads. </li><li>The heads (cross bridge) have the ability to move back and forth. </li><li>The flexing movement of the head provides the ‘power for muscle contraction. </li><li>The hinge portion of the tail allows for movement so that the cross bridge can bind to actin (thin filament).</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232338897.png" alt="image-20241028232338897"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232357443.png" alt="image-20241028232357443"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232431633.png" alt="image-20241028232431633"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232451266.png" alt="image-20241028232451266"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232515422.png" alt="image-20241028232515422"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232539296.png" alt="image-20241028232539296"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232556735.png" alt="image-20241028232556735"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232609228.png" alt="image-20241028232609228"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232625459.png" alt="image-20241028232625459"></p><p>cross-bridge cycle</p><ol><li>attachment of the cross-bridge to a thin filament;</li><li>movement of the cross-bridge, producing tension in the thin filament;</li><li>detachment of the cross-bridge from the thin filament;</li><li>Energizing the cross-bridge so it can again attach to a thin filament and repeat the cycle.</li></ol><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232800749.png" alt="image-20241028232800749"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028232824348.png" alt="image-20241028232824348"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028233030882.png" alt="image-20241028233030882"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028233048933.png" alt="image-20241028233048933"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028233104250.png" alt="image-20241028233104250"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028233118191.png" alt="image-20241028233118191"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028233134984.png" alt="image-20241028233134984"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028233154294.png" alt="image-20241028233154294"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241028233213734.png" alt="image-20241028233213734"></p><h4 id="2-4-3-Mechanics-of-Single-Fiber-Contraction"><a href="#2-4-3-Mechanics-of-Single-Fiber-Contraction" class="headerlink" title="2.4.3 Mechanics of Single-Fiber Contraction"></a>2.4.3 Mechanics of Single-Fiber Contraction</h4><ul><li>The force exerted on an object by a contracting muscle is known as muscle tension and the force exerted on the muscle by an object (usually its weight) is the load. </li><li>When a muscle develops tension but does not shorten (or lengthen), the contraction is said to be isometric (constant length). </li><li>A contraction in which the muscle shortens or lengthens while the load on the muscle remains constant, is said to be isotonic (constant tension). </li><li>Muscle tension and load are opposing forces. Whether or not force generation leads to fiber shortening depends on the relative magnitudes of the tension and the load.</li></ul><p>Isometric and isotonic contractions</p><p>Isometric = same measurement i.e. constant length.<br>For example, when you exert increasing force say to try to pick up an immovable object. The muscle does not shorten but tension is produced.</p><p>Isotonic = same tone i.e. same tension.<br>The muscle shortens but the load against which it contracts is constant, e.g. when you pick up a weight.</p><ul><li>During an isotonic contraction,the cross bridges bound to actin move to their angled positions, causing shortening of the sarcomeres. In contrast, during an isometric contraction, the bound cross bridges are unable to move the thin filaments because of the load on the muscle fiber, but they do exert a force on the thin filaments-isometric tension. </li><li>During a lengthening contraction,the cross bridges are pulled backward toward the Z lines by the load while still bound to actin and exerting force. Thus, the chemical changes in the contractile proteins during each type of contraction are the same. </li><li>The end result is determined by the magnitude of the load on the muscle.</li></ul><p>Twitch Contractions</p><ul><li>The mechanical response of a single muscle fiber to a single action potential is known as a <strong>twitch</strong>. </li><li>Following the action potential, there is an interval of a few milliseconds, known as the <strong>latent period</strong>. </li><li>The time interval from the beginning of tension development at the end of the latent period to the peak tension is the <strong>contraction time</strong>.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029095212775.png" alt="image-20241029095212775"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029095332642.png" alt="image-20241029095217855"></p><p>The characteristics of an isotonic twitch depend upon the magnitude of the load being lifted: at heavier loads, the latent period is longer, and the velocity of shortening (distance shortened per unit of time), the duration of the twitch, and the distance shortened are all slower or shorter.</p><p>The heavier the load, the longer it takes for the tension to increase to the value of the load, when shortening will begin. If the load on a fiber is increased, eventually a load is reached that the muscle is unable to lift, the velocity and distance of shortening will be zero, and the contraction will become completely isometric.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029095815545.png" alt="image-20241029095815545"></p><p>Frequency-Tension Relation</p><ul><li>The increase in muscle tension from successive action potentials occurring during the phase of mechanical activity is known as summation. </li><li>A maintained contraction in response to repetitive stimulation is known as a tetanus (tetanic contraction). </li><li>At low stimulation frequencies, the tension may oscillate as the muscle fiber partially relaxes between stimuli, producing an unfused tetanus. A fused tetanus, with no oscillations, is produced at higher stimulation frequencies.</li><li>Note: depolarisation is conducted along the T- tubules to the SR membrane, within a few milliseconds every sarcomere in a cell contracts simultaneously.</li><li>Action potentials cannot summate or fuse together because they are all-or-nothing as in nerve.</li><li>However, the contractile responses can summate to form unfused (at around 10 Hz) and fused (at around 100 Hz) tetani.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029100044068.png" alt="image-20241029100044068"></p><p>Length-Tension Relation</p><ul><li>One can stretch a muscle fiber to various lengths and measure the magnitude of the active tension generated in response to stimulation at each length. </li><li>The amount of active tension developed by a muscle fiber during contraction, and thus its strength, can be altered by changing the length of the fiber before contraction. </li><li>The length at which the fiber develops the greatest isometric active tension is termed the optimal length.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029100117484.png" alt="image-20241029100117484"></p><p>Whole-Muscle Contraction</p><ul><li>The total tension a muscle can develop depends upon two factors:<br>  (1) the amount of tension developed by fiber, and (2) the number of fibers contracting at any time.</li><li>The number of fibers contracting at any time depends on:<br>  (1) the number of fibers in each motor unit (motor unit size), and (2) the number of active motor units.</li><li>The process of increasing the number of motor units that are active in a muscle at any given time is called recruitment. It is achieved by increasing the excitatory synaptic input to the motor neurons. The greater the number of active motor neurons, the more motor units recruited, and the greater the muscle tension.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029100224061.png" alt="image-20241029100224061"></p><h2 id="Chapter-3-Blood-Physiology"><a href="#Chapter-3-Blood-Physiology" class="headerlink" title="Chapter 3 Blood Physiology"></a>Chapter 3 Blood Physiology</h2><h3 id="3-1-Plasma"><a href="#3-1-Plasma" class="headerlink" title="3.1 Plasma"></a>3.1 Plasma</h3><p>General Functions of Blood</p><ol><li>Transportation<br> • O2 &amp; CO2<br> • nutrients and hormones<br> • metabolic wastes</li><li>Regulation<br> • extracellular fluid pH<br> • body temperature</li><li>Protection<br> • clotting mechanism<br> • immune defense</li></ol><p>Components of Blood</p><p>Hematocrit</p><ul><li>55% plasma</li><li>45% cells</li><li>99% RBCs</li><li>&lt; 1% WBCs and platelets</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029100426627.png" alt="image-20241029100426627"></p><ul><li>Percentage of blood occupied by cells<ul><li>female normal range: 38 - 46% (average of 42%)</li><li>male normal range: 40 - 54% (average of 46%): testosterone</li></ul></li><li>Anemia<ul><li>not enough RBCs or not enough hemoglobin</li></ul></li><li>Polycythemia<ul><li>too many RBCs (over 65%)</li><li>dehydration, tissue hypoxia, blood doping in athletes</li></ul></li></ul><p>Physical Characteristics of Blood</p><ul><li>Thicker (more viscous) than water and flows more slowly than water</li><li>Temperature of 100.4 degrees F</li><li>pH 7.4 (7.35-7.45)</li><li>8 % of total body weight</li><li>Blood volume<ul><li>5 to 6 liters in average male</li><li>4 to 5 liters in average female</li><li>hormonal negative feedback systems maintain constant blood volume and osmotic pressure</li></ul></li></ul><p>Components of Plasma</p><ul><li>Water (&gt;90％) and organic and inorganic substances</li><li>Plasma proteins (65~85g/L)<br>  • Created in liver and confined to bloodstream<ul><li>albumins: 40～48 g/L<br>  • maintain blood osmotic pressure</li><li>globulins: 15～30 g/L<br>  • α1-, α2- β-,γ- globulins<br>  • Antibodies bind to antigens</li><li>fibrinogen: 2～4 g/L<br>  • For clotting</li></ul></li><li>Nutrients</li><li>Metabolic wastes</li><li>Hormones</li><li>Mineral electrolytes</li></ul><h3 id="3-2-The-blood-cells"><a href="#3-2-The-blood-cells" class="headerlink" title="3.2 The blood cells"></a>3.2 The blood cells</h3><p>Hematopoiesis</p><p>process of blood cells formation is hematopoiesis or hemopoiesis</p><ul><li>Most blood cells types need to be continually replaced: die within hours, days or weeks</li><li>In the embryo<br>  • occurs in yolk sac, liver, spleen, thymus, lymph nodes &amp; red bone marrow</li><li>In adult<br>  • occurs only in red marrow of flat bones like sternum, ribs, skull &amp; pelvis and ends of long bones</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029100844425.png" alt="image-20241029100844425"></p><p>General Function of Blood Cells</p><ul><li>The blood cells are the erythrocytes and the leukocytes, and the cells fragments are the platelets (thrombocytes).</li><li>More than 99% of blood cells are erythrocytes, which transport gas.</li><li>The leukocytes protect against infection and cancer, and the platelets function in blood clotting.</li></ul><h4 id="3-2-1-Physiology-of-Erythrocyte"><a href="#3-2-1-Physiology-of-Erythrocyte" class="headerlink" title="3.2.1 Physiology of Erythrocyte"></a>3.2.1 Physiology of Erythrocyte</h4><ul><li>biconcave discs: 7~ 8 μm,</li><li>lack a nucleus and can’t devide</li><li>high Hb concentrations</li><li>lifespan: 80-120 days</li></ul><h5 id="Physiological-characteristic"><a href="#Physiological-characteristic" class="headerlink" title="Physiological characteristic"></a>Physiological characteristic</h5><ul><li>Permeability of membrane<ul><li>Free to gas, like O2 , CO2 , NO (Isosmotic ≠ Isotonic)</li></ul></li><li>Deformability<ul><li>Behaving as elastic bodies, erythrocytes respond to applied pressure (ie, decrease in vessel diameter) by extensive changes in their shape followed by a reversal when the deforming force is removed.</li></ul></li><li>Suspension stability<ul><li>greater surface area/volume</li><li>negative charge of RBC membrane</li></ul></li></ul><h5 id="Erythrocytes-Osmotic-Fragility"><a href="#Erythrocytes-Osmotic-Fragility" class="headerlink" title="Erythrocytes Osmotic Fragility"></a>Erythrocytes Osmotic Fragility</h5><p>Osmotic fragility of RBCs is defined as the ease with which the cells burst in hypotonic solutions and is expressed in terms of the concentration of the saline solution in which the cells are hemolyzed.</p><p>Hereditary spherocytosis and thalassemia cause red blood cells to be more fragile than normal, might leading to hemolytic anemia.</p><h5 id="Erythrocyte-Sedimentation-Rate-ESR"><a href="#Erythrocyte-Sedimentation-Rate-ESR" class="headerlink" title="Erythrocyte Sedimentation Rate (ESR)"></a>Erythrocyte Sedimentation Rate (ESR)</h5><p>ESR is a blood test that can show inflammatory activity in the body.</p><h5 id="Erythrocyte-formation"><a href="#Erythrocyte-formation" class="headerlink" title="Erythrocyte formation"></a>Erythrocyte formation</h5><ul><li>The production of erythrocytes : red bone marrow</li><li>Key factor for production: <strong>iron</strong> and vitamins like folic acid and <strong>B12</strong></li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029101618905.png" alt="image-20241029101618905"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029101748818.png" alt="image-20241029101748818"></p><h5 id="Recycling-of-hemoglobin"><a href="#Recycling-of-hemoglobin" class="headerlink" title="Recycling of hemoglobin"></a>Recycling of hemoglobin</h5><ul><li>In liver or spleen<ul><li>globin portion broken down into amino acids &amp; recycled</li><li>heme portion split into iron (Fe3+) and biliverdin (green pigment)</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029101827533.png" alt="image-20241029101827533"></p><p>Regulation of Erythrocyte Production (erythropoiesis)</p><ul><li>Erythropoietin (EPO) produced by Kidneys (connective-tissue cells in the kidneys, the liver also<br>  secretes this hormone, but to a much lesser extent).</li><li>EPO acts on the bone marrow to stimulate the proliferation of erythrocyte progenitor cells and their differentiation into mature erythrocytes.</li><li>Increased EPO responds to tissue hypoxia.</li><li>Testosterone also stimulates the release of erythropoietin.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029101906472.png" alt="image-20241029101906472"></p><h5 id="Anemia"><a href="#Anemia" class="headerlink" title="Anemia"></a>Anemia</h5><p>Decrease in the absolute quantity of hemoglobin.</p><ul><li>Dietary deficiencies of iron (iron-deficiency anemia), vitamin B12, or folic acid </li><li>Bone marrow failure due to toxic drugs or cancer </li><li>Blood loss from the body (hemorrhage) </li><li>Inadequate secretion of erythropoietin in kidney disease </li><li>Excessive destruction of erythrocytes(for example,sickle-cell disease)</li></ul><h4 id="3-2-2-Physiology-of-Leukocytes"><a href="#3-2-2-Physiology-of-Leukocytes" class="headerlink" title="3.2.2 Physiology of Leukocytes"></a>3.2.2 Physiology of Leukocytes</h4><ul><li>All WBCs (leukocytes) have a nucleus and no hemoglobin</li><li>Granular or agranular classification based on presence of cytoplasmic granules made visible by staining<ul><li>granulocytes are neutrophils, eosinophils or basophils</li><li>agranulocytes are monocytes or lymphocytes</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029102014744.png" alt="image-20241029102014744"></p><h5 id="Neutrophil"><a href="#Neutrophil" class="headerlink" title="Neutrophil"></a>Neutrophil</h5><ul><li>Fastest response of all WBC to bacteria</li><li>Direct actions against bacteria<ul><li>release lysozymes which destroy/digest bacteria</li><li>release defensin proteins that act like antibiotics &amp; poke holes in bacterial cell walls destroying them</li><li>release strong oxidants (bleach-like, strong chemicals) that destroy bacteria</li></ul></li></ul><h5 id="Monocyte"><a href="#Monocyte" class="headerlink" title="Monocyte"></a>Monocyte</h5><ul><li>Take longer to get to site of infection, but arrive in larger numbers</li><li>Become wandering macrophages, once they leave the capillaries </li><li>Destroy microbes and clean up dead tissue following an infection</li></ul><h5 id="Lymphocyte"><a href="#Lymphocyte" class="headerlink" title="Lymphocyte"></a>Lymphocyte</h5><ul><li>B cells<br>  • destroy bacteria and their toxins<br>  • turn into plasma cells that produces antibodies</li><li>T cells<br>  • attack viruses, fungi, transplanted organs, cancer<br>  cells &amp; some bacteria</li><li>Natural killer cells<br>  • attack many different microbes &amp; some tumor cells<br>  • destroy foreign invaders by direct attack</li></ul><h4 id="3-2-3-Physiology-of-Platelets-Thrombocytes"><a href="#3-2-3-Physiology-of-Platelets-Thrombocytes" class="headerlink" title="3.2.3 Physiology of Platelets (Thrombocytes)"></a>3.2.3 Physiology of Platelets (Thrombocytes)</h4><p>Counts and Morphology</p><ul><li>Disc-shaped, 2 - 4 micron cell fragment</li><li>with no nucleus</li><li>Normal platelet count: 150,000-400,000/drop of blood</li></ul><p>Life span</p><ul><li>Short life span (5 to 9 days in bloodstream)<br>  • formed in bone marrow<br>  • few days in circulating blood<br>  • aged ones removed by fixed macrophages in liver and spleen</li></ul><p>Function</p><ul><li>Play important roles in hemostasis<ul><li>Direct adhesion</li><li>Platelet-derived growth factor (PDGF)<br>  • cause proliferation of vascular endothelial cells, smooth muscle &amp; fibroblasts<br>  to repair damaged vessels</li></ul></li></ul><h3 id="3-3-Hemostasis-the-prevention-of-blood-loss"><a href="#3-3-Hemostasis-the-prevention-of-blood-loss" class="headerlink" title="3.3 Hemostasis: the prevention of blood loss"></a>3.3 Hemostasis: the prevention of blood loss</h3><p>Hemostasis</p><ul><li>Stoppage of bleeding in a quick &amp; localized fashion when blood vessels are damaged</li><li>Prevents hemorrhage (loss of a large amount of blood)</li><li>Methods utilized<br>  • vascular spasm<br>  • platelet plug formation<br>  • blood clotting (coagulation = formation of fibrin threads)</li></ul><h4 id="3-3-1-Vascular-Spasm"><a href="#3-3-1-Vascular-Spasm" class="headerlink" title="3.3.1 Vascular Spasm"></a>3.3.1 Vascular Spasm</h4><ul><li>Damage to blood vessel produces stimulates pain receptors</li><li>Reflex contraction of smooth muscle of small blood vessels</li><li>Can reduce blood loss for several hours until other mechanisms can take over</li><li>Only for small blood vessel or arteriole</li></ul><h4 id="3-3-2-Platelet-Plug-Formation"><a href="#3-3-2-Platelet-Plug-Formation" class="headerlink" title="3.3.2 Platelet Plug Formation"></a>3.3.2 Platelet Plug Formation</h4><ul><li>Adhesion to collagen: vWF</li><li>Release: a variety of chemical agents via secretory vesicles<br>  • Alpha-granules: clotting factors, PDGF<br>  • Dense granules: ADP, ATP, Ca2+, serotonin, fibrin-stabilizing factor, &amp; enzymes that produce thromboxane A2</li><li>Aggregation: new platelets adhered to the old ones due to the platelet release reaction</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029102922619.png" alt="image-20241029102922619"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029102926427.png" alt="image-20241029102926427"></p><ul><li>Why is the platelet plug limited to damage endothelium?<ul><li>Inhibitory factors for platelet aggregation are released in intact endothelium.</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029103005212.png" alt="image-20241029103005212"></p><h4 id="3-3-3-Blood-Coagulation-Clot-Formation"><a href="#3-3-3-Blood-Coagulation-Clot-Formation" class="headerlink" title="3.3.3 Blood Coagulation: Clot Formation"></a>3.3.3 Blood Coagulation: Clot Formation</h4><ul><li>Blood drawn from the body thickens into a gel<ul><li>gel separates into liquid (serum) and a clot of insoluble fibers (fibrin) in which the cells are trapped</li></ul></li><li>If clotting occurs in an unbroken vessel is called a thrombosis</li><li>Substances required for clotting are Ca2+, enzymes synthesized by liver cells and substances released by platelets or damaged tissues</li><li>Clotting is a cascade of reactions in which each clotting factor<br>  activates the next in a fixed sequence resulting in the formation of<br>  fibrin threads<ul><li>prothrombinase &amp; Ca2+ convert prothrombin into thrombin</li><li>thrombin converts fibrinogen into fibrin threads</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029103102403.png" alt="image-20241029103102403"></p><h5 id="Clotting-factors"><a href="#Clotting-factors" class="headerlink" title="Clotting factors"></a>Clotting factors</h5><ul><li>There are many clotting factors in blood.</li><li>The clotting factors work one after the other. At the end of the chain, bleeding stops.</li><li>If one is missing or does not work, clots will not form properly and bleeding will continue.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029103139030.png" alt="image-20241029103139030" style="zoom: 33%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029103206851.png" alt="image-20241029103206851"></p><h5 id="Stage-of-blood-coagulation"><a href="#Stage-of-blood-coagulation" class="headerlink" title="Stage of blood coagulation"></a>Stage of blood coagulation</h5><ol><li>Prothrombinase is formed by either the intrinsic or extrinsic pathway</li><li>Prothrombin is converted to thrombin</li><li>Final common pathway produces fibrin threads</li></ol><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029103314945.png" alt="image-20241029103314945"></p><p>Extrinsic Pathway</p><ul><li>Damaged tissues leak tissue factor (thromboplastin) into bloodstream</li><li>Prothrombinase forms in seconds</li><li>In the presence of Ca2+, clotting factor X combines with V to form prothrombinase</li></ul><p>Intrinsic Pathway</p><ul><li>Activation occurs<ul><li>endothelium is damaged &amp; platelets come in contact with collagen of blood vessel wall</li><li>platelets damaged &amp; release phospholipids</li></ul></li><li>Requires several minutes for reaction to occur</li><li>Substances involved: Ca2+ and clotting factors XII, X and V</li></ul><h5 id="Role-of-Vitamin-K-in-Clotting"><a href="#Role-of-Vitamin-K-in-Clotting" class="headerlink" title="Role of Vitamin K in Clotting"></a>Role of Vitamin K in Clotting</h5><ul><li>Normal clotting requires adequate vitamin K<ul><li>fat soluble vitamin absorbed if lipids are present</li><li>absorption slowed if bile release is insufficient</li></ul></li><li>Required for synthesis of 4 clotting factors by hepatocytes<ul><li>factors II (prothrombin), VII, IX and X</li></ul></li><li>Produced by bacteria in large intestine</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029103410716.png" alt="image-20241029103410716"></p><h4 id="3-3-4-Anticlotting-system"><a href="#3-3-4-Anticlotting-system" class="headerlink" title="3.3.4 Anticlotting system"></a>3.3.4 Anticlotting system</h4><ul><li>tissue factor pathway inhibitor (TFPI)<br>  • Inactivates factor Xa</li><li>Thrombomodulin receptor<br>  • Inactivates factor Va and XIIIa</li><li>antithrombin III<br>  • Inactivates thrombin and other factors</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029103444120.png" alt="image-20241029103444120"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029104624074.png" alt="image-20241029104624074" style="zoom:50%;"></p><h5 id="Fibrinolytic-system"><a href="#Fibrinolytic-system" class="headerlink" title="Fibrinolytic system"></a>Fibrinolytic system</h5><p>The fibrinolytic (or thrombolytic) system is the principal effector of clot removal.</p><ul><li>Fibrinolytic system dissolves small, inappropriate clots &amp; clots at a site of a completed repair<ul><li>fibrinolysis is dissolution of a clot</li></ul></li><li>Inactive plasminogen is incorporated into the clot<ul><li>activation occurs because of factor XII and thrombin</li><li>plasminogen becomes plasmin (fibrinolysin) which digests fibrin threads</li></ul></li></ul><h5 id="Anticlotting-Drugs"><a href="#Anticlotting-Drugs" class="headerlink" title="Anticlotting Drugs"></a>Anticlotting Drugs</h5><ul><li>Anticoagulants suppress or prevent blood clotting<ul><li>heparin: administered during hemodialysis and surgery</li><li>warfarin (Coumadin): antagonist to vitamin K so blocks synthesis of clotting factors, slower than heparin</li><li>stored blood in blood banks treated with citrate phosphate dextrose (CPD) that removes Ca2+</li></ul></li><li>Thrombolytic agents are injected to dissolve clots<ul><li>directly or indirectly activate plasminogen</li><li>streptokinase or tissue plasminogen activator (t-PA)</li></ul></li></ul><h3 id="3-4-Blood-groups-and-blood-transfusion"><a href="#3-4-Blood-groups-and-blood-transfusion" class="headerlink" title="3.4 Blood groups and blood transfusion"></a>3.4 Blood groups and blood transfusion</h3><h4 id="3-4-1-ABO-Blood-Groups"><a href="#3-4-1-ABO-Blood-Groups" class="headerlink" title="3.4.1 ABO Blood Groups"></a>3.4.1 ABO Blood Groups</h4><ul><li>Based on 2 glycolipid iso-antigens called A and B found on the surface of<br>  RBCs<br>  • display only antigen A – blood type A<br>  • display only antigen B – blood type B<br>  • display both antigens A &amp; B – blood type AB<br>  • display neither antigen – blood type O</li><li>Plasma contains isoantibodies or agglutinins to the A or B antigens not found in your blood<br>  • anti-A antibody reacts with antigen A<br>  • anti-B antibody reacts with antigen B</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029105314690.png" alt="image-20241029105314690"></p><p>RBC surfaces are marked by genetically determined glycoproteins &amp; glycolipids</p><ul><li>agglutinogens or iso-antigens</li><li>distinguishes at least 24 different blood groups<br>  • ABO, Rh, Lewis, Kell, Kidd and Duffy systems</li></ul><h4 id="3-4-2-Typing-and-Cross-Matching-Blood"><a href="#3-4-2-Typing-and-Cross-Matching-Blood" class="headerlink" title="3.4.2 Typing and Cross-Matching Blood"></a>3.4.2 Typing and Cross-Matching Blood</h4><ul><li>Mixing of incompatible blood causes agglutination (visible clumping)<br>  • formation of antigen-antibody complex that sticks cells together<br>  • not the same as blood clotting</li><li>Typing involves testing blood with known antisera that contain antibodies A, B or Rh+</li><li>Cross-matching is to test by mixing donor cells with recipient’s serum</li><li>Screening is to test recipient’s serum against known RBC’s having known antigens</li></ul><h5 id="Transfusion-and-Transfusion-Reactions"><a href="#Transfusion-and-Transfusion-Reactions" class="headerlink" title="Transfusion and Transfusion Reactions"></a>Transfusion and Transfusion Reactions</h5><ul><li>Transfer of whole blood, cells or plasma into the bloodstream of recipient<br>  • used to treat anemia or severe blood loss</li><li>Incompatible blood transfusions<br>  • antigen-antibody complexes form between plasma antibodies &amp; “foreign proteins” on donated RBC’s (agglutination)<br>  • donated RBCs become leaky (complement proteins) &amp; burst<br>  • loose hemoglobin causes kidney damage</li><li>Problems caused by incompatibility between donor’s cells and recipient’s plasma</li><li>Donor plasma is too diluted to cause problems</li></ul><h2 id="Chapter-5-Respiratory-Physiology"><a href="#Chapter-5-Respiratory-Physiology" class="headerlink" title="Chapter 5 Respiratory Physiology"></a>Chapter 5 Respiratory Physiology</h2><h3 id="5-1-Pulmonary-ventilation-and-lung-mechanics"><a href="#5-1-Pulmonary-ventilation-and-lung-mechanics" class="headerlink" title="5.1 Pulmonary ventilation and lung mechanics"></a>5.1 Pulmonary ventilation and lung mechanics</h3><h4 id="5-1-1-Organization-of-the-Respiratory-System"><a href="#5-1-1-Organization-of-the-Respiratory-System" class="headerlink" title="5.1.1 Organization of the Respiratory System"></a>5.1.1 Organization of the Respiratory System</h4><p>The Respiratory Tract</p><ul><li>Consists of a conducting portion<br>  • From nasal cavity to terminal bronchioles</li><li>Consists of a respiratory portion<br>  • The respiratory bronchioles and alveoli</li></ul><p>Conducting zone</p><ul><li>The conducting zone extends from the top of the trachea to the beginning of the respiratory bronchioles; it contains no alveoli and there is no gas exchange with the blood.</li><li>Trachea, Bronchi, larger bronchioles-allows air flow</li><li>Have cartilage rings-robust will not collapse</li><li>Cells: Ciliated epithelium; Goblet cells; Smooth muscle cells</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029152827001.png" alt="image-20241029152827001" style="zoom:80%;"><img src="C:\Users\thyzz\AppData\Roaming\Typora\typora-user-images\image-20241029153249816.png" alt="image-20241029153249816" style="zoom: 67%;"></p><p>Respiratory zone</p><ul><li>The respiratory zone, which extends from the respiratory bronchioles down, contains alveoli and is the region where gases exchange with the blood.</li><li>Cells: Type I, Type II</li><li>For gases to exchange efficiently:<br>  • Alveoli walls must be very thin (&lt;1 μm)<br>  • Surface area must be very great (about 35 times the surface area of the body)</li><li>Most of the air-facing surfaces of the wall are lined by a continuous layer, one cell thick, of flat epithelial cells termed <strong>type I alveolar cells</strong>.</li><li>Interspersed between these cells are thicker specialized cells termed type II alveolar cells that<br>  produce a detergent-like substance, surfactant.</li><li>The respiratory membrane is composed of 6 layers: <ol><li>a layer of fluid containing surfactant that lines the alveolus and reduces the surface tension;</li><li>the alveolar epithelium; </li><li>an epithelial basement membrane; </li><li>a thin interstitial space between the alveolar epithelium and the capillary membrane;</li><li>a capillary basement membrane;</li><li>the capillary endothelial membrane.</li></ol></li></ul><p>Alveoli</p><ul><li>Are air-filled pockets within the lungs</li><li>Where all gas exchange takes place</li><li>Inspiration (inhalation) is the movement of air from the external environment through the airways into the alveoli during breathing.</li><li>Expiration (exhalation) is movement in the opposite direction. An inspiration and expiration constitute a respiratory cycle.</li></ul><p><img src="C:\Users\thyzz\AppData\Roaming\Typora\typora-user-images\image-20241029152948935.png" alt="image-20241029152948935" style="zoom: 33%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017185906295.png" alt="image-20241017185906295" style="zoom: 80%;"></p><p>Relation of the Lungs to the Thoracic (Chest) Wall</p><p>The Pleura 胸膜</p><ul><li>Consists of two layers:<br>  • Parietal pleura<br>  • Visceral pleura</li><li>Pleural fluid<br>  • Lubricates space between two layers<br>  • the total volume is only a few milliliters</li></ul><h4 id="5-1-2-Ventilation-and-Lung-mechanics"><a href="#5-1-2-Ventilation-and-Lung-mechanics" class="headerlink" title="5.1.2 Ventilation and Lung mechanics"></a>5.1.2 Ventilation and Lung mechanics</h4><h5 id="5-1-2-1-Ventilation"><a href="#5-1-2-1-Ventilation" class="headerlink" title="5.1.2.1 Ventilation"></a>5.1.2.1 Ventilation</h5><ul><li>External respiration - the exchange of gases between the body and the environment.</li><li>Gas transport - O2 is transported from lungs to the tissues and CO2 is transported in the opposite direction by blood circulation.</li><li>Gas diffusion – gas is transported over short distances of a few micrometers—e.g., through cell membranes and other physiological barriers.</li><li>Internal respiration - the exchange of gas occurs between the blood and cells of tissues and O2 utilization in the cells.</li><li>Ventilation - the exchange of gas between the atmosphere and alveoli.</li></ul><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029154445441.png" alt="image-20241029154445441" style="zoom: 33%;"><p>Pulmonary Ventilation<br>• Is the physical movement of air in and out of respiratory tract<br>• Provides alveolar ventilation<br>$$<br>𝐹 = (𝑃_{𝑎𝑙𝑣} − 𝑃_{𝑎𝑡𝑚})/𝑅<br>$$</p><p>$F$: air flow<br>$P_{alv}$: alveolar pressure<br>$P_{atm}$: atmospheric pressure<br>$R$: resistance</p><ul><li>During ventilation, air moves into and out of the lungs because the alveolar pressure is alternately made less than and greater than atmospheric pressure.</li><li>The lungs are passive elastic structures—like balloons—and their volume, therefore, depends upon: <ol><li>the difference in pressure—termed the transpulmonary pressure—between the inside and the outside of the lungs;</li><li>how stretchable the lungs are.</li></ol></li></ul><p>$$<br>Transpulmonary,Pressure=P_{alv}-P_{ip}<br>$$</p><p><img src="C:\Users\thyzz\AppData\Roaming\Typora\typora-user-images\image-20241029161350210.png" alt="image-20241029161350210" style="zoom: 60%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029161557755.png" alt="image-20241029161557755" style="zoom:30%;"></p><p>Transpulmonary pressure</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029161509866.png" alt="image-20241029161509866"></p><h5 id="The-Respiratory-Muscles"><a href="#The-Respiratory-Muscles" class="headerlink" title="The Respiratory Muscles"></a>The Respiratory Muscles</h5><ul><li>The diaphragm</li><li>External intercostal muscles of the ribs</li><li>Accessory respiratory muscles:<br>  • activated when respiration increases significantly</li></ul><p>Muscles of Active Exhalation</p><ul><li>Internal intercostal and transversus thoracis muscles<br>  • Depress the ribs</li><li>Abdominal muscles<br>  • Compress the abdomen<br>  • Force diaphragm upward</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029161722513.png" alt="image-20241029161722513" style="zoom: 40%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029161722513.png" style="zoom:40%;"></p><p>Lung Compliance</p><p>Compliance</p><ul><li>An indicator of expandability</li><li>Low compliance requires greater force</li><li>High compliance requires less force</li></ul><p>Factors That Affect Compliance</p><ul><li>Connective tissue structure of the lungs</li><li>Level of surfactant production</li><li>Mobility of the thoracic cage</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029161903097.png" alt="image-20241029161903097" style="zoom: 67%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029161907599.png" alt="image-20241029161907599" style="zoom:50%;"></p><p>Surface tension and Surfactant</p><h5 id="5-1-2-3-Inspiration-and-Expiration"><a href="#5-1-2-3-Inspiration-and-Expiration" class="headerlink" title="5.1.2.3 Inspiration and Expiration"></a>5.1.2.3 Inspiration and Expiration</h5><p>Inhalation: Always active</p><p>Exhalation: Active or passive</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029162102095.png" alt="image-20241029162102095"></p><p>How does airway resistance change?</p><ul><li>Airway resistance to airflow is normally very small</li><li>Physical factor: transpulmonary pressure and lateral traction</li><li>Neuroendocrine and paracrine factors: epinephrine, leukotrienes</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029162230444.png" alt="image-20241029162230444"></p><h4 id="5-1-3-Lung-Volumes-and-Capacities"><a href="#5-1-3-Lung-Volumes-and-Capacities" class="headerlink" title="5.1.3 Lung Volumes and Capacities"></a>5.1.3 Lung Volumes and Capacities</h4><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017194204263.png" alt="image-20241017194204263"></p><ul><li>Tidal volume (TV): the volume of air entering the lungs during a single inspiration. The tidal volume during normal quiet breathing is termed the resting tidal volume and is approximately 500ml.</li><li>Inspiratory reserve volume (IRV): the maximal amount of air that can be increased above TV during deepest inspiration (3000ml).</li><li>Expiratory reserve volume (ERV): maximal extra volume of air that can be expired by forceful expiration after the edn of a normal tidal expiration (900-1200ml)</li><li>Residual volume (RV): after a maximal active expiration, approximately 1200ml of air still remains in the lungs.</li><li>Vital capacity (VC): the maximal volume of air that a person can expire after a maximal inspiration.</li><li>Inspiratory capacity (IC): is equal to the tidal volume plus the inspiratory reserve volume.</li><li>Functional residual capacity (FRC): After expiration of a resting tidal volume, the lungs still contain a very large volume of air.</li><li>Total lung capacity (TLC): Maximum amount of air that can be inhaled after a normal tidal expiration.</li><li>Forced expiratory volume in 1 sec (FEV<del>1</del>): In 1s, the person takes a maximal inspiration<br>  and then exhales maximally as fast as possible.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017194221267.png" alt="image-20241017194221267"></p><h4 id="5-1-4-Dead-Space-and-Alveolar-Ventilation"><a href="#5-1-4-Dead-Space-and-Alveolar-Ventilation" class="headerlink" title="5.1.4 Dead Space and Alveolar Ventilation"></a>5.1.4 Dead Space and Alveolar Ventilation</h4><h5 id="5-1-4-1-Minute-Ventilation"><a href="#5-1-4-1-Minute-Ventilation" class="headerlink" title="5.1.4.1 Minute Ventilation"></a>5.1.4.1 Minute Ventilation</h5><p>The total ventilation per minute—<strong>the minute ventilation</strong> ($\dot{V}_E$)—is equal to the tidal volume multiplied by the respiratory rate as shown in equation 13–6. (The dot above the letter $V$​ indicates per minute.)</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017194910546.png" alt="image-20241017194910546"></p><h5 id="5-1-4-2-Dead-Space"><a href="#5-1-4-2-Dead-Space" class="headerlink" title="5.1.4.2 Dead Space"></a>5.1.4.2 Dead Space</h5><p><strong>Dead space</strong> is the volume of inspired air that does not take part in gas exchange. There are two reasons why this occurs. </p><ul><li>The first is due to the anatomy of the airways themselves. <strong>Anatomic dead space</strong>: Part of atmospheric air entering the respiratory system during each inspiration never reaches the alveoli but is merely moved in and out of the airways.</li><li>The second component of dead space occurs because some fresh inspired air is not used for gas exchange with the blood even though it reaches the alveoli. This is because some alveoli may, for various reasons, have little or no blood supply. This volume of air is known as <strong>alveolar dead space</strong>. It is quite small in healthy persons but may be very large with lung disease. As we shall see, local mechanisms that match air and blood flows minimize the alveolar dead space.  死腔的第二个组成部分是因为一些新鲜吸入的空气即使到达肺泡也没有用于与血液进行气体交换。这是因为一些肺泡可能由于各种原因很少或没有血液供应。该体积的空气称为肺泡死腔。它在健康人中相当小，但在患有肺部疾病时可能非常大。正如我们将看到的，匹配空气和血液流动的局部机制最大限度地减少了肺泡死腔。</li></ul><p>The sum of the anatomical and alveolar dead spaces is known as the <strong>physiological dead space</strong>. 解剖学死腔和肺泡死腔的总和称为生理死腔。</p><h5 id="5-1-4-3-Alveolar-Ventilation"><a href="#5-1-4-3-Alveolar-Ventilation" class="headerlink" title="5.1.4.3 Alveolar Ventilation"></a>5.1.4.3 Alveolar Ventilation</h5><p>The total volume of fresh air entering the alveoli per minute is called the <strong>alveolar ventilation</strong> ($\dot{V}_A$).</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017195336360.png" alt="image-20241017195336360"></p><h3 id="5-2-Exchange-of-gases-in-alveoli-and-tissues"><a href="#5-2-Exchange-of-gases-in-alveoli-and-tissues" class="headerlink" title="5.2 Exchange of gases in alveoli and tissues"></a>5.2 Exchange of gases in alveoli and tissues</h3><h4 id="5-2-1-Foundational-Principles-of-Gas-Exchange-Diffusion-of-Gases"><a href="#5-2-1-Foundational-Principles-of-Gas-Exchange-Diffusion-of-Gases" class="headerlink" title="5.2.1 Foundational Principles of Gas Exchange: Diffusion of Gases"></a>5.2.1 Foundational Principles of Gas Exchange: Diffusion of Gases</h4><h5 id="5-2-1-1-Partial-Pressure-of-Gases"><a href="#5-2-1-1-Partial-Pressure-of-Gases" class="headerlink" title="5.2.1.1 Partial Pressure of Gases"></a>5.2.1.1 Partial Pressure of Gases</h5><ul><li>A mixture of gases exert a pressure</li><li>An individual gas exerts a partial pressure in the mixture</li><li>Each gas contributes to the total pressure (Dalton’s law)</li></ul><h5 id="5-2-1-2-Diffusion-of-Gases-in-Liquids"><a href="#5-2-1-2-Diffusion-of-Gases-in-Liquids" class="headerlink" title="5.2.1.2 Diffusion of Gases in Liquids"></a>5.2.1.2 Diffusion of Gases in Liquids</h5><p>Henry’s Law</p><ul><li>When gas under pressure comes in contact with liquid<br>  • Gas dissolves in liquid until equilibrium is reached</li><li>At a given temperature<br>  • Amount of a gas in solution is proportional to partial pressure of that gas</li></ul><p>Gas Content</p><ul><li>The actual amount of a gas in solution (at given partial pressure and temperature) depends on the solubility of that gas in that particular liquid</li></ul><p>Solubility in Body Fluids</p><ul><li>CO2 is very soluble</li><li>O2 is less soluble</li><li>N2 has very low solubility</li></ul><h4 id="5-2-2-Exchange-between-alveoli-and-blood"><a href="#5-2-2-Exchange-between-alveoli-and-blood" class="headerlink" title="5.2.2 Exchange between alveoli and blood"></a>5.2.2 Exchange between alveoli and blood</h4><p>Efficiency of Gas Exchange Due to:</p><ul><li>Substantial differences in partial pressure across the<br>  respiratory membrane</li><li>Distances involved in gas exchange are short</li><li>O2 and CO2 are lipid soluble</li><li>Total surface area is large</li><li>Blood flow and airflow are coordinated</li></ul><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029163720292.png" alt="image-20241029163720292" style="zoom: 80%;"><p>Ventilation versus perfusion</p><ul><li>Matching the blood flow to the parts of the lung where the oxygen is</li><li>Ventilation/perfusion ratio</li><li>Not equal across the lung (because of where the heart is). Can change due to metabolism</li><li>Can change with disease-asthma, pulmonary hypertension</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029163955115.png" alt="image-20241029163955115"></p><h3 id="5-3-Transport-of-oxygen-and-carbon-dioxide-in-the-blood"><a href="#5-3-Transport-of-oxygen-and-carbon-dioxide-in-the-blood" class="headerlink" title="5.3 Transport of oxygen and carbon dioxide in the blood"></a>5.3 Transport of oxygen and carbon dioxide in the blood</h3><h4 id="5-3-1-Transport-of-Oxygen-in-the-Blood"><a href="#5-3-1-Transport-of-Oxygen-in-the-Blood" class="headerlink" title="5.3.1 Transport of Oxygen in the Blood"></a>5.3.1 Transport of Oxygen in the Blood</h4><p>The oxygen is present in two forms:  </p><ol><li>dissolved in the plasma and erythrocyte cytosol</li><li>reversibly combined with hemoglobin molecules in the erythrocytes</li></ol><p>As predicted by Henry’s law, the amount of oxygen dissolved in blood is directly proportional to the PO2 of the blood.  根据亨利定律预测，血液中溶解的氧气量与血液中的 PO2 成正比。</p><p>Haemoglobin</p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017200832320.png" alt="image-20241017200832320" style="zoom:80%;"><p>Each hemoglobin molecule is a protein made up of four subunits bound together. Each subunit consists of a molecular group known as heme and a polypeptide attached to the heme. The four polypeptides of a hemoglobin molecule are collectively called globin. Each of the four heme groups in a hemoglobin  molecule (Figure 13.25) contains one atom of iron ($Fe^{2+}$), to which molecular oxygen binds. Because each iron atom shown in Figure 13.25 can bind one molecule of oxygen, a single hemoglobin molecule can bind four oxygen molecules (see Figure 2.19 for the quaternary structure of hemoglobin). 每个血红蛋白分子都是由四个结合在一起的亚基组成的蛋白质。每个亚基由称为血红素的分子组和附着在血红素上的多肽组成。血红蛋白分子的四种多肽统称为珠蛋白。血红蛋白分子中的四个血红素基团（图 13.25）中的每一个都含有一个铁原子 (Fe2+)，分子氧与其结合。因为图13.25所示的每个铁原子可以结合一个氧分子，所以单个血红蛋白分子可以结合四个氧分子（血红蛋白的四级结构见图2.19）。</p><p>deoxyhemoglobin - oxyhemoglobin</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017200925346.png" alt="image-20241017200925346"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017200939583.png" alt="image-20241017200939583"></p><h5 id="Hemoglobin-Saturation"><a href="#Hemoglobin-Saturation" class="headerlink" title="Hemoglobin Saturation"></a>Hemoglobin Saturation</h5><p>The percentage of heme units in a hemoglobin molecule</p><h6 id="Effect-of-partial-pressure-of-O2"><a href="#Effect-of-partial-pressure-of-O2" class="headerlink" title="Effect of partial pressure of O2"></a>Effect of partial pressure of O2</h6><img src="C:\Users\thyzz\AppData\Roaming\Typora\typora-user-images\image-20241029164223707.png" alt="image-20241029164223707" style="zoom:67%;"><p>Oxygen–Hemoglobin Saturation Curve</p><ul><li>Higher PO</li><li>Is a curve rather than a straight line<br>  • Because Hb changes shape each time a molecule of O2 is bound</li><li>Each O2 bound makes next O2 binding easier</li><li>Allows Hb to bind O2 when O2 levels are low</li></ul><p>Oxygen Reserves</p><ul><li>O2 diffuses<br>  • From peripheral capillaries (high PO2)<br>  • Into interstitial fluid (low PO2)</li><li>Amount of O2 released depends on interstitial PO2</li><li>Up to 3/4 may be reserved by RBCs</li></ul><h6 id="Effect-of-Carbon-Monoxide"><a href="#Effect-of-Carbon-Monoxide" class="headerlink" title="Effect of Carbon Monoxide"></a>Effect of Carbon Monoxide</h6><ul><li>CO from burning fuels<br>  • Binds strongly to hemoglobin<br>  • Takes the place of O2<br>  • Can result in carbon monoxide poisoning</li></ul><h6 id="Effect-of-pH-and-temperature-normal-pH-7-4-37℃"><a href="#Effect-of-pH-and-temperature-normal-pH-7-4-37℃" class="headerlink" title="Effect of pH and temperature (normal pH 7.4, 37℃)"></a>Effect of pH and temperature (normal pH 7.4, 37℃)</h6><ul><li>When pH drops or temperature rises<br>  • More oxygen is released</li><li>When pH rises or temperature drops<br>  • Less oxygen is released</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029164633403.png" alt="image-20241029164633403" style="zoom:50%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029164638441.png" alt="image-20241029164638441" style="zoom:50%;"></p><h6 id="The-Bohr-Effect"><a href="#The-Bohr-Effect" class="headerlink" title="The Bohr Effect"></a>The Bohr Effect</h6><ul><li>Is the effect of pH on hemoglobin-saturation curve</li><li>Caused by CO2<br>  • CO2 diffuses into RBC<br>  • An enzyme, called carbonic anhydrase, catalyzes reaction with H2O<br>  • Produces carbonic acid (H2CO3)</li><li>Carbonic acid (H2CO3)<br>  • Dissociates into hydrogen ion (H+) and bicarbonate ion (HCO3-)</li><li>Hydrogen ions diffuse out of RBC, lowering pH</li></ul><h6 id="Effect-of-2-3-bisphosphoglycerate-DPG"><a href="#Effect-of-2-3-bisphosphoglycerate-DPG" class="headerlink" title="Effect of 2,3-bisphosphoglycerate (DPG)"></a>Effect of 2,3-bisphosphoglycerate (DPG)</h6><ul><li>RBCs generate ATP by glycolysis<br>  • Forming lactic acid and DPG</li><li>DPG directly affects O2 binding and release<br>  • More DPG, more oxygen released</li></ul><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029164747743.png" alt="image-20241029164747743" style="zoom: 50%;"><h4 id="5-3-2-Transport-of-Carbon-Dioxide-in-Blood"><a href="#5-3-2-Transport-of-Carbon-Dioxide-in-Blood" class="headerlink" title="5.3.2 Transport of Carbon Dioxide in Blood"></a>5.3.2 Transport of Carbon Dioxide in Blood</h4><ul><li>Physically dissolved in the blood (10%)</li><li>Bound to haemoglobin (25-30%)</li><li>bicarbonate (60-65%)</li></ul><p>Bicarbonate Ions</p><ul><li>Move into plasma by an exchange mechanism (the chloride shift) that takes<br>  in Cl- ions without using ATP</li></ul><p>Hydrogen Ions</p><ul><li>Deoxyhemoglobin has a much greater affinity for H+</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029165414425.png" alt="image-20241029165414425"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029165805977.png" alt="image-20241029165805977"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029165813777.png" alt="image-20241029165813777"></p><h3 id="5-4-Control-of-respiration"><a href="#5-4-Control-of-respiration" class="headerlink" title="5.4 Control of respiration"></a>5.4 Control of respiration</h3><h4 id="5-4-1-Neural-Generation-of-Rhythmic-Breathing"><a href="#5-4-1-Neural-Generation-of-Rhythmic-Breathing" class="headerlink" title="5.4.1 Neural Generation of Rhythmic Breathing"></a>5.4.1 Neural Generation of Rhythmic Breathing</h4><p>The respiratory centers: Three pairs of nuclei in the reticular formation of medulla oblongata and pons</p><p>Respiratory rhythmicity centers of the medulla oblongata: set the pace of respiration</p><ul><li>Dorsal respiratory group (DRG): The neurons of the dorsal respiratory group (DRG) primarily fire during inspiration and have input to the spinal motor neurons that activate respiratory muscles involved in inspiration—the diaphragm and inspiratory intercostal muscles. The primary inspiratory muscle at rest is the diaphragm, which is innervated by the phrenic nerves. 背侧呼吸群 (DRG) 的神经元主要放电吸气过程中，并输入脊髓运动神经元，激活参与吸气的呼吸肌——膈肌和吸气肋间肌。静止时的主要吸气肌是膈肌，由膈神经支配。<ul><li>Inspiratory center</li><li>Functions in quiet and forced breathing</li></ul></li><li>Ventral respiratory group (VRG): The ventral respiratory group (VRG) is the other main complex of neurons in the medullary respiratory center. The respiratory rhythm generator is located in the pre-Bötzinger complex of neurons in the upper part of the VRG. 腹侧呼吸群（VRG）是延髓呼吸中枢的另一个主要神经元复合体。呼吸节律发生器位于 VRG 上部神经元的前 Bötzinger 复合体中。<ul><li>Inspiratory and expiratory center</li><li>Functions only in forced breathing</li></ul></li></ul><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029165909816.png" alt="image-20241029165909816" style="zoom: 67%;"><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029170150410.png" alt="image-20241029170143316" style="zoom:67%;"><img src="C:\Users\thyzz\AppData\Roaming\Typora\typora-user-images\image-20241029170150410.png" alt="image-20241029170143316" style="zoom:67%;"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029170132110.png" alt="image-20241029170132110"></p><p>During increases in breathing, the inspiratory and expiratory motor neurons and muscles are not activated at the same time but, rather, alternate in function.</p><ul><li>The Apneustic and Pneumotaxic Centers of the Pons<br>  • Paired nuclei that adjust output of respiratory rhythmicity centers<br>  • Regulating respiratory rate and depth of respiration</li><li>Apneustic Center<br>  • Provides continuous stimulation to its DRG center</li><li>Pneumotaxic Centers<br>  • Inhibit the apneustic centers<br>  • Promote passive or active exhalation</li></ul><h5 id="The-Hering-Breuer-Reflexes"><a href="#The-Hering-Breuer-Reflexes" class="headerlink" title="The Hering-Breuer Reflexes"></a>The Hering-Breuer Reflexes</h5><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029170542026.png" alt="image-20241029170542026"></p><h4 id="5-4-2-Chemoreceptor-Reflex-of-Breathing"><a href="#5-4-2-Chemoreceptor-Reflex-of-Breathing" class="headerlink" title="5.4.2 Chemoreceptor Reflex of Breathing"></a>5.4.2 Chemoreceptor Reflex of Breathing</h4><h5 id="5-4-2-1-Chemoreceptors"><a href="#5-4-2-1-Chemoreceptors" class="headerlink" title="5.4.2.1 Chemoreceptors"></a>5.4.2.1 Chemoreceptors</h5><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017204703435.png" alt="image-20241017204703435" style="zoom:67%;"><p>Peripheral chemoreceptor</p><ul><li>Carotid body<ul><li>The glossopharyngeal nerve (Cranial nerve IX)</li><li>Stimulated by changes in blood pH or PO2</li></ul></li><li>Aortic body<ul><li>The vagus nerve (Cranial nerve X)</li><li>Stimulated by changes in blood pH or PO2</li></ul></li></ul><p>The peripheral chemoreceptors, located high in the neck at the bifurcation of the common carotid arteries and in the thorax on the arch of the aorta (Figure 13.33), are called the carotid bodies and aortic bodies, respectively. In both locations, they are quite close to, but distinct from, the arterial baroreceptors and are in intimate contact with the arterial blood. The carotid bodies, in particular, are strategically located to monitor oxygen supply to the brain. 外周化学感受器位于颈部高位颈总动脉分叉处和胸腔主动脉弓处（图 13.33），分别称为颈动脉体和主动脉体。在这两个位置，它们都非常接近但又不同于动脉压力感受器，并且与动脉血液密切接触。特别是颈动脉体的位置非常重要，可以监测大脑的氧气供应。</p><p>Central chemoreceptor</p><ul><li>Respiratory center of medulla oblongata<ul><li>ventrolateral surface</li></ul></li><li>monitor cerebrospinal fluid<ul><li>respond to pH and PCO2 change</li></ul></li></ul><p>The central chemoreceptors are located in the medulla and, like the peripheral chemoreceptors, provide excitatory synaptic input to the medullary inspiratory neurons. They are stimulated  by an increase in the H+ concentration of the brain’s extracellular fluid. As we will see later, such changes result mainly from changes in blood PCO2. 中枢化学感受器位于髓质中，与外周化学感受器一样，为髓质吸气神经元提供兴奋性突触输入。它们受到大脑细胞外液 H+ 浓度增加的刺激。正如我们稍后将看到的，这种变化主要是由血液 PCO2 的变化引起的。</p><h5 id="5-4-2-2-Control-of-ventilation-by-P-O-2-​"><a href="#5-4-2-2-Control-of-ventilation-by-P-O-2-​" class="headerlink" title="5.4.2.2 Control of ventilation by $P_{O_2}$​"></a>5.4.2.2 Control of ventilation by $P_{O_2}$​</h5><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029171319376.png" alt="image-20241029171319376"></p><h5 id="5-4-2-3-Control-of-ventilation-by-P-CO-2"><a href="#5-4-2-3-Control-of-ventilation-by-P-CO-2" class="headerlink" title="5.4.2.3 Control of ventilation by $P_{CO_2}$"></a>5.4.2.3 Control of ventilation by $P_{CO_2}$</h5><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017205112789.png" alt="image-20241017205112789" style="zoom:67%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017204913321.png" alt="image-20241017204913321" style="zoom:67%;"></p><h5 id="5-4-2-4-Control-Ventilation-by-H"><a href="#5-4-2-4-Control-Ventilation-by-H" class="headerlink" title="5.4.2.4 Control Ventilation by $H^+$"></a>5.4.2.4 Control Ventilation by $H^+$</h5><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017205133966.png" alt="image-20241017205133966" style="zoom:67%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017205019585.png" alt="image-20241017205019585" style="zoom:75%;"></p><h2 id="Chapter-4-Cardiovascular-Physiology"><a href="#Chapter-4-Cardiovascular-Physiology" class="headerlink" title="Chapter 4 Cardiovascular Physiology"></a>Chapter 4 Cardiovascular Physiology</h2><p>The Cardiovascular system (CVS) serves to provide rapid transport of nutrients to the tissues in the body and allow rapid removal of waste products.</p><h5 id="Main-functions-of-CVS"><a href="#Main-functions-of-CVS" class="headerlink" title="Main functions of CVS"></a>Main functions of CVS</h5><ol><li>Rapid transport of nutrients (oxygen, amino acids, glucose, fatty acids, water, etc.)</li><li>Removal of waste products of metabolism (carbon dioxide, urea, creatinine, etc.)</li><li>Hormonal control, by transporting hormones to their target organs and by secreting its own hormones (e.g. atrial natriuretic peptide)</li><li>Temperature regulation, by controlling heat distribution between the body core and the skin (e.g. arteriovenous shunt).</li><li>Host defense, transporting immune cells, antigen and other mediators (e.g. antibody).</li></ol><h5 id="Circulatory-system"><a href="#Circulatory-system" class="headerlink" title="Circulatory system"></a>Circulatory system</h5><ol><li>The Heart (a biological pump)</li><li>Blood vessels or vascular system (interconnected tubes)</li><li>Blood (a fluid connective tissue)</li></ol><p>Circulatory system consists of the pulmonary circulation and the systemic circulation. As depicted by the color change from blue to red, blood becomes fully oxygenated (red) as it flows through the lungs and then loses some oxygen (red to blue) as it flows through the other organs and tissues.</p><p>The systemic circulation: Left ventricle -&gt; Aorta -&gt; Systemic arteries -&gt; Capillaries -&gt; Systemic veins -&gt; Right atrium</p><p>The pulmonary circulation: Right ventricle -&gt; Pulmonary arteries -&gt; Lungs -&gt; Pulmonary capillaries -&gt; Pulmonary veins -&gt; Left atrium</p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029110310495.png" alt="image-20241029110310495" style="zoom:50%;"><h3 id="4-1-The-heart"><a href="#4-1-The-heart" class="headerlink" title="4.1 The heart"></a>4.1 The heart</h3><h4 id="4-1-1-Anatomy-Review"><a href="#4-1-1-Anatomy-Review" class="headerlink" title="4.1.1 Anatomy [Review]"></a>4.1.1 Anatomy [Review]</h4><p>The heart is a muscular organ enclosed in a protective fibrous sac, the pericardium, and located in the left of chest. A fibrous layer is also closely affixed to the heart and is called the epicardium (心外膜).</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029110023641.png" alt="image-20241029110023641"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010143650524.png" alt="image-20241010143650524"></p><p>Cardiac wall</p><p>The wall of the heart, the myocardium, is composed primarily of cardiac muscle cells. The inner surface of the cardiac chambers, as well as the inner wall of all blood vessels, is lined by a thin layer of cells known as endothelial cells, or endothelium.</p><p>Valves</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029110258168.png" alt="image-20241029110258168"></p><p>Function of valves:</p><ul><li>Prevent backward flow of blood</li><li>Open and close in response to pressure gradient across the valve</li></ul><p>Innervation</p><p>Sympathetic nerve -&gt; Norepinephrine -&gt; β-adrenergic receptor -&gt; Entire heart</p><p>Vagus nerve -&gt; Acetylcholine -&gt; M-muscarinic receptor -&gt; Atria</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029110516547.png" alt="image-20241029110516547"></p><p>Blood Supply</p><p>Heart receives their blood supply via arteries that branch from the aorta. The arteries supplying the myocardium are the coronary arteries, and the blood flowing through them is the coronary blood flow. The coronary arteries exit from behind the aortic valve cusps in the very first part of the aorta and lead to a branching network of small arteries, arterioles, capillaries, venules, and veins similar to those in other organs. Most of the cardiac veins drain into a single large vein, the coronary sinus, which empties into the right atrium.</p><h4 id="4-1-2-Mechanical-Events-of-the-Cardiac-Cycle"><a href="#4-1-2-Mechanical-Events-of-the-Cardiac-Cycle" class="headerlink" title="4.1.2 Mechanical Events of the Cardiac Cycle"></a>4.1.2 Mechanical Events of the Cardiac Cycle</h4><p>心脏的一次收缩和舒张构成的一个机械活动周期，称为心动周期(cardiac cycle)。在一个心动周期中，心房和心室的机械活动都可分为收缩期(systole)和舒张期(diastole)。由于心室在心脏泵血活动中起主要作用，故心动周期通常是指心室的活动周期。Consists of systole (contraction) and then diastole (relaxation) of both atria followed by systole and then diastole of both ventricles.</p><p>A typical heart rate is 72 beats/min, and each cardiac cycle lasts approximately 0.8s.</p><p>ventricular contraction: 0.3s<br>ventricular relaxation: 0.5s</p><p>atrial contraction: 0.1s<br>atrial relaxation: 0.7s</p><p>Atrial contraction occurs at the end of diastole, after most of the ventricular filling has taken place. The ventricle receives blood throughout most of diastole, not just when the atrium contracts.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010143844823.png" alt="image-20241010143844823"></p><h5 id="4-1-2-1-Mid-Diastole-to-Late-Diastole"><a href="#4-1-2-1-Mid-Diastole-to-Late-Diastole" class="headerlink" title="4.1.2.1 Mid-Diastole to Late Diastole"></a>4.1.2.1 Mid-Diastole to Late Diastole</h5><p>对心室活动周期而言，心房收缩期（period of atrial systole）实际上是前一周期的舒张末期。心房收缩前，心脏处于全心舒张期，此时处于半月瓣关闭、房室瓣开启状态，血液从静脉经心房流入心室，使心室不断充盈。在全心舒张期内，回流入心室的血液量约占心室总充盈量的75%。全心舒张期之后是心房收缩期，历时0.1秒，心房壁较薄、收缩力不强，由心房收缩推动进入心室的血液通常只占心室总充盈量的25%左右。心房收缩时，心房内压和心室内压都轻度升高，但由于大静脉的心房入口处环形肌也收缩，再加上血液向前的惯性，所以虽然大静脉和心房交接处没有瓣膜，心房内的血液很少会反流入大静脉。</p><ol><li>The left atrium and ventricle are both relaxed, but atrial pressure is slightly higher than ventricular pressure because the atrium is filled with blood that is entering from the veins.</li><li>The AV valve is held open by this pressure difference, and blood entering the atrium from the pulmonary veins continues on into the ventricle.</li><li>The aortic valve is closed because the aortic pressure is higher than the ventricular pressure.</li><li>The aortic pressure is slowly decreasing because blood is moving out of the arteries and through the vascular system.</li><li>In contrast, ventricular pressure is increasing slightly because blood is entering the relaxed ventricle from the atrium.</li><li>Near the end of diastole, the SA node discharges and the atria depolarize, as signified by the P wave of the ECG.</li><li>Atrium contraction of the causes atrial pressure increasing.</li><li>The elevated atrial pressure forces a small additional volume of blood into the ventricle.</li><li>The end of ventricular diastole, so the amount of blood in the ventricle at this time is called the <strong>end-diastolic volume (EDV)</strong> .</li></ol><h5 id="4-1-2-2-Systole-心缩期"><a href="#4-1-2-2-Systole-心缩期" class="headerlink" title="4.1.2.2 Systole 心缩期"></a>4.1.2.2 Systole 心缩期</h5><ul><li>isovolumic contraction period 等容收缩期</li><li>ejection period 射血期<ul><li>period of rapid ejection 快速射血期 70% 0.1s</li><li>period of reduced ejection 减慢射血期 30% 0.15s</li></ul></li></ul><ol start="10"><li><p>From the AV node, the wave of depolarization passes into and throughout the ventricular tissue—as signified by the QRS complex of the ECG—and this triggers ventricular<br>contraction.</p></li><li><p>As the ventricle contracts, ventricular pressure increases rapidly; almost immediately, this pressure exceeds the atrial pressure.</p></li><li><p>This change in pressure gradient forces the AV valve to close, thus preventing the backflow of blood into the atrium.</p></li><li><p>Because the aortic pressure still exceeds the ventricular pressure at this time, the aortic valve remains closed and the ventricle cannot empty despite its contraction. For a brief time, then, all valves are closed during this phase of <strong>isovolumetric ventricular contraction</strong>.</p></li><li><p>This brief phase ends when the rapidly increasing ventricular pressure exceeds aortic pressure.</p></li><li><p>The pressure gradient now forces the aortic valve to open, and ventricular ejection begins.</p></li><li><p>The ventricular volume curve shows that ejection is rapid at first and then slows down.</p></li><li><p>The amount of blood remaining in the ventricle after ejection is called the <strong>end-systolic volume (ESV)</strong>.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029111055282.png" alt="image-20241029111055282"></p></li><li><p>As blood flows into the aorta, the aortic pressure increases along with the ventricular pressure.</p></li><li><p>Peak ventricular and aortic pressures are reached before the end of ventricular ejection.</p></li><li><p>This force reduction is evidenced by the reduced rate of blood ejection during the last part of systole.</p></li><li><p>The volume and pressure in the aorta decrease as the rate of blood ejection from the ventricles becomes slower than the rate at which blood drains out of the arteries into the tissues.</p></li></ol><h5 id="4-1-2-3-Early-Diastole"><a href="#4-1-2-3-Early-Diastole" class="headerlink" title="4.1.2.3 Early Diastole"></a>4.1.2.3 Early Diastole</h5><ol start="22"><li>T wave of the ECG corresponds to ventricular repolarization.</li><li>As the ventricles relax, the ventricular pressure decreases below aortic pressure. The change in the pressure gradient forces the aortic valve to close.</li><li>The AV valve also remains closed because the ventricular pressure is still higher than atrial pressure. For a brief time, then, all valves are again closed during this phase of isovolumetric<br>ventricular relaxation.</li><li>This phase ends as the rapidly decreasing ventricular pressure decreases below atrial pressure.</li><li>This change in pressure gradient results in the opening of the AV valve.</li><li>Venous blood that had accumulated in the atrium since the AV valve closed flows rapidly into the ventricles.</li><li>The rate of blood flow is enhanced during this initial filling phase by a rapid decrease in ventricular pressure.</li></ol><ul><li><p>isovolumic relaxation period 等容舒张期</p><p>  射血后，心室开始舒张，室内压下降，主动脉内的血液向心室方向反流，推动半月瓣使之关闭；但此时室内压仍高于房内压，故房室瓣仍处于关闭状态，心室又暂时成为一个封闭的腔。从半月瓣关闭至房室瓣开启前的这一段时间内，心室舒张而心室的容积并不改变。</p></li><li><p>period of ventricular filling 心室充盈期</p><p>  随着心室肌的舒张，室内压进一步下降，当室内压下降到低于房内压时，心房内的血液冲开房室瓣进入心室。</p><ul><li>period of rapid filling 快速充盈期 2/3 0.11s</li><li>period of reduced filling 减慢充盈期 0.22s</li></ul></li></ul><table><thead><tr><th></th><th>AV valves</th><th>Semilunar valves</th></tr></thead><tbody><tr><td>Isovolumetric ventricular contraction</td><td>closed</td><td>closed</td></tr><tr><td>Ventricular ejection</td><td>closed</td><td>open</td></tr><tr><td>Isovolumetric ventricular relaxation</td><td>closed</td><td>closed</td></tr><tr><td>Ventricular filling</td><td>open</td><td>closed</td></tr></tbody></table><h4 id="4-1-3-The-Cardiac-Output"><a href="#4-1-3-The-Cardiac-Output" class="headerlink" title="4.1.3 The Cardiac Output"></a>4.1.3 The Cardiac Output</h4><p>Cardiac output (CO): 一侧心室一次心脏搏动所射出的血液量，称为每搏输出量（stroke volume），简称搏出量。一侧心室每分钟射出的血液量，称为心输出量（cardiac output），也称每分输出量或心排出量。The volume of blood each ventricle pumps as a function of time, usually expressed in liters per minute. </p><p>正常成年人在安静状态下，左心室舒张期末容积（end-diastolic volume，EDV）约125ml，收缩期末容积（end-systolic volume，ESV）约55ml，两者差值即为搏出量，约70ml（60～80ml）。左、右两侧心室的心输出量基本相等。心输出量等于心率与搏出量的乘积。心输出量与机体的新陈代谢水平相适应，可因性别、年龄及其他生理情况的不同而不同。如果心率为75次/分，搏出量为70ml，则心输出量约为5L/min。一般健康成年男性在安静状态下的心输出量为4.5～6.0L/min。</p><p>The cardiac output can be calculated by multiplying the heart rate (HR)—the number of beats per minute—and the stroke volume (SV)—the blood volume ejected by each ventricle with each beat:</p><p>$$<br>CO = HR \times SV<br>$$</p><p>Ejection fraction (EF): 搏出量占心室舒张期末容积的百分比，称为射血分数（ejection fraction）。One way to quantify contractility is through the ejection fraction (EF), defined as the ratio of stroke volume (SV) to enddiastolic volume (EDV):</p><p>$$<br>EF = SV / EDV<br>$$</p><p>一侧心室每分钟射出的血液量，称为心输出量（cardiac output），也称每分输出量或心排出量。左、右两侧心室的心输出量基本相等。心输出量等于心率与搏出量的乘积。<br>心输出量与机体的新陈代谢水平相适应，可因性别、年龄及其他生理情况的不同而不同。如果心率为75次/分，搏出量为70ml，则心输出量约为5L/min。一般健康成年男性在安静状态下的心输出量为4.5～6.0L/min。</p><h5 id="4-1-3-1-Control-of-heart-rate"><a href="#4-1-3-1-Control-of-heart-rate" class="headerlink" title="4.1.3.1 Control of heart rate"></a>4.1.3.1 Control of heart rate</h5><p>The slope of phase 4 depolarisation in SA nodal cells determines heart rate.<br>SA node is normally under the constant influence of nerves and hormones.</p><p>Sympathetic neurous: increase<br>parasympathetic neurous: decrease</p><p>In the resting state, more parasympathetic activity to the heart than sympathetic, so the normal resting heart rate of about 70 beats/min is well below the inherent rate of 100 beats/min.</p><p>Sympathetic stimulation increases the slope of the pacemaker potential by increasing Na+ entering the cell.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010150944550.png" style="zoom:80%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010150457344.png" alt="image-20241010150457344" style="zoom:80%;"></p><p>Epinephrin 肾上腺素 (Adrenal medulla 肾上腺髓质)<br>Norepinephrine 去甲肾上腺素<br>Acetylcholine 甲状腺激素</p><h5 id="4-1-3-2-Control-of-Stroke-Volume"><a href="#4-1-3-2-Control-of-Stroke-Volume" class="headerlink" title="4.1.3.2 Control of Stroke Volume"></a>4.1.3.2 Control of Stroke Volume</h5><ol><li>end-diastolic volume (preload)</li><li>sympathetic regulation</li><li>afterload: how hard the heart must work to eject blood</li></ol><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010153156351.png" alt="image-20241010153156351" style="zoom:80%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010153517922.png" alt="image-20241010153517922" style="zoom:90%;"></p><ul><li><p>changes in the end-diastolic volume (the volume of blood in the ventricles just before contraction, sometimes referred to as the preload)</p><p>  前负荷可使骨骼肌在收缩前处于一定的初长度。对中空、近似球形的心脏来说，心室肌的初长度取决于心室舒张期末的血液充盈量，换言之，心室舒张期末容积相当于心室的前负荷。异长自身调节的生理学意义：异长自身调节的主要生理学意义是对搏出量的微小变化进行精细的调节，使心室射血量与静脉回心血量之间保持平衡，从而使心室舒张期末容积和压力保持在正常范围内。</p></li><li><p>changes in the magnitude of sympathetic nervous system input to the ventricles</p><ul><li>the increased sympathetic nerve stimulation or epinephrine will enhance contraction and stroke volume.</li><li>心肌不受副交感神经支配。</li></ul><table><thead><tr><th>Area Affected</th><th>Sympathetic Nerves (Norepinephrine on β-Adrenergic Receptors)</th><th>Parasympathetic Nerves (ACh on Muscarinic Receptors)</th></tr></thead><tbody><tr><td>SA node</td><td>heart rate ↑</td><td>heart rate ↓</td></tr><tr><td>AV node</td><td>conduction rate ↑</td><td>conduction rate ↓</td></tr><tr><td>Atrial muscle</td><td>contractility ↑</td><td>contractility ↓</td></tr><tr><td>Ventricular muscle</td><td>contractility ↑</td><td>no significant effect</td></tr></tbody></table></li><li><p>changes in afterload (i.e., the arterial pressures against which the ventricles pump)</p><p>心室收缩时，必须克服大动脉血压，才能将血液射入动脉内。因此，大动脉血压是心室收缩时所遇到的后负荷。在心肌初长度、收缩能力和心率都不变的情况下，如果大动脉血压增高，等容收缩期室内压的峰值将增高，结果使等容收缩期延长而射血期缩短，射血期心室肌缩短的程度和速度都减小，射血速度减慢，搏出量减少；反之，大动脉血压降低，则有利于心室射血。</p></li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010154133913.png" alt="image-20241010154133913"></p><h4 id="4-1-2-Electrophysiology-of-Cardiac-Muscle"><a href="#4-1-2-Electrophysiology-of-Cardiac-Muscle" class="headerlink" title="4.1.2 Electrophysiology of Cardiac Muscle"></a>4.1.2 Electrophysiology of Cardiac Muscle</h4><p>根据组织学和电生理学特点，可将心肌细胞分成工作细胞(working cell)和自律细胞(autorhythmic cell)，前者包括心房肌和心室肌，它们有稳定的静息电位，主要执行收缩功能。后者主要包括窦房结细胞和浦肯野细胞，它们组成心内特殊传导系统，大多没有稳定的静息电位，并可自动产生节律性兴奋。根据心肌细胞动作电位去极化的快慢及其产生机制，又可将心肌细胞分成快反应细胞(fast response cell)和慢反应细胞(slow response cell)。快反应细胞包括心房、心室肌和浦肯野细胞，其动作电位的特点是去极化速度和幅度大，兴奋传导速度快，复极过程缓慢并且可分成几个时相，因而动作电位时程很长。慢反应细胞包括窦房结和房室结细胞，其动作电位特点是去极化速度和幅度小，兴奋传导速度慢，复极过程缓慢而没有明确的时相区分。快反应细胞和慢反应细胞在某些实验条件或病理情况下，可发生转变。</p><p>Fast response non-autorhythmic cell: Ventricular and atrial myocardium<br>Fast response autorhythmic cell: Purkinje cells<br>Slow response non-autorhythmic cell: Atrioventricular node<br>Slow response autorhythmic cell: Sinoatrial node</p><h5 id="4-1-2-1-Myocardial-Cell-Action-Potentials-Fast-response-non-autorhythmic-cell"><a href="#4-1-2-1-Myocardial-Cell-Action-Potentials-Fast-response-non-autorhythmic-cell" class="headerlink" title="4.1.2.1 Myocardial Cell Action Potentials (Fast response non-autorhythmic cell)"></a>4.1.2.1 Myocardial Cell Action Potentials (Fast response non-autorhythmic cell)</h5><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010160314326.png" alt="image-20241010160314326" style="zoom:80%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010160328450.png" alt="image-20241010160328450" style="zoom:80%;"></p><p>Phase 0: $Na^+$ enters</p><p>Phase 1: $K^+$ exits</p><p>Phase 2: $K^+$ exits || $Ca^{2+}$​ enters</p><p>Phase 3: $K^+$ exits</p><p>Phase 4: $Na^+$-$K^+$​ ATPase</p><h5 id="4-1-2-2-Nodal-Cell-Action-Potentials-Slow-response-autorhythmic-cell"><a href="#4-1-2-2-Nodal-Cell-Action-Potentials-Slow-response-autorhythmic-cell" class="headerlink" title="4.1.2.2 Nodal Cell Action Potentials (Slow response autorhythmic cell)"></a>4.1.2.2 Nodal Cell Action Potentials (Slow response autorhythmic cell)</h5><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010160855333.png" alt="image-20241010160855333" style="zoom:80%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241010160905588.png" alt="image-20241010160905588" style="zoom:80%;"></p><p>Phase 0: $Ca^{2+}$ enters (mainly)</p><p>Phase 1: -</p><p>Phase 2: -</p><p>Phase 3: $K^+$ exits</p><p>Phase 4: $Na^+$ enters, $Ca^{2+}$ enters, less $K^+$​ exits over time</p><p>This gradual depolarization is known as a pacemaker potential; it brings the membrane potential to threshold, at which point an AP occurs.</p><h4 id="4-1-3-Myocardial-Characteristics"><a href="#4-1-3-Myocardial-Characteristics" class="headerlink" title="4.1.3 Myocardial Characteristics"></a>4.1.3 Myocardial Characteristics</h4><ol><li>Excitability 兴奋性</li><li>Autorhythmicity 自律性</li><li>Conductivity 传导性</li><li>Contractility 收缩性</li></ol><p>Non-autorhythmic cell: 1.3.4.</p><p>Autorhythmic cell: 1.2.3.</p><h5 id="4-1-3-1-Excitability"><a href="#4-1-3-1-Excitability" class="headerlink" title="4.1.3.1 Excitability"></a>4.1.3.1 Excitability</h5><p>心肌细胞每产生一次兴奋，其膜电位将发生一系列规律性变化，兴奋性也因之而产生相应的周期性变化。这种周期性变化，使心肌细胞在不同时期内对重复刺激表现出不同的反应特性，从而对心肌兴奋的产生和传导，甚至对收缩反应产生重要影响。</p><p>Excitability: The ability to produce electrical signals that can transmit information between different regions of the membrane.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017135653618.png" alt="image-20241017135653618" style="zoom:80%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029114349240.png" alt="image-20241029114349240" style="zoom:33%;"></p><p>Effective refractory period (ERP) : Absolute refractory period (ARP) + Local response period</p><ul><li>从0期去极化开始到复极化3期膜电位达-55mV这一段时间内，无论给予多强的刺激，都不会引起心肌细胞产生去极化反应，此段时期称为绝对不应期(absolute refractory period, ARP) 。从复极至-55mV继续复极至-60mV的这段时期内，若给予阈上刺激虽可引起局部反应，但仍不会产生新的动作电位，这一时期称为局部反应期(local response period) 。上述两段时期合称为有效不应期(effective refractory period, ERP) 。此期内心肌细胞兴奋性的暂时缺失或极度下降是由于钠通道完全失活或尚未恢复到可以被激活的备用状态的缘故。但兴奋性的下降是可逆的。心肌的ERP特别长，是兴奋性变化的重要特点。</li></ul><p>Relative refactory period (RRP)</p><ul><li>从膜电位复极化-60mV至-80mV这段时间内，若给予阈上刺激，可使心肌细胞产生动作电位，此期称为相对不应期(relative refractory period , RRP) 。此期已有相当数量的钠通道复活到备用状态，但在阈刺激下激活的钠通道数量仍不足以产生使膜去极化达阈电位的内向电流，故需加强刺激强度方能引起一次新的兴奋。</li></ul><p>Supranormal period (SNP)</p><ul><li>心肌细胞继续复极，膜电位由-80mV 恢复到-90mV 这一段时期，其膜电位值虽低于静息电位，但钠通道已基本恢复到可被激活的备用状态，且膜电位水平与阈电位接近，故一个低于阈值的刺激即可引起一次新的动作电位，此即超常期(supranormal period, SNP) 。</li></ul><p>Cardiac muscle is incapable of undergoing summation of contractions like that occurring in skeletal muscle, and this is a very good thing. If a prolonged, tetanic contraction were to occur in the heart, it would cease to function as a pump because the ventricles can adequately fill with blood only while they are relaxed. The inability of the heart to generate tetanic contractions is the result of the long <strong>absolute refractory period</strong> of cardiac muscle, defined as the period during and following an action potential when an excitable membrane cannot be re-excited. As in the case of neurons and skeletal muscle fibers, the main mechanism is the inactivation of $Na^+$ channels. </p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017141002447.png" alt="image-20241017141002447"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017141434098.png" alt="image-20241017141434098"></p><p>The absolute refractory period of skeletal muscle is much shorter (2 to 4 msec) than the duration of contraction (20 to 100 msec), so a second action potential can be elicited while the contraction resulting from the first action potential is still under way (see Figure 9.10). In contrast, because of the prolonged, depolarized plateau in the cardiac muscle action potential, the absolute refractory period of cardiac muscle lasts almost as long as the contraction (approximately 250 msec), and the muscle cannot be re-excited multiple times during an ongoing contraction. 骨骼肌的绝对不应期（2至4毫秒）比收缩持续时间（20至100毫秒）短得多，因此当第一个动作电位引起的收缩仍在进行时，可以引发第二个动作电位。相反，由于心肌动作电位的去极化平台时间较长，心肌的绝对不应期几乎与收缩一样长（约250毫秒），并且在持续的收缩过程中，不能多次重新兴奋。</p><p>在正常情况下，当窦房结产生的每一次兴奋传到心房肌和心室肌时，心房肌和心室肌前一次兴奋的不应期均已结束，因此能不断产生新的兴奋，于是，整个心脏就能按照窦房结的节律进行活动。如果在心室肌的有效不应期后，下一次窦房结兴奋到达前，心室受到一次外来刺激，则可提前产生一次兴奋和收缩，分别称为期前兴奋(premature excitation) 和期前收缩(premature systole) 。(形成二联律、三联律) 期前兴奋也有其自身的有效不应期，当紧接在期前兴奋后的一次窦房结兴奋传到心室时，如果正好落在期前兴奋的有效不应期内，则此次正常下传的窦房结兴奋将不能引起心室的兴奋和收缩，即形成一次兴奋和收缩的“ 脱失”‘须待再下一次窦房结的兴奋传来时才能引起兴奋和收缩。这样，在一次期前收缩之后往往会出现一段较长的心室舒张期，称为代偿间歇(compensatory pause)，然后再恢复窦性节律。但窦性心率较慢，下一次窦房结的兴奋也可在期前兴奋的有效不应期结束后才传到心室，在这种情况下，代偿性间歇将不会出现。</p><h5 id="4-1-3-2-Autorhythmicity"><a href="#4-1-3-2-Autorhythmicity" class="headerlink" title="4.1.3.2 Autorhythmicity"></a>4.1.3.2 Autorhythmicity</h5><p><strong>Autorhythmicity</strong>: The capacity for spontaneous, rhythmic self-excitation.</p><p>Sinoatrial node (90-100 beats/min) &gt; Atrioventricular node (40-60 beats/min) &gt; Purkinje fibers (20-40 beats/min)</p><p>Pacemaker: Sinoatrial node</p><p>Ectopic pacemakers: Atrioventricular node, Purkinje fibers</p><p>The pacemaker potential provides the SA node with automaticity, the capacity for spontaneous, rhythmic self-excitation. The slope of the pacemaker potential—that is, how quickly the membrane potential changes per unit time—determines how quickly threshold is reached and the next action potential is elicited. The inherent rate of the SA node—the rate exhibited in the absence of any neural or hormonal input to the node—is approximately 100 depolarizations per minute. Because other cells of the conducting system have slower inherent pacemaker rates, they normally are driven to threshold by action potentials from the SA node and do not manifest their own rhythm. </p><p>However, they can do so under certain circumstances and Purkinje network, no longer driven by the SA node, begin to initiate excitation at their own inherent rate and become the pacemaker for the ventricles. Their rate is quite slow, generally 25 to 40 beats/min. Therefore, when the AV node is disrupted, the ventricles contract completely out of synchrony with the atria, which continue at the higher rate of the SA node. Under such conditions, the atria are less effective because they are often contracting when the AV valves are closed. (房室传导阻滞)</p><p>起搏器电位为窦房结提供了自律性，即自发、节律性自激的能力。起搏器电位的斜率（即每单位时间膜电位变化的速度）决定了达到阈值和引发下一个动作电位的速度。 SA 节点的固有速率约为每分钟 100 次去极化。 由于传导系统的其他细胞具有较慢的固有起搏器速率，因此它们通常被来自 SA 节点的动作电位驱动到阈值，并且不会表现出它们的心率。自己的节奏。然而，他们可以在某些情况下这样做，并且浦肯野网络不再由 SA 节点驱动，开始以其自身固有的速率启动兴奋，并成为心室的起搏器。它们的速度相当慢，一般为25至40次/分钟。因此，当房室结受到干扰时，心室收缩与心房完全不同步，而心房结以较高的速率继续收缩。在这种情况下，心房的效率较低，因为当房室瓣膜关闭时它们经常收缩。</p><h5 id="4-1-3-3-Conductivity"><a href="#4-1-3-3-Conductivity" class="headerlink" title="4.1.3.3 Conductivity"></a>4.1.3.3 Conductivity</h5><p><strong>Conductivity</strong>: The action potential initiated int he sionatrial node spreads throughout the myocardium, passing from cell to cell by way of gap junctions</p><p>Purkinje fibers (4m/s) -&gt; Bundle of His (2m/s) -&gt; Ventricular myocardium (1m/s) -&gt; Atrial myocardium (0.4m/s) -&gt; Atrioventricular node (0.02m/s)</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029114738735.png" alt="image-20241029114738735"></p><p>Atrioventricular node:</p><ul><li>Conducts action potential to ventricles</li><li>Delays action potential to allow atria to complete contraction before ventricles contract</li></ul><p>Purkinje fibers:</p><ul><li>Large-diameter conduction cells</li><li>Rapidly distribute the impulse throughout much of the ventricles</li><li>Contact with ventricular myocardial cells, and spread the action potential.</li></ul><h5 id="4-1-3-4-Contractility"><a href="#4-1-3-4-Contractility" class="headerlink" title="4.1.3.4 Contractility"></a>4.1.3.4 Contractility</h5><p><strong>Contractility</strong>: Triggered by depolarization of the plasma membrane.</p><p>The heart is a dual pump in that the left and right sides of the heart pump blood separately-but simultaneously-into the systemic and pulmonary vessels. Efficient pumping of blood requires that the atria contract first, followed almost immediately by the ventricles (Synchronous contraction). The initial excitation of one cardiac cell therefore eventually results in the excitation of all cardiac cells (intercalated disc). 有效泵送血液需要心房首先收缩，然后心室几乎立即收缩。与骨骼肌和许多平滑肌一样，心肌的收缩是由质膜的去极化触发的。间隙连接将心肌细胞互连并允许动作电位从一个细胞传播到另一个细胞。一个心肌细胞的初始兴奋最终会导致所有心肌细胞的兴奋。</p><h4 id="4-1-4-Electrocardiogram-ECG"><a href="#4-1-4-Electrocardiogram-ECG" class="headerlink" title="4.1.4 Electrocardiogram (ECG)"></a>4.1.4 Electrocardiogram (ECG)</h4><p>The electrocardiogram (ECG, also abbreviated EKG—the k is from the German elektrokardiogramm) is a tool for evaluating the electrical events within the heart. When action potentials occur simultaneously in many individual (contractile) myocardial cells, currents are conducted through the body fluids around the heart and can be detected by recording electrodes at the surface of the skin.  心电图（ECG，也缩写为 EKG，k 源自德语 elektrokardiogramm）是评估心脏内电活动的工具。当动作电位在许多单独的（收缩性）心肌细胞中同时出现时，电流通过心脏周围的体液传导，并且可以通过皮肤表面的记录电极来检测。</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017144948839.png" alt="image-20241017144948839" style="zoom:67%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029115134318.png" alt="image-20241029115134318" style="zoom:50%;"></p><p>ECG</p><ul><li>Waves<ul><li>P wave</li><li>QRS wave</li><li>T wave</li></ul></li><li>Intervals<ul><li>P-R interval - PR间期代表由窦房结产生的兴奋经由心房、房室交界和房室束到达心室并引起心室肌开始兴奋所需要的时间，故也称为房室传导时间。当发生房室传导阻滞时，PR间期延长。临床上将房室传导功能分为正常、一度阻滞(PR间期延长，无心室漏搏）、二度阻滞(PR可以正常或延长，有心室漏搏）和三度阻滞（心房和心室搏动互不相关，各按自己频率搏动，PP间期&lt;RR间期，P波与QRS波群无关系，PR间期不固定）</li><li>R-T interval</li><li>Q-T interval - QT 间期是指从QRS 波起点到T 波终点的时程，代袭芯窒开始去极化到完全复极化所经历的时间。QT 间期的长短与心率成反变关系，心率愈快， QT 间期愈短。QT 间期延长易引起早后去极，并可能诱发严重的室性心律失常——尖端扭转型室性心动过速。</li><li>P-P interval (R-R interval)</li></ul></li><li>Segment<ul><li>P-R segment - PR段是指从P波终点到QRS波起点之间的时段，心电图中所描记到的PR段通常出现在基线水平上。PR段反映兴奋通过心房后在向心室传导过程中的电位变化，由于兴奋在通过房室交界区时的传导非常慢，形成的综合电位很小，故在P波之后曲线便回到基线水平，从而形成PR段。</li><li>S-T segment - ST 段是指从QRS 波群终点到T 波起点之间的线段。由千ST 段代表心室各部分细胞均处千去极化状态（相当于动作电位的平台期），各部分之间的电位差很小。正常时 ST 段应与基线平齐，常描记为一段水平线（等电位线）。心肌缺血或损伤时 ST 段会出现异常压低或抬高。</li></ul></li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017150014179.png" alt="image-20241017150014179"></p><h3 id="4-2-The-Vascular-System"><a href="#4-2-The-Vascular-System" class="headerlink" title="4.2 The Vascular System"></a>4.2 The Vascular System</h3><p>Arteries, Veins and Capillaries</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017150656031.png" alt="image-20241017150656031"></p><table><thead><tr><th>Functions of Endothelial Cells</th></tr></thead><tbody><tr><td>Serve as a physical lining in heart and blood vessels to which blood cells do not normally adhere        <br>充当心脏和血管中血细胞通常不粘附的物理衬里</td></tr><tr><td>Serve as a permeability barrier for the exchange of nutrients, metabolic end products, and fluid between plasma and interstitial fluid; regulate transport of macromolecules and other substances<br>充当血浆和间质液之间营养物质、代谢终产物和液体交换的渗透性屏障；调节大分子和其他物质的运输</td></tr><tr><td>Secrete paracrine agents that act on adjacent vascular smooth muscle cells, including vasodilators such as prostacyclin and nitric oxide (endothelium-derived relaxing factor [EDRF]), and vasoconstrictors such as endothelin-1 <br>分泌作用于邻近血管平滑肌细胞的旁分泌剂，包括前列环素和一氧化氮（内皮源性舒张因子 [EDRF]）等血管舒张剂，以及内皮素-1等血管收缩剂</td></tr><tr><td>Mediate angiogenesis (new capillary growth) <br>介导血管生成（新毛细血管）</td></tr><tr><td>Have a central function in vascular remodeling by detecting signals and releasing paracrine agents that act on adjacent cells in the blood vessel wall<br>通过检测信号并释放作用于血管壁邻近细胞的旁分泌剂，在血管重塑中发挥核心功能</td></tr><tr><td>Contribute to the formation and maintenance of extracellular matrix<br>有助于细胞外基质的形成和维持</td></tr><tr><td>Produce growth factors in response to damage<br>产生生长因子以应对损伤</td></tr><tr><td>Secrete substances that regulate platelet clumping, clotting, and anticlotting<br>分泌调节血小板聚集、凝血的物质和抗凝血</td></tr><tr><td>Synthesize active hormones from inactive precursors (Chapter 14)<br> 从非活性前体合成活性激素</td></tr><tr><td>Extract or degrade hormones and other mediators (Chapters 11, 13)<br>提取或降解激素和其他介质</td></tr><tr><td>Secrete cytokines during immune responses (Chapter 18)<br>在免疫反应期间分泌细胞因子</td></tr><tr><td>Influence vascular smooth muscle proliferation in the disease atherosclerosis (Chapter 12, Section 12.24)<br>影响动脉粥样硬化疾病中的血管平滑肌增殖</td></tr></tbody></table><h4 id="4-2-1-Functional-Classifications-of-Blood-Vessels"><a href="#4-2-1-Functional-Classifications-of-Blood-Vessels" class="headerlink" title="4.2.1 Functional Classifications of Blood Vessels"></a>4.2.1 Functional Classifications of Blood Vessels</h4><table><thead><tr><th>Morphological</th><th>Physiological Categories</th><th>Main Physiological Functions</th></tr></thead><tbody><tr><td>Large arteries</td><td>Windkessel vessels</td><td>Buffer the arterial blood pressure and drive the blood flow continuously</td></tr><tr><td>Middle arteries</td><td>Distribution vessels</td><td>Transport the blood into the organs and tissues</td></tr><tr><td>Small arteries, arterioles</td><td>Precapillary resistance vessels</td><td>Maintain the arterial blood pressure and control the blood flow of the organs and tissues</td></tr><tr><td>Precapillary sphincters</td><td>Precapillary sphincters</td><td>Control the opening or closing of the capillaries</td></tr><tr><td>Capillaries</td><td>Exchange vessels</td><td>Are the exchange place between the blood and interstitial fluid</td></tr><tr><td>Venules</td><td>Postcapillary resistance vessels</td><td>Affect the capillary pressure and the filtration</td></tr><tr><td>Veins</td><td>Capacitance vessels</td><td>Contain 60-70% of circulating blood volume</td></tr><tr><td>Arteriovenous anastomosis</td><td>Shunt vessels</td><td>Regulate the body temperature</td></tr></tbody></table><h4 id="4-2-2-Arteries"><a href="#4-2-2-Arteries" class="headerlink" title="4.2.2 Arteries"></a>4.2.2 Arteries</h4><h5 id="4-2-2-1-Arterial-Blood-Pressure"><a href="#4-2-2-1-Arterial-Blood-Pressure" class="headerlink" title="4.2.2.1 Arterial Blood Pressure"></a>4.2.2.1 Arterial Blood Pressure</h5><p>Blood pressure (BP): the pressure of circulating blood on the walls of blood vessels.</p><p>Artery blood pressure: the pressure exerted by the blood within the arteries, usually refers to the pressure in the aorta.</p><p>Mechanism of BP:</p><ol><li>Sufficiency of blood in closed loop</li><li>Heart contraction</li><li>Peripheral resistance</li></ol><p>The pressure inside the artery depends on:</p><ol><li>the volume of blood</li><li>how easily the vessel can stretch</li></ol><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017154341833.png" alt="image-20241017154341833" style="zoom: 67%;"><p>A volume of blood equal to only about one-third of the stroke volume leaves the arteries during systole. The rest of the stroke volume remains in the arteries during systole, distending them and increasing the arterial pressure. When ventricular contraction ends, the stretched arterial walls recoil passively like a deflating balloon, and blood continues to be driven into the arterioles during diastole. 在收缩期离开动脉的血液量仅相当于每搏输出量的三分之一。其余的每搏量在收缩期间保留在动脉中，使动脉扩张并增加动脉压。当心室收缩结束时，拉伸的动脉壁像泄气的气球一样被动地回缩，并且血液在舒张期间继续被推入小动脉。</p><p>Systolic arterial pressure (SAP): The maximum arterial pressure reached during peak ventricular ejection 心室射血峰值时达到的最大动脉压</p><p>Diastolic arterial pressure (DAP): The minimum arterial pressure occurs just before ventricular ejection begins 最小动脉压发生在心室射血开始之前</p><p>Pulse pressure (SAP-DAP): The difference between systolic pressure and diastolic pressure (120 − 80 = 40 mmHg in the example 收缩压和舒张压之间的差值（示例中为 120 − 80 = 40 mmHg）</p><p>Mean arterial pressure (MAP): The average pressure during the cycle, referred to as the mean arterial pressure (MAP) 周期内的平均压力，称为平均动脉压（MAP）  $MAP=DP+\frac{1}{3}(SP-DP)$</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017155038578.png" alt="image-20241017155038578" style="zoom:80%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017155048113.png" alt="image-20241017155048113" style="zoom: 80%;"></p><p>The pressure changes that occur along the rest of the systemic and pulmonary circulations. By the time the blood has completed its journey back to the atrium in each circuit, most of the pressure<br>originally generated by the ventricular contraction has dissipated.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241017155203070.png" alt="image-20241017155203070"></p><p>The roles of arterioles:</p><ol><li>The arterioles in individual organs are responsible for determining the relative blood flows to those organs at any given mean arterial pressure.  各个器官中的小动脉负责确定在任何给定的平均动脉压下流向这些器官的相对血流量。</li><li>The arterioles, all together, are the major factor in determining mean arterial pressure (MAP) itself.  小动脉是决定平均动脉压本身的主要因素。</li></ol><h5 id="4-2-2-2-Factors-Affecting-Arterial-Blood-Pressure"><a href="#4-2-2-2-Factors-Affecting-Arterial-Blood-Pressure" class="headerlink" title="4.2.2.2 Factors Affecting Arterial Blood Pressure"></a>4.2.2.2 Factors Affecting Arterial Blood Pressure</h5><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029120403697.png" alt="image-20241029120403697"></p><table><thead><tr><th></th><th>SAP</th><th>DAP</th><th>Pulse pressure</th><th>BP</th></tr></thead><tbody><tr><td>Cardiac output ↑</td><td>↑↑</td><td>↑</td><td>↑</td><td>↑</td></tr><tr><td>Heart rate ↑</td><td>↑</td><td>↑↑</td><td>↓</td><td>↑</td></tr><tr><td>Peripheral resistance ↑</td><td>↑</td><td>↑↑</td><td>↓</td><td>↑</td></tr><tr><td>Elasticity of aorta and large artery ↓</td><td>↑</td><td>↓</td><td>↑↑</td><td>↑</td></tr><tr><td>Mean circulation filling pressure ↓</td><td>↓↓</td><td>↓</td><td>↓↓</td><td>↓</td></tr></tbody></table><h5 id="4-2-2-3-Abnormal-Blood-Pressure"><a href="#4-2-2-3-Abnormal-Blood-Pressure" class="headerlink" title="4.2.2.3 Abnormal Blood Pressure"></a>4.2.2.3 Abnormal Blood Pressure</h5><p>Abnormally low BP (hypotension): leads to shock, anoxia and tissue destruction.</p><p>Chronically elevated BP (hypertension): causes damage because important vessels (especially those of the heart, brain, kidneys and retina) are injured.</p><h4 id="4-2-3-Veins"><a href="#4-2-3-Veins" class="headerlink" title="4.2.3 Veins"></a>4.2.3 Veins</h4><p>Definition: any of the tubular branching vessels that carry blood from the capillaries<br>toward the heart.</p><p>Function:</p><ol><li>low-resistance conduits</li><li>maintaining peripheral venous pressure and venous return to the heart</li></ol><p>To aid venous return:</p><ol><li>Skeletal muscle pump</li><li>Respiratory pump</li><li>Venoconstriction - contraction of smooth muscle in wall of vein (sympathetic stimulation)</li></ol><p>Venous smooth muscle contraction, the skeletal muscle pump, and the respiratory pump all<br>work to facilitate venous return and thereby enhance cardiac output by the same amount.</p><h4 id="4-2-4-Microcirculation"><a href="#4-2-4-Microcirculation" class="headerlink" title="4.2.4 Microcirculation"></a>4.2.4 Microcirculation</h4><p>Distribution: widest</p><p>Wall: thinnest</p><p>Diameter: smallest</p><p>Velocity: slowest</p><h5 id="4-2-4-1-Capillaries"><a href="#4-2-4-1-Capillaries" class="headerlink" title="4.2.4.1 Capillaries"></a>4.2.4.1 Capillaries</h5><p>Typical capillary is a thin-walled tube of endothelial cells and one layer thick resting on a basement membrane, without any surrounding smooth muscle or elastic tissue. The endothelial cells generally contain large numbers of endocytotic and exocytotic vesicles, and sometimes these fuse to form continuous fused-vesicle channels across the cell.</p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241024140407009.png" alt="image-20241024140407009" style="zoom: 67%;"><h5 id="4-2-4-2-Arteriolar-and-Capillary-Network"><a href="#4-2-4-2-Arteriolar-and-Capillary-Network" class="headerlink" title="4.2.4.2 Arteriolar and Capillary Network"></a>4.2.4.2 Arteriolar and Capillary Network</h5><p>Microcirculation: the blood circulation between the arteriole and venule.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029120927180.png" alt="image-20241029120927180"></p><p>Three pathway of microcirculation</p><ol><li>Circuity pathway: Nutrient pathway</li><li>Thoroughfare channel</li><li>Arteriovenous shunt: Regulate body temperature</li></ol><h5 id="4-2-4-3-Microcirculation-Local-Controls"><a href="#4-2-4-3-Microcirculation-Local-Controls" class="headerlink" title="4.2.4.3 Microcirculation Local Controls"></a>4.2.4.3 Microcirculation Local Controls</h5><p>Local control of organ blood flow in response to</p><ol><li>increases in metabolic activity</li><li>decreases in blood pressure.</li></ol><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029121421703.png" alt="image-20241029121421703"></p><h4 id="4-2-5-Formation-of-Interstitial-Fluid"><a href="#4-2-5-Formation-of-Interstitial-Fluid" class="headerlink" title="4.2.5 Formation of Interstitial Fluid"></a>4.2.5 Formation of Interstitial Fluid</h4><p>The constituents of interstitial fluid are almost the same as plasma except ofr much lower concentrations of proteins. Most of interstitial fluid is gelatinous, which cannot flow freely. The substrate of gel consists of collagen fiber bundles and proteoglycan filaments.</p><h6 id="4-2-5-1-Mechanisms-of-Interstitial-Fluid-Formation"><a href="#4-2-5-1-Mechanisms-of-Interstitial-Fluid-Formation" class="headerlink" title="4.2.5.1 Mechanisms of Interstitial Fluid Formation"></a>4.2.5.1 Mechanisms of Interstitial Fluid Formation</h6><p>Favoring fluid movement out of the capillary:</p><ul><li>$P_c$ (capillary blood hydrostatic pressure);</li><li>$π_{IF}$ (osmotic force due to interstitial fluid protein concentration).</li></ul><p>Favoring fluid movement into the capillary:</p><ul><li>$P_{IF}$ (interstitial hydrostatic pressure);</li><li>$π_c$ (osmotic force due to plasma protein concentration);</li></ul><p>$$<br>NFP=P_C+\pi_{IF}-P_{IF}-\pi_C<br>$$<br><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241024143834549.png" alt="image-20241024143834549"></p><h4 id="4-2-6-Lymph-Circulation"><a href="#4-2-6-Lymph-Circulation" class="headerlink" title="4.2.6 Lymph Circulation"></a>4.2.6 Lymph Circulation</h4><p>The lymphatic system is a network of small organs (lymph nodes) and tubes (lymphatic vessels or simply “lymphatics”) through which lymph flows. The lymphatic system is not technically part of the circulatory system, but it is described in this chapter because its vessels provide a route for the movement of interstitial fluid to the circulatory system.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241024144146249.png" alt="image-20241024144146249"></p><p>interstitial fluid -&gt; lymphatic capillaries -&gt; lymph nodes -&gt; lymphatic vessels -&gt; two large lymphatic ducts -&gt; Veins near the junction of the<br>jugular and subclavian veins</p><p>Valves at junctions between lymphatic ducts and vascular vessel permit only one-way flow from lymphatic ducts into the veins. Thus, the lymphatic vessels carry interstitial fluid to the cardiovascular system.</p><p>Function:</p><ol><li>Drain excess interstitial fluid to vascular system.</li><li>Drain fat absorbed from the gastrointestinal tract reaches the blood.</li><li>Help cancer cells spread original organ to other parts of the body.</li></ol><h3 id="4-3-Regulation-of-cardiovascular-activity"><a href="#4-3-Regulation-of-cardiovascular-activity" class="headerlink" title="4.3 Regulation of cardiovascular activity"></a>4.3 Regulation of cardiovascular activity</h3><h4 id="4-3-1-Neural-Regulation"><a href="#4-3-1-Neural-Regulation" class="headerlink" title="4.3.1 Neural Regulation"></a>4.3.1 Neural Regulation</h4><h5 id="4-3-1-1-homeostatic-control"><a href="#4-3-1-1-homeostatic-control" class="headerlink" title="4.3.1.1 homeostatic control"></a>4.3.1.1 homeostatic control</h5><p>homeostatic control systems (reflex arc):</p><p>An internal environmental variable -&gt; Receptors -&gt; Afferent pathways -&gt; An integrating center -&gt; Efferent pathways -&gt; Effectors</p><p>To maintain arterial blood pressure at about 120/80 mmHg in the face of changing demands for blood flow to different organs.</p><p>MAP= CO × TPR<br>MAP: Mean systemic arterial pressure<br>CO: Cardiac output<br>TPR: Total peripheral resistance</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241024150331633.png" alt="image-20241024150331633"></p><h5 id="4-3-1-2-Baroreceptor-reflexes-depressor-reflex-sino-aortic-reflex"><a href="#4-3-1-2-Baroreceptor-reflexes-depressor-reflex-sino-aortic-reflex" class="headerlink" title="4.3.1.2 Baroreceptor reflexes (depressor reflex, sino-aortic reflex)"></a>4.3.1.2 Baroreceptor reflexes (depressor reflex, sino-aortic reflex)</h5><p>The reflexes that homeostatically regulate arterial pressure originate primarily with arterial receptors that respond to changes in pressure.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029122415713.png" alt="image-20241029122415713"></p><p>BP ↑ -&gt; sinus nerve (+) / aortic nerve (+) -&gt; sympathetic center (-) / parasympathetic center (+) / sympathetic vasoconstrictor center (-) -&gt; sympathetic nerve (-) / parasympathetic nerve (+) / sympathetic vasoconstrictor nerve (-)</p><p>heart: heart rate ↓ / (contraction ↓ -&gt; strike volume ↓) -&gt; cardiac output ↓ -&gt; BP ↓</p><p>vessel: arteriolar constriction ↓ -&gt; peripheral resistance ↓ -&gt; BP ↓</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029122641698.png" alt="image-20241029122641698"></p><p>The baroreceptor reflex functions primarily as a short-term regulator of arterial blood pressure. It is activated instantly by any blood pressure change and functions to restore blood pressure rapidly toward normal. However, if arterial pressure remains increased from its normal set point for more than a few days, the arterial baroreceptors adapt to this new pressure and decrease their frequency of action potential firing at any given pressure.</p><h4 id="4-3-2-Humoral-Regulation"><a href="#4-3-2-Humoral-Regulation" class="headerlink" title="4.3.2 Humoral Regulation"></a>4.3.2 Humoral Regulation</h4><h5 id="4-3-2-1-Renin-Angiotensin-Aldosterone-System-RAAS"><a href="#4-3-2-1-Renin-Angiotensin-Aldosterone-System-RAAS" class="headerlink" title="4.3.2.1 Renin-Angiotensin-Aldosterone System (RAAS)"></a>4.3.2.1 Renin-Angiotensin-Aldosterone System (RAAS)</h5><p>肾素-血管紧张素-醛固酮系统</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029122853266.png" alt="image-20241029122853266"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029122907940.png" alt="image-20241029122907940"></p><p>Aldosterone: 保钠保水排钾 尿量减少</p><p>血管紧张素转换酶(ACE)抑制剂：普利类</p><p>血管紧张素受体(AT<del>1</del>)阻断剂：沙坦类</p><h5 id="4-3-2-2-Epinephrine-E-and-Norepinephrine-NE"><a href="#4-3-2-2-Epinephrine-E-and-Norepinephrine-NE" class="headerlink" title="4.3.2.2 Epinephrine (E) and Norepinephrine (NE)"></a>4.3.2.2 Epinephrine (E) and Norepinephrine (NE)</h5><table><thead><tr><th></th><th>Epinephrine (E)</th><th>Norepinephrine (NE)</th></tr></thead><tbody><tr><td>Resource</td><td>Adrenal medulla</td><td>Adrenal medulla, sympathetic nerve</td></tr><tr><td>Function</td><td>Cardiotonic</td><td>Vasopressor</td></tr><tr><td>Heart</td><td>β<del>1</del> receptor: heart rate ↑, myocardial contractility ↑, cardiac output ↑, blood pressure ↑</td><td>β<del>1</del> receptor: heart rate ↓, myocardial contractility ↑, cardiac output ↑, blood pressure ↑</td></tr><tr><td>Vessel</td><td>β<del>2</del> receptor: vasoconstriction on skin and visceral, while vasodilation on skeletal muscle, heart and liver</td><td>α<del>1</del> receptor: vasoconstriction on all organs except for coronary artery, peripheral resistance ↑, DAP ↑</td></tr><tr><td>Smooth muscle</td><td>Dilation on gastrointestinal tract and bronchus</td><td>Less than Epinephrine</td></tr><tr><td>Metabolism</td><td>blood glucose ↑, lipolysis ↑, oxygen consumption, heat production ↑</td><td>Less than Epinephrine</td></tr></tbody></table><h5 id="4-3-2-3-Blood-Volume-and-Long-term-Regulation-of-AP"><a href="#4-3-2-3-Blood-Volume-and-Long-term-Regulation-of-AP" class="headerlink" title="4.3.2.3 Blood Volume and Long-term Regulation of AP"></a>4.3.2.3 Blood Volume and Long-term Regulation of AP</h5><p>The major mechanism for long-term regulation occurs through the blood volume. Blood volume is a major determinant of arterial pressure because it influences venous pressure, venous return, enddiastolic volume, stroke volume, and cardiac output. Thus, increased blood volume increases<br>arterial pressure.</p><p>An increase in blood pressure for any reason causes a decrease in blood volume, which tends to bring the blood pressure back down. An increase in the blood volume for any reason increases the blood pressure, which tends to bring the blood volume back down.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029123055371.png" alt="image-20241029123055371" style="zoom: 80%;"><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/image-20241029123122977.png" alt="image-20241029123122977" style="zoom:80%;"></p><p>Arterial pressure influences blood volume but blood volume also influences arterial pressure, blood pressure can stabilize, in the long run, only at a value at which blood volume is also stable. Consequently, changes in steady-state blood volume are the single most important long-term determinant of blood pressure.</p><p>利尿剂：氢氯噻嗪</p><h3 id="4-4-Circulation-through-the-heart-lungs-and-brain"><a href="#4-4-Circulation-through-the-heart-lungs-and-brain" class="headerlink" title="4.4 Circulation through the heart, lungs and brain"></a>4.4 Circulation through the heart, lungs and brain</h3><h2 id="Chapter-7-Energy-metabolism-and-body-Temperature"><a href="#Chapter-7-Energy-metabolism-and-body-Temperature" class="headerlink" title="Chapter 7 Energy metabolism and body Temperature"></a>Chapter 7 Energy metabolism and body Temperature</h2><h3 id="7-1-Energy-metabolism"><a href="#7-1-Energy-metabolism" class="headerlink" title="7.1 Energy metabolism"></a>7.1 Energy metabolism</h3><h3 id="7-2-Body-temperatures-and-its-control"><a href="#7-2-Body-temperatures-and-its-control" class="headerlink" title="7.2 Body temperatures and its control"></a>7.2 Body temperatures and its control</h3><h2 id="Chapter-8-Urine-Formation-and-Excretion"><a href="#Chapter-8-Urine-Formation-and-Excretion" class="headerlink" title="Chapter 8 Urine Formation and Excretion"></a>Chapter 8 Urine Formation and Excretion</h2><h3 id="8-1-Functional-structure-of-the-kidneys"><a href="#8-1-Functional-structure-of-the-kidneys" class="headerlink" title="8.1 Functional structure of the kidneys"></a>8.1 Functional structure of the kidneys</h3><h3 id="8-2-Urine-formation"><a href="#8-2-Urine-formation" class="headerlink" title="8.2 Urine formation"></a>8.2 Urine formation</h3><h3 id="8-3-Urine-concentration-and-dilution"><a href="#8-3-Urine-concentration-and-dilution" class="headerlink" title="8.3 Urine concentration and dilution"></a>8.3 Urine concentration and dilution</h3><h3 id="8-4-Regulations-of-urine-formation"><a href="#8-4-Regulations-of-urine-formation" class="headerlink" title="8.4 Regulations of urine formation"></a>8.4 Regulations of urine formation</h3><h3 id="8-5-Renal-clearance"><a href="#8-5-Renal-clearance" class="headerlink" title="8.5 Renal clearance"></a>8.5 Renal clearance</h3><h3 id="8-6-Micturition-and-its-adnormalities"><a href="#8-6-Micturition-and-its-adnormalities" class="headerlink" title="8.6 Micturition and its adnormalities"></a>8.6 Micturition and its adnormalities</h3><h2 id="Chapter-9-Functions-of-the-Nervous-System"><a href="#Chapter-9-Functions-of-the-Nervous-System" class="headerlink" title="Chapter 9 Functions of the Nervous System"></a>Chapter 9 Functions of the Nervous System</h2><h3 id="9-1-General-principles-of-activities-of-the-nervous-system"><a href="#9-1-General-principles-of-activities-of-the-nervous-system" class="headerlink" title="9.1 General principles of activities of the nervous system"></a>9.1 General principles of activities of the nervous system</h3><h3 id="9-2-Sensory-functions-of-the-nervous-system"><a href="#9-2-Sensory-functions-of-the-nervous-system" class="headerlink" title="9.2 Sensory functions of the nervous system"></a>9.2 Sensory functions of the nervous system</h3><h3 id="9-3-Control-of-body-movement"><a href="#9-3-Control-of-body-movement" class="headerlink" title="9.3 Control of body movement"></a>9.3 Control of body movement</h3><h3 id="9-4-Autonomic-nervous-system"><a href="#9-4-Autonomic-nervous-system" class="headerlink" title="9.4 Autonomic nervous system"></a>9.4 Autonomic nervous system</h3><h3 id="9-5-Electrical-activity-of-the-brain-wakefulness-and-sleep"><a href="#9-5-Electrical-activity-of-the-brain-wakefulness-and-sleep" class="headerlink" title="9.5 Electrical activity of the brain, wakefulness and sleep"></a>9.5 Electrical activity of the brain, wakefulness and sleep</h3><h3 id="9-6-High-functions-of-the-brain"><a href="#9-6-High-functions-of-the-brain" class="headerlink" title="9.6 High functions of the brain"></a>9.6 High functions of the brain</h3><h2 id="Chapter-10-Endocrine-Physiology"><a href="#Chapter-10-Endocrine-Physiology" class="headerlink" title="Chapter 10 Endocrine Physiology"></a>Chapter 10 Endocrine Physiology</h2><h3 id="10-1-General-characteristics-of-hormones"><a href="#10-1-General-characteristics-of-hormones" class="headerlink" title="10.1 General characteristics of hormones"></a>10.1 General characteristics of hormones</h3><h3 id="10-2-Endocrine-of-the-hypothalamus-and-pituitary-gland"><a href="#10-2-Endocrine-of-the-hypothalamus-and-pituitary-gland" class="headerlink" title="10.2 Endocrine of the hypothalamus and pituitary gland"></a>10.2 Endocrine of the hypothalamus and pituitary gland</h3><h3 id="10-3-Endocrine-of-the-thyroid-gland"><a href="#10-3-Endocrine-of-the-thyroid-gland" class="headerlink" title="10.3 Endocrine of the thyroid gland"></a>10.3 Endocrine of the thyroid gland</h3><h3 id="10-4-Endocrine-of-the-adrenal-gland"><a href="#10-4-Endocrine-of-the-adrenal-gland" class="headerlink" title="10.4 Endocrine of the adrenal gland"></a>10.4 Endocrine of the adrenal gland</h3><h3 id="10-5-Endocrine-of-the-pancreatic-islet"><a href="#10-5-Endocrine-of-the-pancreatic-islet" class="headerlink" title="10.5 Endocrine of the pancreatic islet"></a>10.5 Endocrine of the pancreatic islet</h3><h3 id="10-6-Endocrine-control-of-the-homeostasis-of-calcium-and-phosphate"><a href="#10-6-Endocrine-control-of-the-homeostasis-of-calcium-and-phosphate" class="headerlink" title="10.6 Endocrine control of the homeostasis of calcium and phosphate"></a>10.6 Endocrine control of the homeostasis of calcium and phosphate</h3><h3 id="10-7-Other-endocrine-glands-and-hormones"><a href="#10-7-Other-endocrine-glands-and-hormones" class="headerlink" title="10.7 Other endocrine glands and hormones"></a>10.7 Other endocrine glands and hormones</h3><h2 id="Chapter-11-Reproduction"><a href="#Chapter-11-Reproduction" class="headerlink" title="Chapter 11 Reproduction"></a>Chapter 11 Reproduction</h2><h3 id="11-1-Male-reproductive-physiology"><a href="#11-1-Male-reproductive-physiology" class="headerlink" title="11.1 Male reproductive physiology"></a>11.1 Male reproductive physiology</h3><h3 id="11-2-Female-reproductive-physiology"><a href="#11-2-Female-reproductive-physiology" class="headerlink" title="11.2 Female reproductive physiology"></a>11.2 Female reproductive physiology</h3><h3 id="11-3-Pregnancy"><a href="#11-3-Pregnancy" class="headerlink" title="11.3 Pregnancy"></a>11.3 Pregnancy</h3><h3 id="11-4-Parturition-and-lactation"><a href="#11-4-Parturition-and-lactation" class="headerlink" title="11.4 Parturition and lactation"></a>11.4 Parturition and lactation</h3>]]></content>
      
      
      <categories>
          
          <category> Course Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Biology </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论与数理统计笔记</title>
      <link href="/2024/09/25/statistics/"/>
      <url>/2024/09/25/statistics/</url>
      
        <content type="html"><![CDATA[<p><font color="gray"><em><strong>什么是统计学？</strong></em></font></p><p><font color="gray"><em>人生，是从不充分的证据开始，引出完美结论的一种艺术。——Samuel Bulter</em></font></p><p><font color="gray"><em>如果我们不在同一时期，把理解了的科学知识变为我们日常生活的一部分，科学家降不可能提高他们互相拥有的知识。——J.D.Bernal</em></font></p><p><font color="gray"><em>与人类有关的事实，可以由数量来表示，并且经过大量的积累重复可以导出一般规律。——英国皇家统计学会</em></font></p><h2 id="Chapter-1-事件与概率-Random-Events-and-Probability"><a href="#Chapter-1-事件与概率-Random-Events-and-Probability" class="headerlink" title="Chapter 1 事件与概率 Random Events and Probability"></a>Chapter 1 事件与概率 Random Events and Probability</h2><h3 id="1-1-随机试验和随机事件"><a href="#1-1-随机试验和随机事件" class="headerlink" title="1.1 随机试验和随机事件"></a>1.1 随机试验和随机事件</h3><ol><li><p><strong>随机现象：</strong>自然界中的客观现象，当人们观测它时，所得结果不能预先确定，而仅仅是多种可能结果之一。</p></li><li><p><strong>随机试验 random experiment：</strong>随机现象的实现和对它某个特征的观测。</p></li><li><p><strong>基本事件 elemental event：</strong>随机试验中的每个单一结果，犹如分子中的原子，在化学反应中不可再分。</p><p><em>e.g. 硬币抛3次，有8种结果：正正正、正正反、正反正……这8种可能结果的每一个都是基本事件。</em></p></li><li><p><strong>随机事件 random event：</strong>简称事件 event，在随机试验中我们所关心的可能出现的各种结果，它由一个或若干个基本事件组成。通常用英文大写字母表示或{一种叙述}来表示。</p></li><li><p><strong>样本空间 sample space：</strong>随机试验中所有基本事件所构成的集合，通常用$\Omega$或$S$表示。Elemental event is the element of sample space, so it is also called sample point</p><p>e.g. 掷一枚骰子，观察出现的点数，则$\Omega={1,2,3,4,5,6}$.</p></li><li><p><strong>必然事件 certain event（$$\Omega$$）：</strong>在试验中一定会发生的事件。</p></li><li><p><strong>不可能事件 impossible event（$$\emptyset$$）：</strong>在试验中不可能发生的事件。</p></li></ol><h3 id="1-2-事件的运算"><a href="#1-2-事件的运算" class="headerlink" title="1.2 事件的运算"></a>1.2 事件的运算</h3><ol><li><p><strong>子事件$$A\subset B$$：</strong>事件$A$发生蕴含时间$B$一定发生，则时间$A$成为事件$B$的子事件。若$A\subset B$，且$B\subset A$，则称时间$A$与事件$B$相等，记为$A=B$.</p><p> <img src="https://raw.githubusercontent.com/thyzzs/Pic/main/AsubsetB.png" alt="img"></p></li><li><p><strong>事件的和 the sum / union of events（$$A\cup B$$）：</strong>事件$A$和事件$B$中至少有一个发生称为事件$A$和事件$B$的和。</p><p> <img src="https://raw.githubusercontent.com/thyzzs/Pic/main/AcapB.png" alt="img"></p></li><li><p><strong>事件的积 the product / intersection of events（$A\cap B$）：</strong>事件$A$和事件$B$同时发生称为$A$和事件$B$的积。如果$A\cap B=\phi$，则称$A$和$B$不相容，即事件$A$和$B$不能同时发生。</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/AcupB.png" alt="img"></p></li><li><p><strong>对立事件 the complementary / inverse event $A^c$（或$\overline{A}$）：</strong>$A$不发生这一事件称为事件$A$​的对立事件（或余事件）。</p><p> <img src="https://raw.githubusercontent.com/thyzzs/Pic/main/notA.png" alt="img"></p></li><li><p><strong>事件$A$和事件$B$的差 the difference of events（$A-B$）：</strong>事件$A$发生而事件$B$不发生这一事件称为事件$A$和事件$B$的差，或等价于$AB^c$.</p><p> <img src="https://raw.githubusercontent.com/thyzzs/Pic/main/AminusB.png" alt="img"></p></li><li><p><strong><em>De Morgan</em>对偶法则 De Morgan dualization law</strong></p></li></ol><p>$$<br>\overline{A\cup B}=\overline{A}\cap \overline{B},<br>$$</p><p>$$<br>\overline{A\cap B}=\overline{A}\cup \overline{B}<br>$$</p><p>上式可推广到<em>n</em>个事件：<br>$$<br>\overline{\bigcup_{i=1}^{n}A_i}=\bigcap_{i=1}^{n}\overline{A_i},<br>$$</p><p>$$<br>\overline{\bigcap_{i=1}^{n}A_i}=\bigcup_{i=1}^{n}\overline{A_i},<br>$$</p><h3 id="1-3-概率的定义-Event-Probability"><a href="#1-3-概率的定义-Event-Probability" class="headerlink" title="1.3 概率的定义 Event Probability"></a>1.3 概率的定义 Event Probability</h3><p>  概率是随机事件发生可能性大小的数字表征，其值在0和1之间，即概率是事件的函数。概率有以下定义：</p><h4 id="1-3-1-古典概率-Classical-Probability-Model"><a href="#1-3-1-古典概率-Classical-Probability-Model" class="headerlink" title="1.3.1 古典概率 Classical Probability Model"></a>1.3.1 古典概率 Classical Probability Model</h4><p>  设一个试验有<em>N</em>个等可能的结果，而事件$E$恰包含其中的$M$个结果，则事件$E$的概率，记为$P(E)$，定义为<br>$$<br>P(E)=M/N<br>$$<br>或<br>$$<br>P(E)=#(M) / #(N),<br>$$<br>其中，$#(M)$为事件$M$中基本事件的个数。</p><p>  古典概型有<strong>两个条件</strong>：</p><ul><li>有限性，试验结果只有有限个（记为<em>n</em>），</li><li>等可能性，每个基本时间发生的可能性相同。</li></ul><blockquote><p><strong>注：</strong>古典概率可引申出“几何概率”。</p></blockquote><h4 id="1-3-2-概率的统计定义-Statistical-Probability"><a href="#1-3-2-概率的统计定义-Statistical-Probability" class="headerlink" title="1.3.2 概率的统计定义 Statistical Probability"></a>1.3.2 概率的统计定义 Statistical Probability</h4><p>  古典概率的两个条件往往不能满足，但可以将事件的随机试验独立反复做<em>n</em>次（<em>Bernouli</em>试验），设事件$A$发生了$n_A$次，称比值$\frac{n_A}{n}$为事件$A$发生的频率，当<em>n</em>越来越大时，频率会在某个值<em>p</em>附近波动，且波动越来越小，这个值<em>p</em>就定义为事件$A$的概率。该学派为频率派。</p><blockquote><p><strong>注：</strong>不能写为$lim_{n\rightarrow{\infty}}\frac{n_A}{n}=p$，因为$\frac{n_A}{n}$不是<em>n</em>的函数。</p></blockquote><h4 id="1-3-3-主观概率-Subjective-Probability"><a href="#1-3-3-主观概率-Subjective-Probability" class="headerlink" title="1.3.3 主观概率 Subjective Probability"></a>1.3.3 主观概率 Subjective Probability</h4><p>  主观概率可以理解为一种心态或倾向性。究其根由，大抵有二：一是根据其经验和知识，二是根据其利害关系。该学派在金融和管理有大量的应用，这一学派成为<em>Bayes</em>学派。</p><h4 id="1-3-4-概率的公理化定义-Axiomatic-Definition-of-Probability"><a href="#1-3-4-概率的公理化定义-Axiomatic-Definition-of-Probability" class="headerlink" title="1.3.4 概率的公理化定义 Axiomatic Definition of Probability"></a>1.3.4 概率的公理化定义 Axiomatic Definition of Probability</h4><p>  对概率运算规定一些简单的基本法则：</p><ol><li><p>非负性 non-negativity：设$A$是随机事件，则$0 \leq P(A) \leq 1$,</p></li><li><p>规范性 normalization：设$\Omega$为必然事件，则$P(\Omega)=1$, 设$\emptyset$为不可能事件，则$P(\emptyset)=0$,</p></li><li><p>可列可加性 countable additivity：若事件$A$和$B$不相容，则$P(A\cup B)=P(A)+P(B)$,</p><p>可推广至无穷：$$P(\bigcup_{i=1}^{n}A_i)=\sum_{i=1}^{\infty}P(A_i)$$. （加法定理 Addition Law of Exclusive Events）</p></li></ol><blockquote><p><strong>注：</strong></p><ol><li><p>一般情况下，$P(A\cup B)=P(A)+P(B)-P(AB)$，$P(A\cup B \cup C)=P(A)+P(B)+P(C)-P(AB)-P(AC)-P(BC)+P(ABC)$ （一般加法定理 General Addition Law）</p></li><li><p>$P(\overline{A})=1-P(A)$ （对立事件公式 Difference Formula of Events）</p></li><li><p>$P(A-B)=P(A)-P(AB)$ （事件之差公式 Complementary Event Formula）</p></li></ol></blockquote><h3 id="1-4-古典概率计算"><a href="#1-4-古典概率计算" class="headerlink" title="1.4 古典概率计算"></a>1.4 古典概率计算</h3><h4 id="1-4-1-排列组合"><a href="#1-4-1-排列组合" class="headerlink" title="1.4.1 排列组合"></a>1.4.1 排列组合</h4><ul><li><strong>选排列：</strong>从<em>n</em>个不同元素中取<em>r</em>个不同取法（$1\leq r\leq n$），$P^{n}_{r}=n(n-1)…(n-r+1)$.</li><li><strong>重复排列：</strong>从<em>n</em>个不同元素中可重复地取<em>r</em>个不同取法（$1\leq r\leq n$），$P^{n}_{r}=n^r$.</li><li><strong>组合：</strong>同选排列，但不考虑次序，$\binom{n}{r}=\frac{P^{n}_{r}}{r!}$.</li></ul><blockquote><p><strong>注：</strong></p><ol><li>排列英文为<em>Permutation</em>，组合英文为<em>Combination</em>.</li><li>$0!$为1。当<em>r</em>不是非负整数时，记号$r!$没有意义.</li><li>一些书中将组合写成$C_{n}^{r}$或$C_{r}^{n}$，更通用的是$\binom{n}{r}$.</li></ol></blockquote><h4 id="1-4-2-其他公式"><a href="#1-4-2-其他公式" class="headerlink" title="1.4.2 其他公式"></a>1.4.2 其他公式</h4><ul><li>组合系数$\binom{n}{r}$又常称为二项式系数</li></ul><p>$$<br>(a+b)^n=\sum_{i=0}^{n}\binom{n}{r}a^i b^{n-1}<br>$$</p><ul><li><em>n</em>个相异物件分成<em>k</em>堆，各堆物件数分为$r_1, …, r_k$的方法是</li></ul><p>$$<br>n!/(r_1!…r_k!).<br>$$</p><h3 id="1-5-条件概率-Conditional-Probability"><a href="#1-5-条件概率-Conditional-Probability" class="headerlink" title="1.5 条件概率 Conditional Probability"></a>1.5 条件概率 Conditional Probability</h3><p>  条件概率就是知道了<strong>一定信息</strong>下得到的随机事件的概率。设事件$A$和$B$是随机试验$\Omega$中的两个事件，$P(B)&gt;0$，称<br>$$<br>P(A|B)=\frac{P(AB)}{P(B)}<br>$$<br>为事件$B$发生条件下事件$A$发生的条件概率，可用图形表示：</p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/con_prob.png" alt="img" style="zoom:33%;"><blockquote><p><strong>注：</strong>事实上，我们所考虑的概率都是在一定条件下计算的，因为随机试验就是在一定条件下进行的。</p></blockquote><h4 id="1-5-1-条件概率性质"><a href="#1-5-1-条件概率性质" class="headerlink" title="1.5.1 条件概率性质"></a>1.5.1 条件概率性质</h4><p>  给定$A$发生，$P(A)&gt;0$：</p><ul><li>$0 \leq P(B|A) \leq 1$</li><li>$0 \leq P(\Omega|A) = 1$</li><li>若$B_1 \cap B_2 = \phi _1$，则$P(B_1 \cup B_2 | A) = P(B_1|A) + P(B_2|A)$，可推广至无穷。</li></ul><h4 id="1-5-2-乘法定理-Multiplication-Theorem-of-Probability"><a href="#1-5-2-乘法定理-Multiplication-Theorem-of-Probability" class="headerlink" title="1.5.2 乘法定理 Multiplication Theorem of Probability"></a>1.5.2 乘法定理 Multiplication Theorem of Probability</h4><p>  由$P(A|B)=\frac{P(AB)}{P(B)} \Rightarrow P(AB)=P(A|B)P(B)$，可推广至<br>$$<br>P(A_1 A_2 …A_n)=P(A_1)P(A_2|A_1)…P(A_n|A_1…A_{n-1})<br>$$</p><blockquote><p><strong>注：</strong> 右边看似麻烦，其实容易算，左边看似简单，但是难算。</p></blockquote><h3 id="1-6-全概率-Total-Probability"><a href="#1-6-全概率-Total-Probability" class="headerlink" title="1.6 全概率 Total Probability"></a>1.6 全概率 Total Probability</h3><p>  设$B_1,B_2,…B_n$是样本空间$\Omega$中的<strong>两两不相容</strong>的一组事件，即$B_i B_j=\phi$，$i\neq j$，且满足$\bigcup_{i=1}^{n}B_i=\Omega$，则称$B_1,B_2,…B_n$是样本空间$\Omega$​的一个分割 partition（又称为<strong>完备事件群</strong> Collectively exhaustive events）。</p><p>  $P(B_i)$ is also known as prior probability. Prior probability, in Bayesian statistics, is <strong>the probability of an event before new data is collected</strong>. $A$ is composed of the sum of all the exclusive events, and $P(A)$ is called total probability.</p><p>  设${B_1,B_2,…B_n}$是样本空间$\Omega$的一个分割，$A$为$\Omega$的一个事件，则（全概率公式 Law of Total Probability）<br>$$<br>P(A)=\sum_{i=1}^{n}P(A|B_i)P(B_i)<br>$$<br><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/full_prob.png" alt="img"></p><p><strong>Proof</strong>：</p><p>  Since $B_1,B_2,…B_n$ are mutually exclusive, $AB_1,AB_2,…AB_n$ are also mutually exclusive. Therefore, by addition theorem and multiplication theorem we can get</p><p>$$<br>\begin{align}<br>P(A)&amp;=P(A \cap \Omega)\<br>&amp;=P(A \cap \sum_{i=1}^{n}B_i)\<br>&amp;=P(\sum_{i=1}^{n}AB_i)\<br>&amp;=\sum_{i=1}^{n}P(AB_i)\<br>&amp;=\sum_{i=1}^{n}P(A|B_i)P(B_i)\<br>&amp;=\sum_{i=1}^{n}P(A|B_i)P(B_i)<br>\end{align}<br>$$</p><blockquote><p><strong>注：</strong>有时不易直接计算事件$A$的概率，但是在每个$B_i$上$A$的条件概率容易求出</p></blockquote><h3 id="1-7-Bayes公式-Bayes’-Theorem（逆概率公式）"><a href="#1-7-Bayes公式-Bayes’-Theorem（逆概率公式）" class="headerlink" title="1.7 Bayes公式 Bayes’ Theorem（逆概率公式）"></a>1.7 <em>Bayes</em>公式 Bayes’ Theorem（逆概率公式）</h3><p>  设${B_1, B_2, …B_n}$是样本空间的一个分割，$A$为$\Omega$中的一个事件，$P(B_i)&gt;0$，$i=1,2,…,n$，$P(A)&gt;0$，则<br>$$<br>P(B_i|A)=\frac{P(A|B_i)P(B_i)}{\sum_{j=1}^{n}P(A|B_j)P(B_j)}<br>$$</p><p><strong>Proof</strong>: From conditional probability formula, substitute law of total probability and multiplication theorem.</p><blockquote><p><strong>注：</strong>当有因果关系互换时必须用<em>Bayes</em>公式。</p></blockquote><h3 id="1-8-事件的独立性-Independence-of-Events"><a href="#1-8-事件的独立性-Independence-of-Events" class="headerlink" title="1.8 事件的独立性 Independence of Events"></a>1.8 事件的独立性 Independence of Events</h3><p>  设$A$，$B$是随机试验中的两个事件，若满足$P(AB)=P(A)P(B)$，则称事件$A$和$B$相互独立。判断事件的独立，应该是<strong>从实际出发</strong>，如果能够判断事件$B$的发生与否对事件$A$的发生与否不产生影响，则事件$A$，$B$​即为独立。</p><p>  If events $A$ and $B$ are mutually independent, then $A$ and $\overline{B}$, $\overline{A}$ and $B$, $\overline{A}$ and $\overline{B}$ are all mutually independent.</p><p>  设$\widetilde{A}$表示事件$A$发生和不发生之一，$\widetilde{B}$表示事件$B$发生和不发生之一。有独立性的定义可推至$P(\widetilde{A}\widetilde{B})=P(\widetilde{A})P(\widetilde{B})$（一共有四个等式 [if and only if (iff)]）。可推广至：<br>$$<br>P(\widetilde{A}_1\widetilde{A}_2…\widetilde{A}_n)=P(\widetilde{A}_1)…P(\widetilde{A}_n)<br>$$<br>上面有$2^n$个等式。</p><blockquote><p><strong>注：</strong>独立（independent）和不相容（exclusive）是不同的两个概念，前者有公共部分，后者没有公共部分，独立一定相容。</p></blockquote><h4 id="1-8-1-独立事件的条件概率-Conditional-Probability-of-Independent-events"><a href="#1-8-1-独立事件的条件概率-Conditional-Probability-of-Independent-events" class="headerlink" title="1.8.1 独立事件的条件概率 Conditional Probability of Independent events"></a>1.8.1 独立事件的条件概率 Conditional Probability of Independent events</h4><p>  If $P(A)&gt;0$, then the equivalent condition of events $A$ and $B$ being mutually independent<br>$$<br>P(B)=P(B|A)<br>$$</p><h3 id="1-9-重要公式与结论"><a href="#1-9-重要公式与结论" class="headerlink" title="1.9 重要公式与结论"></a>1.9 重要公式与结论</h3><p>$$<br>\begin{align}<br>&amp;(1)\ P(\overline{A})=1-P(A)\<br>\<br>&amp;(2)\ P(A \cup B)=P(A)+P(B)-P(AB)\<br>\<br>&amp;(3)\ P(A\cup B \cup C)=P(A)+P(B)+P(C)-P(AB)-P(AC)-P(BC)+P(ABC)\<br>\<br>&amp;(4)\ P(A-B)=P(A)-P(AB)\<br>\<br>&amp;(5)\ P(A\overline{B})=P(A)-P(AB),P(A)=P(AB)+P(A\overline{B}),\<br>&amp;\ \ \ \ \ \ P(A\cup B)=P(A)+P(\overline{A}B)=P(AB)+P(A\overline{B})+P(\overline{A}B)\<br>\<br>&amp;(6)\ P(\overline{A}<em>1|B)=1-P(A_1|B),P(A_1\cup A_2|B)=P(A_1|B)+P(A_2|B)-P(A_1A_2|B)\<br>&amp;\ \ \ \ \ P(A_1A_2|B)=P(A_1|B)P(A_2|A_1B)\<br>\<br>&amp;(7)\ 若A_1,A_2,…A_n相独立，则P(\bigcap</em>{i=1}^{n}A_i)=\prod_{i=1}^{n}P(A_i),P(\bigcup_{i=1}^{n}A_i)=\prod_{i=1}^{n}(1-P(A_i))<br>\end{align}<br>$$</p><h2 id="Chapter-2-随机变量及其分布-Random-Variables-and-Their-Distribution"><a href="#Chapter-2-随机变量及其分布-Random-Variables-and-Their-Distribution" class="headerlink" title="Chapter 2 随机变量及其分布 Random Variables and Their Distribution"></a>Chapter 2 随机变量及其分布 Random Variables and Their Distribution</h2><h3 id="2-1-随机变量的概念-Random-Variable"><a href="#2-1-随机变量的概念-Random-Variable" class="headerlink" title="2.1  随机变量的概念 Random Variable"></a>2.1  随机变量的概念 Random Variable</h3><ol><li><strong>随机变量 Random variable：</strong>值随机会而定的变量，研究随机试验的一串事件。可按维数分为一维、二维至多维随机变量。按性质可分为<strong>离散型随机变量</strong>以及<strong>连续型随机变量</strong>。A random variable is a function that assigns numeric values to different events in a sample space.</li><li><strong>分布 Distribution：</strong>事件之间的联系，用来计算概率。</li><li><strong>示性函数 Indication function：</strong>$I_A(\omega)=\begin{cases}<br> 1&amp; \omega \in A \<br> 0&amp; \omega \notin A<br>\end{cases}$，事件$A$有随机变量$I_A$表示出来，$I_A$称为事件$A$的示性函数。</li></ol><h3 id="2-2-离散型随机变量及其分布-Discrete-Random-Variables"><a href="#2-2-离散型随机变量及其分布-Discrete-Random-Variables" class="headerlink" title="2.2 离散型随机变量及其分布 Discrete Random Variables"></a>2.2 离散型随机变量及其分布 Discrete Random Variables</h3><ol><li><p><strong>离散型随机变量 discrete random variables：</strong>设$X$为一随机变量，如果$X$<strong>只取有限个或可数个值</strong>，则称$X$为一个（一维）离散型随机变量。A random variable for which there exists a discrete set of numeric values is a discrete random variable.</p></li><li><p><strong>概率函数：</strong>设$X$为一随机变量，其全部可能值为${a_1, a_2,…}$，则$p_i=P(X=a_i),i=1,2,…$称为$X$的概率函数。</p></li><li><p><strong>概率分布：</strong>离散型随机变量的概率分布可以用分布表来表示：</p><table><thead><tr><th align="center">可能值</th><th align="center">$a_1$</th><th align="center">$a_2$</th><th align="center">…</th><th align="center">$a_i$</th><th align="center">…</th></tr></thead><tbody><tr><td align="center">概率</td><td align="center">$p_1$</td><td align="center">$p_2$</td><td align="center">…</td><td align="center">$p_i$</td><td align="center">…</td></tr></tbody></table></li><li><p><strong>概率分布函数 cumulative-distribution function：</strong></p><ul><li><strong>定义：</strong>设$X$为一随机变量，则函数</li></ul></li></ol><p>$$<br>F(X)=P(X\leq x)\quad(-\infty&lt;x&lt;\infty)<br>$$</p><p>   称为$X$的分布函数。（<strong>注：这里并未限定$X$为离散型的，它对任何随机变量都有定义。</strong>）</p><ul><li><p><strong>性质：</strong></p><ul><li>单调性：$F(x)$是单调非降的：$\forall x_1&lt;x_2$，有$F(x_1)\leq F(X_2)$.</li></ul></li><li><p>有界性：$0 \leq F(x) \leq 1$；当$x \rightarrow \infty$时，$F(x)\rightarrow1$；当$x \rightarrow-\infty$时，$F(x)\rightarrow0$​.</p></li><li><p>右连续性：$\forall x_0, \lim_{x\to x_0+0}F(x)=F(x_0)$, that is, $F(x)$​ is a right continuous function.<br>$$<br>\lim_{x\to x_0+0}(F(x)-F(x_0))=\lim_{x \to x_0+0}P{x_0&lt;X\leq x}=0<br>$$</p></li></ul><pre><code>$F(x)$右连续非左连续。</code></pre><ul><li>Relationship between probability and distribution function:</li></ul><p>$$<br>\begin{align}<br>&amp;(1)\ P{a&lt;X\leq b}=P{X\leq b}-P{X\leq a}=F(b)-F(a)\<br>\<br>&amp;(2) P{X&gt;a}=1-P{X\leq a}=1-F(a)\<br>\<br>&amp;(3) P{X&lt;a}=\lim_{x\to a-0}P{X\leq x}=\lim_{x\to a-0}F(x)\<br>\<br>&amp;(4) P{X\geq a}=1-P{X&lt;a}=1-\lim_{x\to a-0}F(x)\<br>\<br>&amp;(5) P{X=a}=P{X\leq a}-P{X&lt;a}=F(a)-\lim_{x\to a-0}F(x)\<br>\end{align}<br>$$</p><ul><li><p><strong>离散型随机变量分布函数：</strong></p><p>对于离散型随机变量，$F(X)=P(X\leq x)=\sum_{(i|a_i\leq x)}p_i$, $p_i=P(X=i)=F(i)-F(i-1)$。</p></li></ul><ol start="5"><li><p><strong>二项分布（<em>Bionomial distribution</em>）</strong>：</p><ul><li><p><strong>定义：</strong>设某事件$A$在一次试验中发生的概率为$p$，先把试验独立地重复n次，以$X$记$A$在这n次试验中发生的次数，则$X$取值$0,1,…,n$，且有<br>$$<br>P(X=k)=\binom{n}{k}p^k(1-p)^{n-k},\quad k=0,1,…,n<br>$$<br>称$X$服从二项分布，记为$X\sim B(n,p)$.</p></li><li><p><strong>服从二项分布的条件：</strong>1. 各次试验的条件是稳定的，即事件$A$的概率$p$在各次试验中保持不变；2. 各次试验的独立性</p></li></ul></li><li><p><strong>泊松分布（<em>Poisson distribution</em>）：</strong></p><ul><li><p><strong>定义：</strong>设随机变量$X$的概率分布为<br>$$<br>P(X=i)=\frac{\lambda^i}{i!}e^{-\lambda},\quad i=0,1,2,…,\quad\lambda&gt;0<br>$$<br>则称$X$服从参数为$\lambda$的<em>Poisson</em>分布，并记$X\sim P(\lambda)$.</p></li><li><p><strong>特点：</strong></p><ul><li><p>描述稀有事件发生概率</p></li><li><p>作为二项分布的近似。若$X\sim B(n,p)$，其中$n$很大，$p$很小，而$np=\lambda$不太大时（一般$n&gt;30,np\leq5$），则$X$的分布接近泊松分布$P(\lambda)$.</p><p><strong>推导：</strong></p><p>若事件$A\sim B(n,p)$，且$n$很大，$p$很小，而$np=\lambda$不太大时，设$\lambda=np$，<br>$$<br>\begin{align}<br>P(X=i)&amp;=\lim_{n\rightarrow \infty}\binom{n}{i}(\frac{\lambda}{n})^i(1-\frac{\lambda}{n})^{n-i}\<br>&amp;=\lambda^i\lim_{n\rightarrow \infty}\frac{\binom{n}{i}}{n^i}\lim_{n\rightarrow \infty}(1-\frac{\lambda}{n})^{n-i}\<br>&amp;=\lambda^i e^{-\lambda}\lim_{n\rightarrow \infty}\frac{n(n-1)(n-2)…(n-i+1)}{i!n^i}\<br>&amp;=\lambda^i e^{-\lambda}\lim_{n\rightarrow \infty}\frac{(1-\frac{1}{n})(1-\frac{2}{n})…(1-\frac{i-1}{n})}{i!}\<br>&amp;=\frac{\lambda^i}{i!}e^{-\lambda}<br>\end{align}<br>$$</p></li></ul></li></ul></li></ol><h3 id="2-3-连续型随机变量及其分布-Continuous-Random-Variables"><a href="#2-3-连续型随机变量及其分布-Continuous-Random-Variables" class="headerlink" title="2.3 连续型随机变量及其分布 Continuous Random Variables"></a>2.3 连续型随机变量及其分布 Continuous Random Variables</h3><ol><li><p><strong>连续型随机变量 continuous random variable：</strong>设$X$为一随机变量，如果$X$<strong>不仅有无限个而且有不可数个值</strong>，则称$X$为一个连续型随机变量。A random variable whose possible values cannot be enumerated is a continuous random variable.</p></li><li><p><strong>概率密度函数 probability-density function：</strong></p><ul><li><p><strong>定义：</strong>The probability density function $f(x)$ of the continuous random variable $X$ is a function whose integral from $x=a$ to $x=b$ $(\forall a,b\in R\ and\ b\geq a)$ gives the probability that $X$ takes a value in the interval $(a,b]$, i.e. 设连续型随机变量$X$有概率分布函数$F(x)$，则$F(x)$的导数$f(x)=F’(x)$称为$X$​的概率密度函数。</p><p>  $P{a&lt;X\leq b}=\int_{a}^{b}f(X),dx$</p></li><li><p><strong>性质：</strong></p><ul><li>$F(x)$ is a continuous function;</li><li>对于任意的$-\infty&lt;a\leq b&lt;+\infty$，有$P(a\leq X\leq b)=F(b)-F(a)=\int_{a}^{b}f(x)dx$​​;</li><li>$F’(x)=f(x)$;​</li><li>对于任意的$-\infty&lt;x&lt;+\infty$，有$P(X=x)=\int_{x}^{x}f(u)du=0$.</li></ul></li><li><p><strong>注：</strong></p><ul><li>对于所有的$-\infty&lt;x&lt;+\infty$，有$f(x)\ge 0$；</li><li>$\int_{-\infty}^{+\infty}f(x)dx=1$；</li><li>假设有总共一个单位的质量连续地分布在$a\leq x\leq b$上，那么$f(x)$表示在点$x$的质量密度且$\int_{c}^{d}f(x)dx$表示在区间$[c, d]$上的全部质量。</li></ul></li></ul></li><li><p><strong>概率分布函数 cumulative-distribution function：</strong>设$X$为一连续型随机变量，则<br>$$<br>F(x)=\int_{-\infty}^xf(u)du,\quad-\infty&lt;x&lt;+\infty<br>$$</p></li><li><p><strong>正态分布（<em>Normal distribution</em>）：</strong></p><ul><li><p><strong>定义：</strong>如果一个随机变量具有概率密度函数<br>$$<br>f(x)=\frac{1}{\sqrt{2\pi}\sigma}e^{-\frac{(x-\mu)^2}{2\sigma^2}},\quad -\infty&lt;x&lt;+\infty<br>$$<br>其中$-\infty&lt;\mu&lt;+\infty,\ \sigma^2&gt;0$，则称$X$为正态随机变量，并记为$X\sim N(\mu,\sigma^2)$.特别地，$\mu=0,\sigma=1$的正态分布成为标准正态分布。用$\Phi(x)$和$\phi(x)$表示标准正态分布$N(0,1)$的分布函数和密度函数。</p></li><li><p><strong>性质：</strong></p><ul><li>正态分布的密度函数是以$x=\mu$为对称轴的对称函数，$\mu$称为位置参数，密度函数在$x=\mu$处达到最大值，在$(-\infty,\mu)$和$(\mu,+\infty)$内严格单调。</li><li>$\sigma$的大小决定了密度函数的陡峭程度，通常称$\sigma$为正态分布的形状参数。</li><li>若$X\sim N(\mu,\sigma^2)$，则$Y=(X-\mu)/\sigma\sim N(0,1)$.</li><li>$\Phi(-k)=1-\Phi(k)$</li></ul></li><li><p><strong>图像（密度和分布函数图）：</strong></p></li></ul></li></ol><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/normal_dense.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/normal_dist.png" alt="img"></p><ol start="4"><li><p><strong>指数分布（<em>Exponential distribution</em>）：</strong></p><ul><li><p><strong>定义：</strong>若随机变量$X$具有概率密度函数<br>$$<br>f(x)=<br>\begin{cases}<br>\lambda e^{-\lambda x}&amp; x&gt;0 \<br>0&amp; x\leq 0<br>\end{cases}<br>=\lambda e^{-\lambda x}I_{(0,\infty)}(x)<br>$$<br>其中$\lambda &gt;0$为常数，则称$X$服从参数为$\lambda$的指数分布。</p></li><li><p><strong>概率分布函数：</strong>$F(x)=\begin{cases}<br>1-e^{-\lambda x}&amp; x&gt;0 \<br>0&amp; x\leq 0<br>\end{cases}=(1-e^{-\lambda x})I_{(0,\infty)}(x)$</p></li><li><p><strong>性质：</strong></p><ul><li><p>无后效性，即无老化，要来描述寿命（如元件等）的分布。</p><p><strong>证明：</strong></p><p>“无老化”就是说在时刻$x$正常工作的条件下，其失效率总保持为某个常数$\lambda&gt;0$，与$x$无关，可表示<br>$$<br>\begin{align}<br>&amp;P(x\leq X\leq x+h|X&gt;x)/h=\lambda\quad(h\rightarrow0)\<br>证：\<br>&amp;\lim_{h\rightarrow0}\frac{P(x\leq X\leq x+h|X&gt;x)}{h}\<br>=&amp;\lim_{h\rightarrow0}\frac{P(x\leq X\leq x+h,X&gt;x)}{P(X&gt;x)h}\<br>=&amp;\lim_{h\rightarrow0}\frac{P(x&lt; X\leq x+h)}{P(X&gt;x)h}\<br>=&amp;\lim_{h\rightarrow0}\frac{-e^{-\lambda t}|^{x+h}<em>{x}}{-e^{-\lambda t}|^{\infty}</em>{x}h}\<br>=&amp;\lim_{h\rightarrow0}\frac{e^{-\lambda x}-e^{-\lambda x-\lambda h}}{e^{-\lambda x}h}\<br>=&amp;\lim_{h\rightarrow0}\frac{1-\frac{1}{e^{xh}}}{h}\<br>=&amp;\lim_{h\rightarrow0}\lambda e^{-\lambda h}\<br>=&amp;\lambda<br>\end{align}<br>$$</p></li><li><p>$\lambda$为失效率，失效率越高，平均寿命就越小。</p></li></ul></li><li><p><strong>图像（密度函数）：</strong></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/exponential_dense.png" alt="img"></p></li></ul></li><li><p><strong>均匀分布（<em>Uniform distribution</em>）：</strong></p><ul><li><p><strong>定义：</strong>设$a&lt;b$，如果分布$F(x)$具有密度函数<br>$$<br>f(x)=<br>\begin{cases}<br>\frac{1}{b-a}&amp; a\leq x\leq b \<br>0&amp; 其它<br>\end{cases}<br>=\frac{1}{b-a}I_{(a,b)}(x)<br>$$<br>则该分布为区间$[a,b]$上的均匀分布。</p></li><li><p><strong>概率分布函数：</strong><br>$$<br>F(x)=\begin{cases}<br>0&amp; x\leq a \<br>\frac{x-a}{b-a}&amp; a&lt;x\leq b\<br>1 &amp;x&gt;b<br>\end{cases}<br>$$</p></li><li><p><strong>性质：</strong>$\forall R(c,d) \subset R(a,b),\ P(c&lt;X&lt;d)=\frac{d-c}{b-a}$​</p></li><li><p><strong>数学期望：</strong><br>  $$<br>  E(X)=\int_{-\infty}^{\infty}xf(x),dx=\int_{-a}^{b}x\times\frac{1}{b-a},dx=\frac{1}{b-a}\int_{a}^{b}x,dx=\frac{a+b}{2}<br>  $$</p></li></ul></li><li></li></ol><h3 id="2-4-多维随机变量（随机向量）"><a href="#2-4-多维随机变量（随机向量）" class="headerlink" title="2.4 多维随机变量（随机向量）"></a>2.4 多维随机变量（随机向量）</h3><ol><li><p><strong>随机向量：</strong>设$X={X_1,…,X_n}$.如果每个$X_i$都是一个随机变量，$i=1,…,n$，则称$X$为$n$维随机变量或者随机向量。</p></li><li><p><strong>离散型随机向量的分布：</strong>如果每一个$X_i$都是一个离散型随机变量，$i=1,…,n$，则称$X={X_1,…,X_n}$为一$n$维离散型随机变量。设$X_i$的所有可能取值为${a_{i1},a{i2},…},\quad i=1,…,n$，则称<br>$$<br>p(j_1,…,j_n)=P(X_1=a_{1j_1},…,X_n=a_{nj_n}),\quad j_1,…,j_n=1,2,…<br>$$<br>为$n$维随机变量$X$的概率函数，这也是其联合分布。</p><p>其具有下列性质：</p><ul><li>$p(j_1,…,j_n)\geq0,\quad j_i=1,2,…,\quad i=1,2,…,n;$</li><li>$\sum_{j_1,…,j_n}p(j_1,…,j_n)=1.$</li></ul><blockquote><p><strong>注：</strong>对于高维离散型随机变量，一般不使用分布函数</p></blockquote></li><li><p><strong>多项式分布</strong></p><ul><li><p><strong>定义：</strong>设$A_1,A_2,…,A_n$是某一试验之下的完备事件群，分别以$p_1,p_2,…,p_n$记事件$A_1,A_2,…,A_n$的概率，则$p_i\geq 0,\quad p_1+…+p_n=1$.将试验独立地重复$N$次，以$X_i$记在这$N$次试验中事件$A_i$出现的次数$(i=1,…,n)$，则$X=(X_1,…,X_n)$为一个$n$维随机向量。该分布记作$M(N;p_1,…,p_n)$.</p></li><li><p><strong>概率分布函数：</strong>$P(X_1=k_1,X_2=k_2,…,X_n=k_n)=\frac{N!}{k_1!k_2!…k_n!}p_1^{k_1}p_2^{k_2}….p_n^{k_n}$</p></li></ul></li><li><p><strong>连续型随机向量的分布：</strong>$X={X_1,…,X_n}$为$n$维连续型随机变量，如果存在$\R^n$上的非负函数$f(x_1,…,x_n)$，使得对任意的$-\infty&lt;a_1\leq b_1&lt;+\infty,…,-\infty&lt;a_n\leq b_n &lt;+\infty$，有<br>$$<br>P(a_1\leq X_1 \leq b_1,…,a_n\leq X_n\leq b_n)=\int_{a_n}^{b_n} …\int_{a_1}^{b_1}f(x_1,…,x_n)dx_1…dx_n<br>$$<br>则称为$f$为$X$的概率密度函数。有<br>$$<br>P(a_1\leq X_1 \leq b_1,…,a_n\leq X_n\leq b_n)=F(x_1,…,x_n)<br>$$<br>则称为$F$为$X$的（联合）分布函数。其中分布函数$F(X_1,…,X_n)$具有下述性质：</p><ul><li>$F(x_1,…,x_n)$单调非降；</li><li>对任意的$1\leq j \leq n$，有$\lim_{x_j\rightarrow-\infty F(x_1,…,x_n)}=0$；</li><li>$\lim_{x_1\rightarrow\infty,…,x_n\rightarrow\infty}F(x_1,…,x_n)=1$</li></ul></li><li><p><strong>边缘分布：</strong>因为$X$的每个分量$X_i$都是一维随机变量，故它们都有各自的分布$F_i\ (i=1,…,n)$，这些都是一维分布，称为随机向量$X$或其分布$F$的边缘分布。</p><ul><li><p><strong>离散型随机向量</strong></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/partial_discrete.png" alt="img"></p><p>行和与列和就是边缘分布。即固定某个$x_i$，即可计算边缘分布，故有<br>$$<br>p_X(x_i)=P(X=x_i)=\sum_{j}^{m}P(X=x_i,Y=y_j)=\sum_{j}^{m}p_{ij}=p_{i\cdot},\quad i=1,2,…,n\<br>p_Y(y_i)=P(Y=y_i)=\sum_{i}^{m}P(X=x_i,Y=y_j)=\sum_{i}^{m}p_{ij}=p_{j\cdot},\quad j=1,2,…,n<br>$$</p></li><li><p><strong>连续型随机向量</strong></p><p>为求某分量$X_i$的概率密度函数，只需把$f(x_1,…,x_n)$中的$x_i$固定，然后对$x_1,…,x_{i-1},x_{i+1},…,x_n$在$-\infty$到$\infty$之间做定积分，如<br>$$<br>(X,Y)\sim f(x, y)\<br>f_X(u)=\int^{+\infty}<em>{-\infty}f(u,v)dv\<br>f_Y(u)=\int^{+\infty}</em>{-\infty}f(u,v)du\<br>$$</p></li></ul></li></ol><blockquote><p><strong>注：</strong>二维正态分布$N(a,b,\sigma_1^2,\sigma_2^2,\rho )$的边缘分布密度分别是一维正态分布$N(a,\sigma_1^2)$和$N(b,\sigma_2^2)$。因此联合分布可推边缘分布，而边缘分布不可推联合分布。</p></blockquote><h3 id="2-5-条件分布和随机变量的独立性"><a href="#2-5-条件分布和随机变量的独立性" class="headerlink" title="2.5 条件分布和随机变量的独立性"></a>2.5 条件分布和随机变量的独立性</h3><ol><li><p><strong>离散型随机变量的条件分布：</strong>设$(X,Y)$为二维离散型随机变量，对于给定的事件${Y=y_j}$，其概率$P(Y=y_j)&gt;0$，则称<br>$$<br>P(X=x_i|Y=y_j)=\frac{P(X=x_i,Y=y_j)}{P(Y=y_j)}=\frac{p_{ij}}{p_{\cdot j}},\quad i=1,2,…<br>$$<br>为在给定$Y=y_j$的条件下$X$的条件分布律。类似的，称<br>$$<br>P(Y=y_i|X=x_j)=\frac{P(X=x_i,Y=y_j)}{P(X=x_j)}=\frac{p_{ij}}{p_{i\cdot}},\quad j=1,2,…<br>$$<br>为在给定$X=x_j$的条件下$Y$的条件分布律。</p></li><li><p><strong>连续型随机变量的条件分布：</strong>设$(X,Y)$为二维连续型随机变量，对于给定条件$Y=y$下的条件概率密度为<br>$$<br>f_{X|Y}(x|y)=\frac{f(x,y)}{f_Y(y)}, \quad f_Y(y)&gt;0.\<br>$$<br>类似的，在$X=x$下的条件概率密度为<br>$$<br>f_{Y|X}(y|x)=\frac{f(x,y)}{f_X(x)}, \quad f_X(x)&gt;0.\<br>$$</p><blockquote><p>二维正态分布$\rho=0$时，其联合密度分布等于条件密度分布的乘积。</p></blockquote></li><li><p><strong>随机变量的独立性</strong></p><p>称随机变量$X_1, …,X_n$相互独立，</p><ul><li><p><strong>离散型随机变量</strong></p><p>则联合分布律等于各自的边缘分布律的乘积，即<br>$$<br>P(X_1=x_1,…,X_n=x_n)=P(X_1=x_1)…P(X_n=x_n)<br>$$<br>其中$(x_1,…x_n)$为$(X_1,…,X_n)$的值域中的任意一点。</p></li><li><p><strong>连续型随机变量</strong></p><p>则联合密度等于各自的边缘密度的乘积，即<br>$$<br>f(x_1,…,x_n)=f_1(x_1)…f_n(x_n),\quad \forall(x_1,…,x_n)\in \R ^n<br>$$</p></li><li><p><strong>更具一般地</strong></p><p>设$X_1,…,X_n$为$n$个随机变量，如果它们的联合分布函数等于各自边缘分布函数的乘积，即<br>$$<br>F(X_1, …,x_n)=F_1(x_1)…F_n(x_n),\quad \forall (x_1,…,x_n)\in \R^n<br>$$<br>则称随机变量$X_1, …,X_n$相互独立。</p></li></ul><blockquote><p><strong>一些重要的结论</strong></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/conclusion.png" alt="img"></p></blockquote></li></ol><h3 id="2-6-随机变量的函数的概率分布"><a href="#2-6-随机变量的函数的概率分布" class="headerlink" title="2.6 随机变量的函数的概率分布"></a>2.6 随机变量的函数的概率分布</h3><p>  最简单的情形，是由一维随机变量$X$的概率分布去求其一给定函数$Y=g(X)$的分布。较为常见的，是由$(X_1,X_2,…,X_n)$的分布去求$Y=g(X_1,X_2,…,X_n)$的分布。更一般地，由$(X_1,X_2,…,X_n)$的分布去求$(Y_1,Y_2,…,Y_m)$的分布，其中$Y_i=g_i(X_1,X_2,…,X_n),\quad i=1,2,…,m$.</p><ol><li><p><strong>离散型分布的情形：</strong>设$X$的分布律为$P(X=x_i)=p_i,\quad i=1,2,…$</p><p>$g:R\rightarrow R$，令$Y=g(X)$，则$Y$的分布律为<br>$$<br>P(Y=y_j)=P(g(X)=y_j)=\sum_{x_i:g(x_i)=y_j}P(X=x_i)=\sum_{i:g(x_i)=y_j}p_i<br>$$<br>即把$Y=g(X_1,…,X_n)$可以取的不同值找出来，把与某个值相应的全部$(X_1,…,X_n)$值的概率加起来，即得$Y$取这个值的概率。</p></li><li><p><strong>连续型分布的情形</strong></p><ul><li><p><strong>一个变量的情况</strong></p><p>设$X$有密度函数$f(x)$.设$Y=g(x)$，$g$是一个严格单调的函数，即当$x_1&lt;x_2$时，必有$g(x_1)&lt;g(x_2)$或当$x_1&gt;x_2$时，必有$g(x_1)&gt;g(x_2)$.又设$g$的导数$g’$存在。由于$g$的严格单调性，其反函数$X=h(Y)$存在，且$h$的导数$h’$也存在。有$g(X)$的密度函数$l(y)$为<br>$$<br>l(y)=f(h(y))|h’(y)|.<br>$$</p></li><li><p><strong>多个变量的情形</strong></p><p>以两个为例，设$(X_1,X_2)$的密度函数$f(x_1,x_2)$，$Y_1,Y_2$都是$(X_1,X_2)$的函数：<br>$$<br>Y_1=g_1(X_1,X_2),\quad Y_2=g_2(X_1,X_2),<br>$$<br>要求$(Y_1,Y_2)$的概率密度函数$l(y_1,y_2)$.假定$(X_1,X_2)$到$(Y_1,Y_2)$的一一对应变换有逆变换：<br>$$<br>X_1=h_1(Y_1,Y_2),\quad X_2=h_2(Y_1,Y_2)<br>$$<br>即雅可比行列式<br>$$<br>J(y_1,y_2)=\begin{vmatrix}<br> \partial h_1/\partial y_1&amp;\partial h_1/\partial y_2 \<br> \partial h_2/\partial y_1&amp;\partial h_2/ \partial y_2<br>\end{vmatrix}<br>$$<br>不为0.在$(Y1,Y2)$的平面上任取一个区域$A$，变换后到$(X_1,X_2)$平面的区域$B$，则有<br>$$<br>P((Y_1,Y_2)\in A)=P((X_1,X_2)\in B)=\iint_Bf(x_1,x_2)dx_1dx_2\<br>P((Y_1,Y_2)\in A)=\iint_Af(h_1(y_1,y_2),h_2(y_1,y_2))|J(y_1,y_2)|dy_1dy_2<br>$$</p></li><li><p><strong>随机变量和的密度函数</strong></p><p>设$(X_1,X_2)$的联合密度函数为$f(x_1,x_2)$，$Y=X_1+X_2$的密度函数：</p><ul><li>一般的，$l(y)=\int_{-\infty}^\infty f(x_1,y-x_1)dx_1=\int_{-\infty}^\infty f(x,y-x)dx$.</li><li>若$X_1,X_2$独立，则$l(y)=\int_{-\infty}^\infty f_1(x)f_2(y-x)dx=\int_{-\infty}^\infty f_1(y-x)f_2(x)dx$.</li></ul><blockquote><p>两个独立的正态变量的和仍服从正态分布，且有关的参数相加，其逆命题也成立。</p></blockquote></li><li><p><strong>随机变量商的密度函数</strong><br>设$(X_1,X_2)$的联合密度函数为$f(x_1,x_2)$，$Y=X_1/X_2$的密度函数：</p><ul><li>一般的，$l(y)=\int_{0}^\infty x_1f(x_1,x_1y)dx_1$.</li><li>若$X_1,X_2$独立，则$l(y)=\int_{0}^\infty x_1f_1(x_1)f_2(x_1y)dx_1$.</li></ul></li></ul></li></ol><ul><li><p><strong>统计学三大分布</strong></p><p>引入两个重要的特殊函数：</p><p>$\Gamma(x)=\int_0^\infty e^{-t}t^{x-1}dt\quad (x&gt;0)$ 和 $B(x,y)=\int_0^1t^{x-1}(1-t)^{y-1}dt\quad (x&gt;0,y&gt;0)$</p><blockquote><p>其中，$\Gamma(1)=1,\quad \Gamma(1/2)=\sqrt{\pi},\quad \Gamma(n)=(n-1)!$</p><p>$B(x,y)=\Gamma(x)\Gamma(y)/\Gamma(x+y)$</p></blockquote><ul><li><p><strong>卡方分布，记作$\chi_n^2$</strong></p><p><strong>密度函数：</strong>$k_n(x)=\frac{1}{\Gamma(\frac{n}{2}2^{n/2})}e^{-x/2}x^{(n-2)/2}I_{(0,\infty)}(x)$</p><p><strong>性质：</strong>1. 设$X_1,X_2$独立，$X_1\sim\chi_m^2,X_2\sim\chi_n^2$，则$X_1+X_2\sim\chi_{m+n}^2$</p><p>​    2. 若$X_1,…,X_n$独立，且都服从指数分布，则$X=2\lambda(X_1+…+X_n)\sim\chi_{2n}^2$</p></li><li><p><strong>$t$分布，记作$t_n$</strong></p><p>设$X_1，X_2$独立，$X_1\sim\chi_n^2,X_2\sim N(0,1)$，而$Y=X_2/\sqrt{X_1/n}$，则$Y\sim t_n$.</p><p><strong>密度函数：</strong>$t_n(y)=\frac{\Gamma((n+1)/2)}{\sqrt{n\pi}\Gamma(n/2)}(1+\frac{y^2}{n})^{(\frac{n+1}{2})}$</p><p><strong>性质：</strong>密度函数关于原点对称，其图形与正态分布$N(0,1)$的密度函数的图形相似。</p></li><li><p><strong>$F$分布，记作$F_{mn}$</strong></p><p>设$X_1,X_2$独立，$X_1\sim\chi_n^2,X_2\sim\chi_m^2$，而$Y=m^{-1}X_2/(n^{-1}X_1)$，则$Y\sim F_{mn}$</p><p><strong>密度函数：</strong>$f_{mn}(y)=m^{m/2}n^{n/2}\frac{\Gamma(\frac{m+n}{2})}{\Gamma(\frac{m}{2})\Gamma(\frac{n}{2})}y^{m/2-1}(my+n)^{-(m+n)/2}\quad (y&gt;0)$</p></li></ul><blockquote><p><strong>三大分布的几个重要性质</strong></p><ol><li><p>设$X_1,…,X_n$独立同分布，有公共的正态分布$N(\mu,\sigma^2)$.记$\bar{X}=(X_1+…+X_n),S^2=\sum_{i=1}^{n}(X_i-\bar(X))^2/(n-1)$.则$(n-1)S^2/\sigma^2=\sum_{i=1}^{n}(X_i-\bar{X})^2/\sigma^2\sim\chi_{n-1}^{2}$.</p></li><li><p>设$X_1,…,X_n$的假定同1，则$\sqrt{n}(\bar{X}-\mu)/S\sim t_{n-1}$</p></li><li><p>设$X_1,…,X_n,Y_1,…,Y_m$独立，$X_i$各有分布$N(\mu1,\sigma_1^2)$，$Y_j$各有分布$N(\mu_2,\sigma_2^2)$，则<br>$$<br>[\sum_{j=1}^m(Y_j-\bar{Y})^2/(\sigma_2^2(m-1))]/[\sum_{i=1}^n(X_i-\bar{X})^2/(\sigma_1^2(n-1))]\sim F_{m-1,n-1}<br>$$<br>若$\sigma_1^2=\sigma_2^2$，则<br>$$<br>\sqrt{\frac{nm(n+m-2)}{n+m}}[(\bar{X}-\bar{Y})-(\mu_1-\mu_2)]/[\sum_{i=1}^{n}(X_i-\bar{X})^2+\sum_{j=1}^m(Y_j-\bar{Y})^2]^{1/2}\sim t_{n+m-2}<br>$$</p></li></ol></blockquote></li></ul><h2 id="Chapter-3-随机变量的数字特征-Numerical-Features-of-Random-Variables"><a href="#Chapter-3-随机变量的数字特征-Numerical-Features-of-Random-Variables" class="headerlink" title="Chapter 3 随机变量的数字特征 Numerical Features of Random Variables"></a>Chapter 3 随机变量的数字特征 Numerical Features of Random Variables</h2><h3 id="3-1-数学期望-Expected-Value"><a href="#3-1-数学期望-Expected-Value" class="headerlink" title="3.1 数学期望 Expected Value"></a>3.1 数学期望 Expected Value</h3><ol><li><p><strong>数学期望 Expected Value</strong></p><ul><li><p><strong>定义：</strong>设随机变量$X$只取有限个可能值$a_1,…,a_m$，其概率分布为$P(X=a_i)=p_i\ (i=1,…,m)$. 则$X$的数学期望记作$E(X)^*$或$E(X)$，定义为$E(X)=a_1p_1+a_2p_2+…+a_mp_m$. 数学期望也常称为”均值“，即指以概率为权的加权平均。</p></li><li><p><strong>离散型变量的数学期望：</strong>$E(X)=\sum^\infty_{i=1}a_ip_i.$（当级数绝对收敛，即$\sum_{i=1}^\infty|a_i|p_i&lt;\infty$）</p></li><li><p><strong>连续型变量的数学期望：</strong>$E(X)=\int_{-\infty}^\infty xf(x)dx$.（当$\int_{-\infty}^\infty |x|f(x)dx&lt;\infty$）</p></li><li><p><strong>常见分布的数学期望：</strong></p><ul><li><p><strong>泊松分布：</strong>$E(X)=\lambda$.</p></li><li><p><strong>二项分布：</strong>$E(X)=np$.</p></li><li><p><strong>均匀分布：</strong>$E(X)=\frac{1}{2}(a+b)$.</p></li><li><p><strong>指数分布：</strong>$E(X)=\lambda^{-1}$.</p></li><li><p><strong>正态分布：</strong>$E(X)=\mu$.</p></li><li><p><strong>卡方分布：</strong>$E(X)=n$.</p></li><li><p><strong>$t$分布：</strong>$E(X)=0 \quad (n&gt;1)$.</p></li><li><p><strong>$F$分布：</strong>$E(X)=n/(n-2)\quad (n&gt;2)$.</p></li></ul></li><li><p><strong>性质：</strong></p><ul><li>若干个随机变量之和的期望等于各变量的期望值和，即<br>$$<br>E(X_1+X_2+…+X_n)=E(X_1)+E(X_2)+…+E(X_n).<br>$$</li><li>若干个<strong>独立</strong>随机变量之积的期望等于各变量的期望之积，即<br>$$<br>E(X_1X_2…X_n)=E(X_1)E(X_2)…E(X_n).<br>$$</li><li>$E(aX+b)=\int_{-\infty}^{\infty}(ax+b)f(x),d(x)=aE(x)+b$.</li><li>设随机变量$X$为离散型，有分布$P(X=a_i)=p_i(i=1,2,…)$；或者为连续型，有概率密度函数$f(x)$. 则</li></ul><p>$$<br>E(g(x))=\sum_ig(a_i)p_i\quad (当\sum_i|g(a_i)|p_i&lt;\infty时) \<br>或\<br>E(g(x))=\int_{-\infty}^\infty g(x)f(x)dx \quad (当\int_{-\infty}^{\infty}|g(x)|f(x)dx&lt;\infty时)<br>$$</p><ul><li>若$c$为常数，则$E(cX)=cE(X)$​.</li><li>若$c$为常数，则$E(c)=c$.</li></ul></li></ul></li><li><p><strong>条件数学期望</strong></p><ul><li><strong>定义：</strong>随机变量Y的条件期望就是它在给定的某种附加条件下的数学期望。$E(Y|x)=\int_{-\infty}^{\infty}yf(y|x)dy$.它反映了随着$X$取值$x$的变化$Y$的平均变化的情况如何。在统计上，常把条件期望$E(Y|x)$作为$x$的函数，称为$Y$对$X$的回归函数。</li><li><strong>性质：</strong><ul><li>$E(Y)=\int_{-\infty}^{\infty}E(Y|x)f_X(x)dx$.</li><li>$E(Y)=E[E(Y|X)]$.</li></ul></li></ul></li><li><p><strong>中位数</strong></p><ul><li><strong>定义：</strong>设连续型随机变量$X$的分布函数为$F(x)$，则满足条件$P(X\leq m)=F(m)=1/2$的数$m$称为$X$或分布$F$的中位数。即$m$这个点把$X$的分布从概率上一切两半。</li><li><strong>性质：</strong><ul><li>与期望值相比，中位数受特大值或特小值影响很小，而期望不然。</li><li>中位数可能不唯一，且在某些离散型情况下，中位数不能达到一分两半的效果。</li></ul></li></ul></li></ol><h3 id="3-2-方差与矩"><a href="#3-2-方差与矩" class="headerlink" title="3.2 方差与矩"></a>3.2 方差与矩</h3><ol><li><p><strong>方差与标准差</strong></p><ul><li><p><strong>定义：</strong>设$X$为随机变量，分布为$F$，则$Var(X)=E(X-E(X))^2$称为$X$（或分布$F$）的方差，其平方根$\sqrt{Var(X)}$（取正值）称为$X$（或分布$F$​）的标准差。</p></li><li><p>$$<br>  E(X-E(X))^2=E(X^2-2XE(X)+(E(X))^2)<br>  \=E(X^2)-2E(X)E(X)+E^2(X)=E(X^2)-(E(X))^2<br>  $$</p></li><li><p><strong>常见分布的方差：</strong></p><ul><li><strong>泊松分布：</strong>$Var(X)=\lambda$.</li><li><strong>二项分布：</strong>$Var(X)=np(1-p)$.</li><li><strong>正态分布：</strong>$Var(X)=\sigma^2$.</li><li><strong>指数分布：</strong>$Var(X)=1/\lambda^2$.</li><li><strong>均匀分布：</strong>$Var(X)=(b-a)^2/12$.</li><li><strong>卡方分布：</strong>$Var(X)=2n$.</li><li><strong>$t$分布：</strong>$Var(X)=n/(n-2)$.</li><li><strong>$F$分布：</strong>$Var(X)=2n^2(m+n-2)/[m(n-2)^2(n-4)]\quad (n&gt;4)$.</li></ul></li><li><p><strong>性质：</strong></p><ul><li>$Var(X)=E(X^2)-(EX)^2$.</li><li>常数的方差为0，即$Var(c)=0$.</li><li>若$c$为常数，则$Var(X+c)=Var(X)$.</li><li>若$c$为常数，则$Var(cX)=c^2Var(X)$.</li><li><strong>独立</strong>随机变量和的方差等于各变量方差和，即$Var(X_1+…+X_n)=Var(X_1)+…+Var(X_n)$​.</li><li>If $X$ is discrete random variable, which has probability distribution $P{X=x_k}=p_k$, $k=1,2,…$, then $E(X^2)=\sum_{i=1}^{\infty}x_k^2p_k$.</li><li>If $X$ is continuous random variable, which has probability density function $f(x)$, then $E(X^2)=\int_{-\infty}^{\infty}x^2f(x),dx$.</li></ul></li></ul></li><li><p><strong>矩</strong></p><ul><li><p><strong>定义：</strong>设$X$为随机变量，$c$为常数，$k$为正整数。则量$E[(X-c)^k]$称为$X$关于$c$点的$k$阶矩。特别地，有两种重要的情况：</p><p>(1) $c=0$ .这时$a_k=E(X^k)$称为$X$的$k$阶原点矩。</p><p>(2)$c=E(X)$.这时$\mu_k=E[(X-EX)^k]$称为$X$的$k$阶中心矩。</p><p>一阶原点矩就是期望，一阶中心距$\mu_1=0$，二阶中心距$\mu_2$就是$X$的方差$Var(X)$.</p></li><li><p><strong>两种重要应用：</strong></p><ul><li><strong>偏度系数：</strong>$\beta_1=\mu_3/\mu_2^{3/2}$.衡量概率分布函数$f(x)$是否关于均值对称。如果$\beta&gt;0$，则称分布为正偏或右偏；如果$\beta&lt;0$，则称分布为负偏或左偏；如果$\beta=0$，则对称。（注：$\mu_2^{3/2}$为标准差的三次方，可将$\mu_3$缩放到一次因次）</li><li><strong>峰度系数：</strong>$\beta_2=\mu_4/\mu_2^2$.衡量概率分布函数$f(x)$在均值附近的陡峭程度。若$X$有正态分布$N(\mu,\sigma^2)$，则$\beta_2=3$.(注：$\mu_2^2$为标准差的四次方，将$\mu_4$缩放到一次因次。为了迁就正态分布，也常定义$\mu_4/\mu_2^2-3$为峰度系数，以使正态分布的峰度系数为0)</li></ul></li></ul></li></ol><h3 id="3-3-协方差与相关系数"><a href="#3-3-协方差与相关系数" class="headerlink" title="3.3 协方差与相关系数"></a>3.3 协方差与相关系数</h3><p>  两者都反映了随机变量之间的关系。</p><ol><li><p><strong>协方差（<em>Covariance</em>）</strong></p><ul><li><strong>定义：</strong>称$E[(X-m_1)(Y-m_2)]$为$X$，$Y$的协方差，并记为$Cov(X,Y)$.</li><li><strong>性质：</strong><ul><li>$Cov(X,Y)$与$X,Y$的次序无关，即$Cov(X,Y)=Cov(Y,X)$.</li><li>$Cov(c_1X+c_2,c_3Y+c_4)=c_1c_3Cov(X,Y)$.</li><li>$Cov(X,Y)=E(XY)-E(X)E(Y)$.</li><li>若$X,Y$独立，则$Cov(X,Y)=0$.</li><li>$[Cov(X,Y)]^2\leq \sigma_1^2\sigma_2^2$.等号当且仅当$X,Y$之间有严格线性关系（$Y=a+bX$）时成立。</li></ul></li></ul><blockquote><p><strong>注：</strong>协方差的结果受随机变量量纲影响。</p></blockquote></li><li><p><strong>相关系数（<em>Correlation coefficient</em>）</strong></p><ul><li><strong>定义：</strong>称$Cov(X,Y)/(\sigma_1\sigma_2)$为$X,Y$的相关系数，并记为$Corr(X,Y)$.</li><li><strong>性质：</strong><ul><li>若$X,Y$独立，则$Corr(X,Y)=0$.</li><li>$-1\leq Corr(X,Y)\leq 1$，或$|Corr(X,Y)\leq 1|$，等号当且仅当$X$和$Y$有严格线性关系时达到。当$Corr(X,Y)=0$时，推出$X,Y$不线性相关。</li></ul></li></ul><blockquote><p><strong>注：</strong>相关系数常称为“<strong>线性相关系数</strong>”，实际上相关系数并不是刻画了$X,Y$之间<strong>消除量纲后</strong>“一般”关系的程度，而只是“线性关系的程度”。即使$X$与$Y$有某种严格的函数关系但非线性关系，$|Corr(X,Y)|$不仅不必为1，还可以为0.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/correlation.png" alt="img"></p></blockquote></li></ol><h3 id="3-4-大数定理和中心极限定理"><a href="#3-4-大数定理和中心极限定理" class="headerlink" title="3.4 大数定理和中心极限定理"></a>3.4 大数定理和中心极限定理</h3><ol><li><p><strong>大数定理</strong></p><p>“大数”的意思，就是指涉及大量数目的观察值$X_i$，它表明这种定理中指出的现象只有在大量次数的试验和观察之下才能成立。</p><ul><li><strong>定义：</strong>设$X_1,X_2,…,X_n,…$是独立同分布的随机变量，记它们的公共均值为$a$.又设它们的方差存在并记为$\sigma^2$.则对任意给定的$\varepsilon &gt;0$，有$lim_{n\rightarrow\infty}P(|\bar{X}_n-a|\geq \varepsilon )=0$.（该式表明，当$n$很大时，$\bar{X}_n$接近$a$）</li></ul></li><li><p><strong>中心极限定理</strong></p><p>即和的分布收敛于正态分布。</p><ul><li><p><strong>定义：</strong>设$X_1,X_2,…,X_n$为独立同分布的随机变量，$E(X_i)=a,Var(X_i)=\sigma^2(0&lt;\sigma^2&lt;\infty)$.则对任何实数$x$，有$lim_{n\rightarrow\infty}P(\frac{1}{\sqrt{n}\sigma}(X_1+…+X_n-na)\leq x)=\Phi(x)$.（$\Phi(x)$为标准正态分布$N(0,1)$的分布函数）</p></li><li><p><strong>特例：</strong>设$X_1,X_2,…,X_n$独立同分布，$X_i$分布是$P(X_i=1)=p$，$P(X_i=0)=1-p\ (0&lt;p&lt;1)$.则对任何实数$x$，有$lim_{n\rightarrow \infty}P(\frac{1}{\sqrt{np(1-p)}}(X_1+…+X_n-np)\leq x)=\Phi(x)$.</p><blockquote><p><strong>注：</strong>如果$t_1,t_2$是两个正整数，$t_1&lt;t_2$.则当$n$相当大时，近似地有</p></blockquote></li></ul></li></ol><blockquote><p>$$<br>P(t_1\leq X_1+…+X_n\leq t_2)\approx \Phi(y_2)-\Phi(y_1),<br>$$<br>其中<br>$$<br>y_i=(t_i-np)/sqrt{np(1-p)}\quad (i=1,2).<br>$$<br>若把$y_1,y_2$修正为<br>$$<br>y_1=(t_1-\frac{1}{2}-np)/\sqrt{np(1-p)},\<br>y_2=(t_2-\frac{1}{2}-np)/\sqrt{np(1-p)}<br>$$<br>在应用上式，则一般可提高精度。</p></blockquote><h2 id="四-统计量及其分布"><a href="#四-统计量及其分布" class="headerlink" title="四 统计量及其分布"></a>四 统计量及其分布</h2><p><mark>该部分后续需拓展</mark></p><h3 id="4-1-总体与样本"><a href="#4-1-总体与样本" class="headerlink" title="4.1 总体与样本"></a>4.1 <strong>总体与样本</strong></h3><ol><li><p><strong>总体</strong></p><p>  在一个统计问题里，研究对象的全体叫做总体，构成总体的每个成员称为个体。根据个体的数量指标数量，定义总体的维度，如每个个体只有一个数量指标，总体就是一维的，同理，个体有两个数量指标，总体就是二维的。<strong>总体就是一个分布，数量指标就是服从这个分布的随机变量。</strong><br>  总体根据个体数分为<strong>有限总体</strong>和<strong>无限总体</strong>，当有限总体的个体数充分大时，其可以看为无限总体。</p></li><li><p><strong>样本</strong></p><ul><li><strong>定义：</strong></li></ul><p>  从总体中随机抽取的部分个体组成的集合称为样本，<strong>样本个数称为样本容量</strong>。</p><ul><li><p><strong>性质：</strong></p><ul><li><p><strong>二重性：</strong>抽取前随机，是随机变量；抽取后确定，是一组数值。</p></li><li><p><strong>随机性：</strong>每个个体都有同等的机会被选入样本。</p></li></ul></li><li><p><strong>独立性：</strong>每个样本的取值不影响其他样本取值，即分部独立。</p><p>满足后面两个性质称为<strong>简单随机样本</strong>，则<br>$$<br>F(x_1,x_2,…,x_n)=\prod^n_{i=1}F(x_i),\<br>f(x_1,x_2,…,x_n)=\prod^n_{i=1}f(x_i),\<br>p(x_1,x_2,…,x_n)=\prod^n_{i=1}p(x_i)<br>$$</p></li></ul></li><li><p><strong>分组样本</strong></p><p>  只知样本观测值所在区间，而不知具体值的样本称为分组样本。<strong>缺点：</strong>与完全样本相比损失部分信息。<strong>优点：</strong>在样本量较大时，用分组样本既简明扼要，又能帮助人们更好地认识总体。</p></li></ol><h3 id="4-2-样本数据的整理与显示"><a href="#4-2-样本数据的整理与显示" class="headerlink" title="4.2 样本数据的整理与显示"></a>4.2 样本数据的整理与显示</h3><ol><li><p><strong>经验分布函数</strong></p><p>  若将样本观测值$x_1,x_2,…,x_n$由小到大进行排列，得到有序样本$x_{(1)}\leq x_{(2)}\leq…\leq x_{(n)}$，用有序样本定义如下函数<br>$$<br>F_n(x)=\left{\begin{matrix}<br>0 &amp; 当x&lt;x_{(1)}\<br>k/n &amp; 当x_{(k)}\leq x&lt;x_{(k+1)},k=1,2,…,n-1\<br>1 &amp; 当x\geq x_{(n)}<br>\end{matrix}\right.<br>$$<br>则称为$F_n(x)$为该样本的经验分布函数。</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/ex_distribution.png" alt="img"></p></li><li><p><strong>格里纹科定理</strong></p><p>  设$x_1,x_2,…,x_n$是取自总体分布函数为$F(x)$的样本，$F_n(x)$是该样本的经验分布函数，则当$n\rightarrow+\infty$时，有<br>$$<br>P(sup_{-\infty&lt;x&lt;+\infty}|F_n(x)-F(x)|\rightarrow0)=1<br>$$<br>表明当n相当大时，经验分布函数$F_n(x)$是总体分布函数$F(x)$的一个良好的近似。它是经典统计学的一块基石。</p></li><li><p><strong>频数频率分布表</strong></p><p>  有样本$x_1,x_2,…,x_n$制作频数频率分布表的操作步骤如下：</p><ul><li>确定组数k；</li><li>确定每组组距，通常取每组组距相等为d（方便起见，可选为整数）；</li><li>确定组限（下限$a_0$略小于最小观测值，上限$a_k$略大于最大观测值）；</li><li>统计样本数据落入每个区间的频数，并计算频率。</li></ul><p>该表能够简明扼要地把样本特点表示出来。不足之处是该表依赖于分组，不同的分组方式有不同的频数频率分布表。</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/frequency.png" alt="img"></p></li><li><p><strong>直方图</strong></p><ul><li>利用频数频率分布表上的区间（横坐标）和频数（纵坐标）可作为频数直方图；</li><li>若把纵坐标改为频率就得频率直方图；</li><li>若把纵坐标改为频率/组距，就得到单位频率直方图。这时长条矩形的面积之和为1.</li></ul><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/hist.png" alt="img"></p></li><li><p><strong>茎叶图</strong></p><p>  把样本中的每个数据分为茎与叶，把茎放于一侧，叶放于另一侧，就得到一张该样本的茎叶图。比较两个样本时，可画出背靠背的茎叶图。茎叶图保留数据中全部信息，当样本量较大，数据很分散，<strong>横跨二、三个数量级时，茎叶图并不适用</strong>。</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/leave.jpg" alt="img"></p></li></ol><h3 id="4-3-统计量及其分布"><a href="#4-3-统计量及其分布" class="headerlink" title="4.3 统计量及其分布"></a>4.3 统计量及其分布</h3><ol><li><p><strong>统计量</strong></p><p>  不含未知参数的样本函数称为统计量。统计量的分布称为抽样分布。</p></li><li><p><strong>样本均值</strong></p><ul><li><p><strong>定义：</strong></p><p>  样本$x_1,x_2,…,x_n$的算数平均值称为样本均值，记为$\bar{x}$.分组样本均值$\bar{x}=\frac{1}{n}\sum_{i=1}^{k}x_if_i$，其中n为样本量，k为组数，**$x_i$与$f_i$为第i组的组中值和频率<strong>，</strong>分组样本均值是完全样本均值的一种较好的近似**。</p><p>  样本均值是样本的位置特征，样本中大多数值位于$\bar{x}$左右。平均可消除一些随机干扰，等价交换也是在平均数中实现的。</p></li><li><p><strong>性质：</strong></p><ul><li>$\sum_{i=1}^n (x_i-\bar{x})=0$，<strong>样本数据$x_i$对样本均值$\bar{x}$的偏差之和为零</strong>；</li><li><strong>样本数据$x_i$与样本均值$\bar{x}$的偏差平方和最小</strong>，即对任意的实数c有$\sum_{i=1}^n(x_i-\bar{x})^2\leq \sum_{i=1}^n(x_i-c)^2$;</li><li>若总体分布为$N(\mu,\sigma^2)$，则$\bar{x}$的精确分布为$N(\mu,\sigma^2/n)$；</li><li>若总体分布未知，但其期望$\mu$与方差$\sigma^2$存在，则当n较大时，$\bar{x}$的渐进分布为$N(\mu,\sigma^2/n)$，这里渐进分布是指n较大时的近似分布。</li></ul></li></ul></li><li><p><strong>样本方差与样本标准差</strong></p><p>  样本方差有两种，$s_*^2=\frac{1}{n}\sum_{i=1}^n(x_i-\bar{x})^2$与$s^2=\frac{1}{n-1}\sum_{i=1}^n(x_i-\bar{x})^2$，后者为无偏方差，也是最常用的。（这是因为当$\sigma^2$为总体方差时，总有$E(s_*^2)=\frac{n-1}{n}\sigma^2$,$E(s^2)=\sigma^2$，表明$s_*^2$有系统偏小的误差，$s^2$无此系统偏差。）称$\sqrt{s^2}$为样本标准差。</p><p>  样本方差是样本的散布特征，$s^2$<strong>越大样本越分散，$s^2$越小分布越集中</strong>，样本标准差比样本方差使用更频繁，因为前者和样本均值有着相同的单位。</p><p>  $s^2$的计算有如下<strong>三个公式</strong>可供选用：<br>$$<br>s^2=\frac{1}{n-1}\sum(x_i-\bar{x})^2=\frac{1}{n-1}[\sum x_i^2-\frac{(\sum x_i)^2}{n}]=\frac{1}{n-1}(\sum x_i^2-n\bar{x}^2)<br>$$<br>在分组样本场合，样本方差的近似计算公式为<br>$$<br>s^2=\frac{1}{n-1}\sum_{i=1}^kf_i(x_i-\bar{x})^2=\frac{1}{n-1}(\sum_{i=1}^k f_ix_i^2-n\bar{x}^2)<br>$$<br>其中k为组数，$x_i,f_i$分别为第i个区间的组中值与频数，$\bar{x}$为分组样本的均值。</p></li><li><p><strong>样本矩及其函数</strong></p><ul><li>样本的k阶原点矩$a_k=\frac{1}{n}\sum_{i=1}^{n}x_i^k$，样本均值$\bar{x}$为样本的一阶原点矩；</li><li>样本的k阶中心距$b_k=\frac{1}{n}\sum_{i=1}^n(x_i-\bar{x})^k$，样本方差$s^2$和$s_*^2$都为样本的二阶中心矩；</li><li>样本变异系数$C_r=s/\bar{x}$；</li><li>样本的偏度$\hat{\beta_s}=b_3/b_2^{3/2}$，反映样本数据与对称性偏离程度和偏离方向；</li><li>样本的峰度$\hat{\beta_k}=\frac{b_4}{b_2^2}-3$，反映总体分布密度曲线在其峰值附近的陡峭程度和尾部粗细.</li></ul></li></ol><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/skewness.png" alt="img"></p><ol start="5"><li><p><strong>次序统计量及其分布</strong></p><p>  设$x_1,…,x_n$是取自某总体的一个样本，$x_{(i)}$称为该样本的第i个次序统计量（升序排序后，第i个样本）。</p><ul><li>$x_{(1)}=min{x_1,…,x_n}$称为该样本的<strong>最小次序统计量</strong>；</li><li>$x_{(n)}=max{x_1,…,x_n}$称为该样本的<strong>最大次序统计量</strong>；</li><li>$(x_{(1)},x_{(2)},…,x_{(n)}}$称为该样本的次序统计量，即<strong>不独立也不同分布</strong>；</li><li>$R=x_{(n)}-x_{(1)}$称为样本极差。<br>设总体$X$的密度函数为$f(x)$，分布函数为$F(x)$，$x_1,…,x_n$为样本，则有</li><li>样本第k个次序统计量$x_{(k)}$的密度函数为<br>$$<br>f_k(x)=\frac{n!}{(k-1)!(n-k)!}(F(x))^{k-1}(1-F(x))^{n-k}f(x);<br>$$</li><li>样本第i个与第j个次序统计量的联合密度函数为<br>$$<br>f_{ij}(y,z)=\frac{n!}{(i-1)!(j-i-1)!(n-j)!}(F(y))^{i-1}(F(z)-F(y))^{j-i-1}(1-F(z))^{n-j}f(xy)f(z),\quad y\leq z, 1\leq i&lt;j\leq n<br>$$</li></ul></li><li><p><strong>样本中位数与样本分位数</strong></p><p>设$x_1,…,x_n$是取自某总体的样本，$x_{(1)}\leq x_{(2)}\leq …\leq x_{(n)}$为该样本的次序统计量，则样本中位数$m_{0.5}$定义为<br>$$<br>m_{0.5}=\left{\begin{matrix}<br>x_{(\frac{n+1}{2})} &amp; n为奇数\<br>\frac{1}{2}(x_{(\frac{n}{2})} + x_{(\frac{n}{2}+1)}) &amp; n为偶数<br>\end{matrix}\right.<br>$$<br>样本的p分位数$m_p$定义为<br>$$<br>m_{p}=\left{\begin{matrix}<br>x_{[np+1]} &amp; np不是整数\<br>\frac{1}{2}(x_{(np)} + x_{(np+1)}) &amp; np是整数<br>\end{matrix}\right.<br>$$<br>其中[x]表示向下取整。<strong>中位数对样本的极端值有抗干扰性，或称有稳健性</strong>。<br><strong>样本分位数的渐近分布：</strong>设总体的密度函数为$f(x)$，$x_p$为总体的p分位数。若$p(x)$在$x_p$处连续且$p(x_p)&gt;0$，则当n充分大时，有<br>$$<br>m_p\sim N(x_p,\frac{p(1-p)}{n\cdot p^2(x_p)}),\<br>m_{0.5}\sim N(x_{0.5},\frac{1}{4n\cdot p^2(x_{0.5})})<br>$$</p></li><li><p><strong>五数概括与箱线图</strong></p><p>  五数指用样本的五个次序统计量，即最小观测值，最大观测值，中位数，第一4分位数和第三4分位数。其图形为箱线图，可描述样本分布形状。</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/box.png" alt="img"></p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/box_normal.png" alt="img"></p></li></ol><h2 id="五-参数估计"><a href="#五-参数估计" class="headerlink" title="五 参数估计"></a>五 参数估计</h2><p>  统计学与概率论的区别就是归纳和演绎，前者通过样本推测总体的分布，而后者已知总体分布去研究样本。因此参数估计则是归纳的过程，参数估计有两种形式：<strong>点估计</strong>和<strong>区间估计</strong><u>（点估计和区间估计都是对于未知参数的估计，而<strong>点估计给出的是一个参数可能的值</strong>，<strong>区间估计给出的是参数可能在的范围</strong>）</u>。</p><h3 id="5-1-点估计"><a href="#5-1-点估计" class="headerlink" title="5.1 点估计"></a>5.1 点估计</h3><h4 id="5-1-1-点估计的概念"><a href="#5-1-1-点估计的概念" class="headerlink" title="5.1.1 点估计的概念"></a>5.1.1 点估计的概念</h4><p><strong>点估计（<em>Point estimation</em>）：</strong>设$x_1, …, x_n$是来自总体的一个样本，用于估计未知参数$\theta$的统计量$\hat{\theta}=\hat{\theta}(x_1,…,x_n)$成为$\theta$的估计量，或称为$\theta$的点估计。</p><h4 id="5-1-2-点估计的方法"><a href="#5-1-2-点估计的方法" class="headerlink" title="5.1.2 点估计的方法"></a>5.1.2 点估计的方法</h4><ol><li><p><strong>矩估计</strong></p><p><strong>定义：</strong>设总体概率函数已知，为$p(x;\theta_1,…,\theta_k)$，$(\theta_1,…,\theta_k)\in\Theta$是未知参数或参数向量，$x_1,…,x_n$是样本，假定总体的$k$阶原点矩$\mu_k$存在，则对所有的$j$，$o&lt;j&lt;k$，$\mu_j$都存在，若假设$\theta_1,…,\theta_k$能够表示成$\mu_1,…,\mu_k$的函数$\theta_j=\theta_j(\mu_1,…,\mu_k)$，则可给出诸$\theta_j$的矩估计：</p></li></ol><p>$$<br>   \hat{\theta_j}=\theta_j(a_1,…,a_k),\quad j=1,…,k<br>$$<br>   其中$a_1,…,a_k$是前$k$阶样本原点矩$a_j=\frac{1}{n}\sum_{i=1}^{n}x_i^j$.</p><p>   矩估计基于大数定律（格里纹科定理），实质是用经验分布函数去替换总体分布，矩估计可以概括为：</p><ul><li><p>用样本矩代替总体矩（可以是原点矩也可以是中心矩）；</p><ul><li>用样本矩的函数去替换相应的总体矩的函数。</li></ul><blockquote><p><strong>注：</strong>矩估计可能是不唯一的，尽量使用低阶矩给出未知参数的估计 。</p></blockquote></li></ul><ol start="2"><li><p><strong>最大似然估计</strong></p><p><strong>定义：</strong>设总体的概率函数为$p(x;\theta),\ \theta\in\Theta$，其中$\theta$是一个未知参数或几个未知参数组成的参数向量，$\Theta$是参数空间，$x_1,…,x_n$是来自该总体的样本，将样本的联合概率函数看成$\theta$的函数，用$L(\theta;x_1,…,x_n)$表示，简记为$L(\theta)$，<br>$$<br>L(\theta)=L(\theta;x_1,…,x_n)=p(x_1;\theta)p(x_2;\theta)…p(x_n;\theta)<br>$$<br>$L(\theta)$称为样本的<strong>似然函数</strong>。若统计量$\hat{\theta}=\hat{\theta}(x_1,…,x_n)$满足<br>$$<br>L(\hat{\theta})=\max_{\theta\in\Theta}L(\theta)<br>$$<br>则称$\hat{\theta}$是$\theta$的<strong>最大似然估计</strong>，简称<strong>MLE（maximum likelihood estimate）.</strong></p><p><strong>注：</strong>最大似然估计基于样本观测数据，根据概率论思想进行参数估计，首先抽取一定样本，默认这些样本的出现概率是符合原始分布的，即恰好抽到这些样本是因为这些样本出现的概率极大，然后根据概率密度计算联合概率，形成似然函数，似然函数极值位置即为参数的估计值。**<u>最大似然估计的前提是已知数据的分布。</u>**</p><p><strong>最大似然估计步骤：</strong></p><ul><li>写出似然函数；</li><li>对似然函数取对数，并整理；</li><li>求参数向量的偏导，令其为0，得到似然方程；</li><li>求解似然方程，其解为参数值。</li></ul></li><li><p><strong>最小均方误差估计</strong></p><p>在样本量一定时，评价一个点估计好坏的度量指标可使用估计值$\hat{\theta}$与参数真值$\theta$的距离函数，最常用的是距离平方，由于$\hat{\theta}$具有随机性，对该函数求期望即得<strong>均方误差</strong>：<br>$$<br>\begin{align}<br>MSE(\hat{\theta})&amp;=E(\hat{\theta}-\theta)^2\<br>&amp;=E[(\hat{\theta}-E\hat{\theta})+(E\hat{\theta}-\theta)]^2\<br>&amp;=E(\hat{\theta}-E\hat{\theta})^2+(E\hat{\theta}-\theta)^2+\underbrace{2E[(\hat{\theta}-E\hat{\theta})(E\hat{\theta}-\theta)]}<em>{E(\hat{\theta}-E\hat{\theta})=0}\<br>&amp;=\underbrace{Var(\hat{\theta})}</em>{点估计的方差}+\underbrace{(E\hat{\theta}-\theta)^2}_{偏差的平方}<br>\end{align}<br>$$<br>其中，<strong>如果$\hat{\theta}$是$\theta$的无偏估计，则$MSE(\hat{\theta})=Var(\hat{\theta})$，此时用均方误差评价点估计与用方差是完全一样的</strong>。如果如果$\hat{\theta}$不是$\theta$的无偏估计，就要看其均方误差$MSE(\hat{\theta})$，即不仅要看其方差大小，还要看其偏差大小。</p><p><strong>定义：</strong>设有样本$x_1,…,x_n$，对待估参数$\theta$，设有一个估计类，如果对该估计类中另外任意一个$\theta$的估计$\widetilde{\theta}$，在参数空间$\Theta$上都有$MSE_\theta(\hat{\theta})\leq MSE_\theta(\widetilde{\theta})$，称$\hat{\theta}(x_1,…,x_n)$是该估计类中$\theta$的一致最小均方误差估计。</p></li><li><p><strong>最小方差无偏估计</strong></p><p><strong>定义：</strong>设$\hat{\theta}$是$\theta$的一个无偏估计，如果对另外任意一个$\theta$的无偏估计$\widetilde{\theta}$，在参数空间$\Theta={\theta}$上都有$Var_{\theta}(\hat{\theta})\leq Var_{\theta}(\widetilde{\theta})$，则称$\hat{\theta}$是$\theta$的一致最小方差无偏估计，简记为<strong>UMVUE</strong>。</p><p><strong>判断准则：</strong>设$\hat{\theta}=\hat{\theta}(x_1,…,x_n)$是$\theta$的一个无偏估计，$Var(\hat{\theta})&lt;+\infty$.如果对任意一个满足$E(\varphi(x_1,…,x_n))=0$的$\varphi$，都有<br>$$<br>Cov_\theta(\hat{\theta},\varphi)=0,\quad\forall\theta\in\Theta,<br>$$<br>则$\hat{\theta}$是$\theta$的UMVUE.</p></li><li><p><strong>贝叶斯估计</strong></p><p>区别于频率学派，在统计推断中贝叶斯用到了三种信息：<strong>总体信息、样本信息和先验信息</strong>（频率学派只用了前两种），其中：</p><ul><li>总体信息：总体信息即总体分布或总体所属分布族提供的信息，如，若已知总体是正态分布，则可以知道很多信息；</li><li>样本信息：样本信息即抽取样本所得观测值提供的信息，如，在有了样本观测值后，可以根据它知道总体的一些特征数；</li><li>先验信息：若把抽取样本看作做一次试验，则样本信息就是试验中得到的信息，如，在一次抽样后，这第一次的抽样就是先验信息。先验信息来源于经验和历史资料。</li></ul><p><strong>回顾贝叶斯公式</strong>：设${B_1, B_2, …B_n}$是样本空间的一个分割，$A$为$\Omega$中的一个事件，$P(B_i)&gt;0$，$i=1,2,…,n$，$P(A)&gt;0$，则<br>$$<br>P(B_i|A)=\frac{P(A|B_i)P(B_i)}{\sum_{j=1}^{n}P(A|B_j)P(B_j)}<br>$$<br><strong>贝叶斯密度函数形式：</strong></p><ul><li><p>在参数$\theta$分布已知（已假设）的情况下，$p(x|\theta)$表示随机变量$\theta$取某个给定值时总体的<strong>条件概率函数</strong>，（参考$P(A|B)$）；</p></li><li><p>任一未知量$\theta$都可以看作随机变量，可用一个概率分布去描述，这个分布成为<strong>先验分布</strong>，该先验分布$\pi(\theta)$，（参考$P(B)$）；</p></li><li><p>贝叶斯的观点，样本$X=(x_1,…,x_n)$的产生需分两步：</p></li><li><p>从先验分布$\pi(\theta)$产生一个样本$\theta_0$；</p></li><li><p>从$p(X|\theta_0)$中产生一组样本。</p></li></ul><p>  此时，样本$X=(x_1,…,x_n)$的<strong>联合条件概率函数</strong>（参考$\sum_{j=1}^{n}P(A|B_j)$）为<br>  $$<br>  p(X|\theta_0)=p(x_1,…,x_n|\theta_0)=\prod^{n}_{i=1}p(x_i|\theta_0)<br>  $$</p><ul><li><p>因为$\theta_0$未知，是从先验分布$\pi(\theta)$中产生的，所以需要考虑它的发生概率，样本$X$和参数$\theta$的<strong>联合分布</strong>（参考$\sum_{j=1}^{n}P(A|B_j)P(B_j)$）为<br>$$<br>h(X,\theta)=p(X|\theta)\pi(\theta)<br>$$</p></li><li><p>因为目的是对$\theta$进行推断，所以在有样本观测值$X=(x_1,…,x_n)$之后，可依据$h(X,\theta)$对$\theta$作出推断，按照乘法公式（参考1.5.2节），$h(X,\theta)$可分解为<br>$$<br>h(X,\theta)=\pi(\theta|X)m(X)<br>$$<br>其中，$m(X)$是$X$的边际概率函数，类比$\pi(\theta)$，<br>$$<br>m(X)=\int_\Theta h(X,\theta)d\theta=\int_\Theta p(X|\theta)\pi(\theta)d\theta<br>$$<br>所以可通过条件概率$\pi(\theta|X)$推断$\theta$的分布<br>$$<br>\pi(\theta|X)=\frac{h(X,\theta)}{m(X)}=\frac{p(X|\theta)\pi(\theta)}{\int_{\Theta}p(X|\theta)\pi(\theta)d\theta}<br>$$<br>该分布成为$\theta$的<strong>后验分布</strong>。<strong>它其实是利用总体和样本对先验分布$\pi(\theta)$调整的结果，比$\pi(\theta)$更接近$\theta$的实际情况（机器学习里的贝叶斯模型就是基于这样的原理）</strong>。</p><blockquote><p><strong>Flag：</strong>感觉贝叶斯定理很有意思，今后也会学习相关的贝叶斯分析数据，敬请期待～</p></blockquote></li></ul></li></ol><h4 id="5-1-3-点估计的优良性准则"><a href="#5-1-3-点估计的优良性准则" class="headerlink" title="5.1.3 点估计的优良性准则"></a>5.1.3 点估计的优良性准则</h4><ol><li><p><strong>无偏性：</strong>设$\hat{\theta}=\hat{\theta}(x_1,…,x_n)$是$\theta$的一个估计，$\theta$的参数空间为$\Theta$，若对任意的$\theta \in \Theta$，有<br>$$<br>E_{\theta}(\hat{\theta})=\theta<br>$$<br>则称$\hat{\theta}$是$\theta$的<strong>无偏估计</strong>，否则称为<strong>有偏估计</strong>。无偏性的要求也可以改写为$E_{\theta}(\hat{\theta-\theta})=0$，无偏性表示表示估计参数与真实参数没有系统偏差。</p><blockquote><p><strong>一个重要的结论：</strong>样本均值$\bar{x}=\frac{1}{n}\sum_{i=1}^nx_i$是总体均值$\mu$的无偏估计。样本方差$s_n^2=\frac{1}{n}\sum_{i=1}^n(x_i-\bar{x})^2$不是总体方差$\sigma^2$的无偏估计（而是渐进无偏估计），因此需要对样本方差进行修正，$s^2=\frac{1}{n-1}\sum_{i=1}^n(x_i-\bar{x})^2$.</p><ul><li>样本均值的无偏性推导</li></ul><p>$$<br>\begin{align}<br>E(\bar{x})=&amp;E(\frac{1}{n}\sum_{i=1}^nx_i)\<br>=&amp;\frac{1}{n}\sum_{i=1}^nE(x_i),\ x_i为iid\<br>=&amp;\frac{1}{n}\sum_{i=1}^n\mu\<br>=&amp;\mu<br>\end{align}<br>$$</p><ul><li>样本方差的有偏性推导<br>$$<br>\begin{align}<br>E(s_n^2)=&amp;E[\frac{1}{n}\sum_{i=1}^n(x_i-\bar{x})^2]\<br>=&amp;E[\frac{1}{n}\sum_{i=1}^n((x_i-\mu)-\frac{1}{n}(\bar{x}-\mu))^2]\<br>=&amp;E[\frac{1}{n}\sum_{i=1}^n((x_i-\mu)^2-\frac{2}{n}(x_i-\mu)(\bar{x}-\mu)+\frac{1}{n}(\bar{x}-\mu)^2)]\<br>=&amp;E[\frac{1}{n}\sum_{i=1}^n(x_i-\mu)^2-\frac{2}{n}\sum_{i=1}^n(x_i-\mu)(\bar{x}-\mu)+(\bar{x}-\mu)^2],\ 其中,\bar{X}-\mu=\frac{1}{n}\sum_{i=1}^n(x_i-\mu)\<br>=&amp;E[\frac{1}{n}\sum_{i=1}^n(x_i-\mu)^2-2(\bar{x}-\mu)^2+(\bar{x}-\mu)^2]\<br>=&amp;E[\frac{1}{n}\sum_{i=1}^n(x_i-\mu)^2-(\bar{x}-\mu)^2]\<br>=&amp;E[\frac{1}{n}\sum_{i=1}^n(x_i-\mu)^2]-E[(\bar{x}-\mu)^2]\<br>=&amp;\sigma^2-E[(\bar{x}-\mu)^2]\ …(1)\<br>=&amp;\sigma^2-\frac{\sigma^2}{n}\<br>=&amp;\frac{n-1}{n}\sigma^2,\quad 当n\rightarrow \infty时, E(s_n^2)\rightarrow \sigma^2\<br>\<br>E[(\bar{x}-\mu)^2]=&amp;E(\bar{x}^2)-2\mu E(\bar{x})+\mu^2\<br>=&amp;E(\bar{x}^2)-\mu^2\<br>=&amp;Var(\bar{x})+E^2(\bar{x})-\mu^2\<br>=&amp;Var(x)\<br>=&amp;\frac{\sigma^2}{n}\ …代入(1)式<br>\end{align}<br>$$</li></ul></blockquote></li><li><p><strong>有效性</strong></p><p>无偏估计往往有很多种，以总体均值为例，$x_1,…,x_n$是取自某总体的样本，样本均值$\mu$和样本$x_i$都是总体均值的无偏估计，对于两个估计参数的选取需要基于一个度量无偏估计优劣的准则。有效性作为这样的准则，反映了<strong>参数估计值和参数真值的波动</strong>，波动大小可用方差来衡量，波动越小表示参数的估计越有效。</p><p>设$\hat{\theta_1}$，$\hat{\theta_2}$是$\theta$的两个无偏估计，如果对任意的$\theta\in\Theta$有<br>$$<br>Var(\hat{\theta}_1)\leq Var(\hat{\theta}_2)<br>$$<br>且至少有一个$\theta\in\Theta$使得上述不等号严格成立，则称$\hat{\theta}_1$比$\hat{\theta}_2$有效。</p></li><li><p><strong>相合性</strong></p><p>根据格里纹科定理，随着样本量不断增大，经验分布函数逼近真实分布函数，即设$\theta\in\Theta$为未知参数，$\hat{\theta}_n=\hat{\theta}<em>n(x_1,…,x_n)$是$\theta$的一个估计量，$n$是样本容量，若对任何一个$\epsilon&gt;0$，有<br>$$<br>\lim</em>{n\rightarrow\infty}P(|\hat{\theta}_n-\theta|\geq\epsilon)=0<br>$$<br>则称$\hat{\theta}_n$为参数$\theta$的相合估计。</p><p><strong>定理1：</strong>设$\hat{\theta}_n=\hat{\theta}<em>n(x_1,…,x_n)$是$\theta$的一个估计量，若<br>$$<br>\lim</em>{n\rightarrow\infty}E(\hat{\theta}<em>n)=\theta,\quad\lim</em>{n\rightarrow\infty}Var(\hat{\theta}_n)=0<br>$$<br>则$\hat{\theta}_n$是$\theta$的相合估计。</p><p><strong>定理2：</strong>若$\hat{\theta}<em>{n1},…,\hat{\theta}</em>{nk}$分别是$\theta_1,…,\theta_k$的相合估计，$\eta=g(\theta_1,…,\theta_k)$是$\theta_1,…,\theta_k$的连续函数，则$\hat{\eta}<em>n=g(\hat{\theta}</em>{n1},…,\hat{\theta}_{nk})$是$\eta$的相合估计。</p><blockquote><p>矩估计一般都具有相合性：</p><ul><li>样本均值是总体均值的相合估计；</li><li>样本标准差是总体标准差的相合估计；</li><li>样本变异系数$s/\bar{x}$是总体变异系数的相合估计。</li></ul></blockquote></li><li><p><strong>渐进正态性</strong>（MLE）</p><p>在很一般条件下，总体分布$p(x;\theta)$中的$\theta$的MLE$\hat{\theta}_n$具有相合性和渐进正态性，即$\hat{\theta}<em>n\sim AN(\theta,\frac{1}{nI(\theta)})$，其中$n$为样本容量，$I(\theta)=\int</em>{-\infty}^{\infty}(\frac{\part{lnp}}{\part\theta})^2p(x;\theta)dx$为费希尔信息量。</p></li><li><p><strong>充分性</strong>（UMVUE）</p><ul><li>任一参数$\theta$的UMVUE不一定存在，若存在，则它一定是充分统计量的函数；</li><li>若$\theta$的某个无偏估计$\hat{\theta}$不是充分统计量$T=T(x_1,…,x_n)$的函数，则通过条件期望可以获得一个新的无偏估计$\widetilde{\theta}=E(\hat{\theta|T})$，且方差比原估计的方差要小；</li><li>考虑$\theta$的估计时，只需要在其充分统计量的函数中寻找即可，该说法对所有统计推断都是正确的，这便是充分性原则。</li></ul></li></ol><h3 id="5-2-区间估计"><a href="#5-2-区间估计" class="headerlink" title="5.2 区间估计"></a>5.2 区间估计</h3><h4 id="5-2-1-区间估计的概念"><a href="#5-2-1-区间估计的概念" class="headerlink" title="5.2.1 区间估计的概念"></a>5.2.1 区间估计的概念</h4><ol><li><p><strong>双侧区间</strong></p><p>设$\theta$是总体的一个参数，其参数空间为$\Theta$，$x_1,…,x_n$是来自该总体的样本，对给定的一个$\alpha\quad(0&lt;\alpha&lt;1)$，假设有两个统计量$\hat{\theta}_L=\hat{\theta}_L(x_1,…,x_n)$和$\hat{\theta}_U=\hat{\theta}_U(x_1,…,x_n)$，若对任意的$\theta\in\Theta$，有<br>$$<br>P_\theta(\hat{\theta}_L\leq\theta\leq\hat{\theta}_U)\geq(=)1-\alpha<br>$$<br>其中，总体为连续分布时取等号，表示用足了置信水平。称随机区间$[\hat{\theta}_L,\hat{\theta}_U]$为$\theta$的<strong>置信水平为$1-\alpha$的置信区间</strong>，或简称$[\hat{\theta}_L,\hat{\theta}_U]$是$\theta$的**$1-\alpha$置信区间<strong>，$\hat{\theta}_L$和$\hat{\theta}_U$分别称为$\theta$的</strong>置信下限<strong>和</strong>置信上限**。</p><blockquote><p>置信水平$1-\alpha$的频率解释：在大量的区间估计观测值中，至少有$100(1-\alpha)%$包含$\theta$，如下图所示，其置信度为0.95.</p><p><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/confidence_interval.gif" alt="confidence_interval.gif"></p></blockquote></li><li><p><strong>单侧区间</strong></p><p>设$\hat{\theta}_L=\hat{\theta}_L(x_1,…,x_n)$是统计量，对给定的$\alpha\in(0,1)$和任意的$\theta\in\Theta$，有<br>$$<br>P_\theta(\hat{\theta}_L\leq\theta)\geq1-\alpha,\quad\forall\theta\in\Theta<br>$$<br>则称$\hat{\theta}_L$为$\theta$的置信水平为$1-\alpha$的<strong>置信下限</strong>。同理，设$\hat{\theta}_U=\hat{\theta}_U(x_1,…,x_n)$是统计量，对给定的$\alpha\in(0,1)$和任意的$\theta\in\Theta$，有<br>$$<br>P_\theta(\hat{\theta}_L\geq\theta)\geq1-\alpha,\quad\forall\theta\in\Theta<br>$$<br>则称$\hat{\theta}_L$为$\theta$的置信水平为$1-\alpha$的<strong>置信上限</strong>。</p></li></ol><h4 id="5-2-2-区间估计的方法"><a href="#5-2-2-区间估计的方法" class="headerlink" title="5.2.2 区间估计的方法"></a>5.2.2 区间估计的方法</h4><ol><li><p><strong>枢轴量法</strong></p><p><em><strong>Step 1</strong></em>：设法构造一个样本和$\theta$的函数$G=G(x_1,…,x_n,\theta)$使得**$G$的分布不依赖于未知参数**，称具有这种性质的$G$为枢轴量。</p><p><em><strong>Step 2</strong></em>：适当地选择两个常数c，d，使对给定的$\alpha\quad(0&lt;\alpha&lt;1)$，有<br>$$<br>P(c\leq G\leq d)=1-\alpha<br>$$<br>（在离散场合，将上式等号改为$\geq$）</p><p><em><strong>Step 3</strong></em>：假如能将$c\leq G\leq d$进行不等式等价变形化为$\hat{\theta}_L\leq\theta\leq\hat{\theta}_U$，则有<br>$$<br>P_\theta(\hat{\theta}_L\leq\theta\leq\hat{\theta}_U)=1-\alpha<br>$$<br>表明$[\hat{\theta}_L,\hat{\theta}_U]$是$\theta$的$1-\alpha$同等置信区间。</p><blockquote><p><strong>注：</strong>满足条件的c和d有很多，最终选择的目的是希望平均长度$E_\theta(\hat{\theta}_U)-\hat{\theta}_L$尽可能短，但在一些场合中很难做到这一点，因此可以选择c和d，使得两个尾部概率各为$\alpha/2$，即<br>$$<br>P_\theta(G&lt;c)=P_\theta(G&gt;d)=\alpha/2<br>$$<br>得到<strong>等尾置信区间</strong>。</p></blockquote><blockquote><p>例：设$x_1,…,x_n$是来自均匀总体$U(0,\theta)$的一个样本，试对设定的$\alpha\ (0&lt;\alpha&lt;1)$给出$\theta$的$1-\alpha$同等置信区间。</p><p>解：三步法：</p><ul><li><p>已知$\theta$的最大似然估计为样本的最大次序统计量$x_{(n)}$，而$x_{(n)}/\theta$的密度函数为<br>$$<br> p(y;\theta)=ny^{n-1},\quad 0&lt;y&lt;1<br>$$<br> 它与参数$\theta$无关，故可取$x_{(n)}/\theta$作为枢轴量$G$。</p></li><li><p>由于$x_{(n)}/\theta$的分布函数为$F(y)=y^n$，$0&lt;y&lt;1$，故$P(c\leq x_{(n)}/\theta\leq d=d^n-c^n)$，因此可以选择适当的c和d满足<br>$$<br> d^n-c^n=1-\alpha<br>$$</p></li><li><p>在$0\leq c&lt;d\leq 1$及$d^n-c^n=1-\alpha$的条件下，当$d=1, c=\sqrt[n]{\alpha}$时，$E_\theta(\hat{\theta}<em>U)-\hat{\theta}<em>L$取最小值，所以$[x</em>{(n)},x</em>{(n)}/\sqrt[n]{\alpha}]$是$1-\alpha$置信区间</p></li></ul></blockquote></li></ol><h4 id="5-2-3-一些情况下的区间估计"><a href="#5-2-3-一些情况下的区间估计" class="headerlink" title="5.2.3 一些情况下的区间估计"></a>5.2.3 一些情况下的区间估计</h4><ol><li><p><strong>单个正态总体参数的置信区间</strong></p><ul><li><strong>$\sigma$已知时$\mu$的置信区间</strong>：$[\bar{x}-u_{1-\alpha/2}\sigma/\sqrt{n},\quad\bar{x}+u_{1-\alpha/2}\sigma/\sqrt{n}]$</li><li><strong>$\sigma$未知时$\mu$的置信区间</strong>：$[\bar{x}-t_{1-\alpha/2}(n-1)s/\sqrt{n},\quad\bar{x}+t_{1-\alpha/2}(n-1)s/\sqrt{n}]$</li><li><strong>$\sigma^2$的置信区间（$\mu$未知）</strong>：$[(n-1)s^2/\chi^2_{1-\alpha/2}(n-1),\quad(n-1)s^2/\chi^2_{\alpha/2}(n-1)]$</li></ul></li><li><p><strong>大样本置信区间</strong>：$[\bar{x}-u_{1-\alpha/2}\sqrt{\frac{\bar{x}(1-\bar{x})}{n}},\quad \bar{x}+u_{1-\alpha/2}\sqrt{\frac{\bar{x}(1-\bar{x})}{n}}]$</p></li><li><p><strong>两个正态总体下的置信区间</strong></p><ul><li><p><strong>$\mu_1-\mu_2$的置信区间</strong></p><ul><li><strong>$\sigma^2_1$和$\sigma^2_2$已知时</strong>：$[\bar{x}-\bar{y}-u_{1-\alpha/2}\sqrt{\frac{\sigma^2_1}{m}+\frac{\sigma^2_2}{n}},\quad \bar{x}-\bar{y}+u_{1-\alpha/2}\sqrt{\frac{\sigma^2_1}{m}+\frac{\sigma^2_2}{n}}]$</li><li><strong>$\sigma^2_1=\sigma^2_2=\sigma^2$未知时</strong>：$[\bar{x}-\bar{y}-\sqrt{\frac{m+n}{mn}}s_wt_{1-\alpha/2}(m+n-2),\quad \bar{x}-\bar{y}+\sqrt{\frac{m+n}{mn}}s_wt_{1-\alpha/2}(m+n-2)]$</li><li><strong>$\sigma^2_2/\sigma^2_1=c$已知时</strong>：$[\bar{x}-\bar{y}-\sqrt{\frac{mc+n}{mn}}s_wt_{1-\alpha/2}(m+n-2),\quad \bar{x}-\bar{y}+\sqrt{\frac{mc+n}{mn}}s_wt_{1-\alpha/2}(m+n-2)]$</li><li><strong>当m和n都很大时的近似置信区间</strong>：$[\bar{x}-\bar{y}-u_{1-\alpha/2}\sqrt{\frac{s^2_x}{m}+\frac{s^2_y}{n}},\quad \bar{x}-\bar{y}+u_{1-\alpha/2}\sqrt{\frac{s^2_x}{m}+\frac{s^2_y}{n}}]$</li><li><strong>一般情况下的近似置信区间</strong>：$[\bar{x}-\bar{y}-s_0t_{1-\alpha/2}(l),\quad \bar{x}-\bar{y}+s_0t_{1-\alpha/2}(l)]$</li></ul></li><li><p><strong>$\sigma^2_1/\sigma^2_2$的置信区间</strong>：$[\frac{s_x^2}{s_y^2}\cdot\frac{1}{F_{1-\alpha/2(m-1,n-1)}},\quad \frac{s_x^2}{s_y^2}\cdot\frac{1}{F_{\alpha/2(m-1,n-1)}}]$</p></li></ul></li></ol><h2 id="六-假设检验"><a href="#六-假设检验" class="headerlink" title="六 假设检验"></a>六 假设检验</h2><h3 id="6-1-假设检验的基本思想和概念"><a href="#6-1-假设检验的基本思想和概念" class="headerlink" title="6.1 假设检验的基本思想和概念"></a>6.1 假设检验的基本思想和概念</h3><ol><li><p><strong>基本思想</strong></p><p>以“女士品茶”为例，对于该女士有没有品茶的能力，有两种假设：该女士没有品茶能力和该女士有品茶能力。在统计上这两个非空不相交参数集合称作<strong>统计假设</strong>，简称<strong>假设</strong>。通过样本对一个假设作出对与不对的判断，则称为该假设的一个<strong>检验</strong>。若检验结果否定该命题，则称<strong>拒绝</strong>这个假设，否则就<strong>接受（不拒绝）</strong>这个假设。</p><p>假设可分为两种：1. <strong>参数假设检验</strong>，即已经知道数据的分布，针对总体的某个参数进行假设检验；2. <strong>非参数假设检验</strong>，即数据分布未知，针对该分布进行假设检验。</p></li><li><p><strong>假设检验的基本步骤</strong></p><p><em>建立假设</em>—&gt;<em>选择检验统计量，给出拒绝域形式</em>—&gt;<em>选择显著性水平</em>—&gt;<em>给出拒绝域</em>—&gt;<em>做出判断</em></p><p><strong><em>Step 1</em>：建立假设</strong></p><blockquote><p><strong>主要针对参数假设检验问题</strong></p><p>设有来自某分布族${F(x,\theta)|\theta\in\Theta}$的样本$x_1,…,x_n$，其中$\Theta$为参数空间，设$\Theta_0\in\Theta$，且$\Theta_0\neq\phi$，则命题$H_0:\theta\in\Theta_0$称为<strong>原假设</strong>或<strong>零假设（null hypothesis）</strong>，若有另一个$\Theta_1$（$\Theta_1\in\Theta,\Theta_1\Theta_0=\phi$，常见的一种情况是$\Theta_1=\Theta-\Theta_0$），则命题$H_1:\theta\in\Theta_1$称为$H_0$的<strong>对立假设</strong>或<strong>备择假设（alternative hypotheis）</strong>，当$H_0$为简单假设，即$\Theta_0$只含一个点时，备择假设有三种可能：$H_1’:\theta\neq\theta_0$，$H_1’’:\theta&lt;\theta_0$，$H_1’’’:\theta&gt;\theta_0$。</p></blockquote><p><strong><em>Step 2</em>：选择检验统计量，给出拒绝域形式</strong></p><blockquote><p>根据样本计算统计量$Z$（如样本均值、标准差等，称为<strong>检验统计量</strong>），并基于某个法则既可以决定接受$H_0$还是拒绝$H_0$，具体地，当统计量在拒绝域$W$中即拒绝$H_0$，在接受域$\overline{W}$中即接受$H_0$。由此可见，<strong>一个拒绝域$W$唯一确定一个检验法则，反之，一个检验法则也唯一确定一个拒绝域。</strong></p><p><strong>注：</strong>不能用一个样本（例子）证明一个命题（假设成立），但是可以用一个样本（例子）去推翻一个命题。此外，拒绝域与接受域之间有一个模糊域，即统计量恰好符合法则，通常将模糊域归为接受域，因此接受域是复杂的。</p></blockquote><p><strong><em>Step 3</em>：选择显著性水平</strong></p><blockquote><p>假设检验基于<strong>小概率事件</strong>，即小概率事件在一次试验中几乎不会发生，因此选择一个很小的概率值$\alpha$，令$p(拒绝H_0|H_0为真)\leq\alpha$，表示$Z\in W$是一个小概率事件，在一次试验中不应该发生。如果通过样本得到的统计量$z\in W$，即不该发生的小概率事件竟然发生了，那么应该拒绝$H_0$。</p><p>由于向本是随机的，通常做检验时可能做出错误判断，由此引入了两个错误，分别为<strong>第一类错误</strong>和<strong>第二类错误</strong>，如下表所示。</p><table><thead><tr><th align="center">观测数据情况</th><th align="center">总体情况</th><th align="center">总体情况</th></tr></thead><tbody><tr><td align="center"></td><td align="center">$H_0$为真</td><td align="center">$H_1$为真</td></tr><tr><td align="center">接受$H_0$</td><td align="center">第一类错误（拒真）</td><td align="center">正确</td></tr><tr><td align="center">拒绝$H_0$</td><td align="center">正确</td><td align="center">犯第二类错误（取伪）</td></tr></tbody></table><p>犯第一类错误概率：$\alpha=P(X\in W|H_0)$，即$\alpha=P(拒绝H_0|H_0为真)$；</p></blockquote></li></ol><blockquote><p>犯第二类错误概率：$\beta=P(X\in \overline{W}|H_1)$，即$\beta=P(接受H_0|H_0为假)$。</p><p>可以证明的，在一定样本量下，两类错误概率无法共同减小，但是当样本增加时，可以同时减小。</p><blockquote><p> 证明该问题需要引入是函数，下面将简单介绍势函数，但不对上述结论证明。</p><p>定义：设检验问题$H_0:\theta\in\Theta_0\quad vs\quad H_1:\theta \in \Theta_1$的拒绝域为$W$，则样本观测值$\mathbf{X}$落在拒绝域$W$内的概率称为该检验的<strong>势函数</strong>，记为<br>$$<br>g(\theta)=P_\theta(\mathbf{X}\in W),\ \theta\in\Theta=\Theta_0\cup\Theta_1\<br>g(\theta)=\left{\begin{matrix}<br>\alpha(\theta) &amp; \theta\in\Theta_0\<br>1-\beta(\theta) &amp;\theta\in\Theta_1<br>\end{matrix}\right.<br>$$</p></blockquote><p>第一类错误概率$\alpha$即为初始设定的很小的概率，称为<strong>置信水平</strong>，称该检验时<strong>显著性水平为$\alpha$的显著性检验</strong>，简称<strong>水平为$\alpha$的检验</strong>。为了尽量减少两类错误，可简单的将其简化为减小第一类错误概率（第二类错误概率难求）。常用的$\alpha=0.05$有时也选择0.1或0.01。</p></blockquote><p>   <strong><em>Step 4</em>：给出拒绝域</strong></p><blockquote><p>为了使得第一类错误的概率尽可能小，给定一个较小的$\alpha$，并选择一个数$k$，设定若$Z\geq k$拒绝$H_0$，使得$P(u=|\frac{z-\mu}{\sigma/\sqrt{n}}|\geq k)\leq \alpha$，所以$k=u_{\alpha/2}$。</p><p>注：算拒绝域时，需基于标准正态分布。</p></blockquote><p>   <strong><em>Step 5</em>：做出判断</strong></p><blockquote><p>通过样本计算统计量，若统计量在拒绝域中，则拒绝原假设，否则接受原假设。</p></blockquote><ol start="3"><li><p><strong>检验的$p$值</strong></p><p>不同置信水平$\alpha$的取值，可能会存在不同的结果。因此引入新的指标，即利用样本观测值能够作出拒绝原假设的最小显著水平，称为<strong>检验的$p$值</strong>。由检验的$p$值与心目中的显著性水平$\alpha$进行比较，可以容易做出检验结论：</p><ul><li>若$\alpha\geq p$，则在显著性水平$\alpha$下拒绝$H_0$；</li><li>若$\alpha&lt;p$，则在显著性水平$\alpha$下接受$H_0$.</li></ul><blockquote><p> <strong>注：</strong>一般以$p&lt;0.05$ 为有统计学差异， $p&lt;0.01$ 为有显著统计学差异，$p&lt;0.001$为有极其显著的统计学差异。</p></blockquote></li></ol><blockquote><p>参考：Statistics-note</p><p>Author：钱小z </p><p>Email：<a href="mailto:qz_gis@163.com">qz_gis@163.com</a></p><p>Bio：GISer，Spatiotemporal data mining</p><p>GitHub：ChanceQZ</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Course Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mathematics </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术栈与项目栈</title>
      <link href="/2024/05/13/project-stack/"/>
      <url>/2024/05/13/project-stack/</url>
      
        <content type="html"><![CDATA[<h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><h3 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h3><ul><li>C++ 基本语法</li><li>Python 基本语法</li><li>常用算法</li><li>数据结构</li></ul><blockquote><p>算法与数据结构大纲参照 Luogu-Problem-List </p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Stack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Luogu-Problem-List 2.0</title>
      <link href="/2024/03/04/list/"/>
      <url>/2024/03/04/list/</url>
      
        <content type="html"><![CDATA[<h1 id="Luogu-Problem-List"><a href="#Luogu-Problem-List" class="headerlink" title="Luogu-Problem-List"></a>Luogu-Problem-List</h1><p>洛谷试炼场的题目确实很具有代表性，但是近几年以来，又有许多经典题目出现在 OI 界中，这个大题单就是作为洛谷试炼场的扩展和补充。</p><h2 id="Copyleft"><a href="#Copyleft" class="headerlink" title="Copyleft"></a>Copyleft</h2><p><a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh"><img src="https://i.creativecommons.org/l/by-sa/4.0/88x31.png"></a></p><p>本项目采用 <a href="https://creativecommons.org/licenses/by-sa/4.0/deed.zh">知识共享署名-相同方式共享 4.0 国际许可协议</a> 以及附加的 <a href="https://github.com/zTrix/sata-license">The Star And Thank Author License</a> 进行许可。</p><p>换言之，您可以自由的共享并演绎该项目，但是必须给出必要的署名，并以相同方式共享本项目，并为本项目的 <a href="https://github.com/SFOI-Team/luogu-problem-list">Github 仓库</a> 点赞（Star）。</p><h2 id="新版本食用指南"><a href="#新版本食用指南" class="headerlink" title="新版本食用指南"></a>新版本食用指南</h2><p><strong>本次版本更新变更较大，建议您仔细阅读下面的内容！</strong></p><p>在刚刚更新的 2.0 版本中，我们改变了原来按知识难度排列知识点的目录结构，改为按照专题大类组织目录结构。</p><p>为了方便按知识难度刷题的用户，这里给出一些建议：</p><ul><li>对于初学者，建议先完成 Part 1,2 两部分内容，为接下来的学习打好基础。</li><li>对于要参加 CSP-S 的选手，建议在前面的基础上优先完成 Part 3.1-3.4, 4.1-4.4, 6.1-6.5, 7.1-7.8, 8.1-8.7 的内容（具体内容见下），在此基础上继续完成其他内容。</li><li>每个专题下的题目先给出模板，剩下的题目均按照难度递增顺序排序，部分难度较高的综合性题目建议达到一定能力后再尝试解决。</li></ul><h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><p>3.0.2 2020/2/28：</p><ol><li>添加了少量比赛题目；</li><li>移除了一些做法重复的题目。</li></ol><p>3.0.1 2019/12/8：</p><ol><li>添加了 CSP2019 和一些公开赛的题目；</li><li>跟进洛谷域名更换，将题目链接全部更新。</li></ol><p>3.0 2019/10/13：</p><ol><li>新增专题：回文自动机，K-D Tree，自适应辛普森法，左偏树，置换群，离线算法，构造，DLX，三分法，珂朵莉树。</li><li>添加了一些最近的公开比赛题目，部分专题补充了一些优质题目。</li><li>移除了部分重复题目。</li><li>对之前没有介绍的专题补充了介绍。</li></ol><p><a href="https://github.com/SFOI-Team/luogu-problem-list/blob/master/history.md">更早版本的更新日志请点击这里查看</a></p><h2 id="Part-0-试机题"><a href="#Part-0-试机题" class="headerlink" title="Part 0 试机题"></a>Part 0 试机题</h2><blockquote><p>三道试机题目。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1000">P1000 超级玛丽游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P1001">P1001 A+B Problem</a></li><li><a href="https://www.luogu.com.cn/problem/P1008">P1008 三连击</a></li></ul><h2 id="Part-1-入门阶段"><a href="#Part-1-入门阶段" class="headerlink" title="Part 1 入门阶段"></a>Part 1 入门阶段</h2><blockquote><p>本部分内容针对入门 OIer ，主要是语言基础内容。</p></blockquote><h3 id="Part-1-1-从零开始"><a href="#Part-1-1-从零开始" class="headerlink" title="Part 1.1 从零开始"></a>Part 1.1 从零开始</h3><blockquote><p>语言基础题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1421">P1421 小玉买文具</a></li><li><a href="https://www.luogu.com.cn/problem/P1909">P1909 买铅笔</a></li><li><a href="https://www.luogu.com.cn/problem/P1089">P1089 津津的储蓄计划</a></li><li><a href="https://www.luogu.com.cn/problem/P1085">P1085 不高兴的津津</a></li><li><a href="https://www.luogu.com.cn/problem/P1035">P1035 级数求和</a></li><li><a href="https://www.luogu.com.cn/problem/P1980">P1980 计数问题</a></li><li><a href="https://www.luogu.com.cn/problem/P1014">P1014 Cantor表</a></li><li><a href="https://www.luogu.com.cn/problem/P1307">P1307 数字反转</a></li></ul><h3 id="Part-1-2-数组基础"><a href="#Part-1-2-数组基础" class="headerlink" title="Part 1.2 数组基础"></a>Part 1.2 数组基础</h3><blockquote><p>数组可以用于存储大量的信息。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1046">P1046 陶陶摘苹果</a></li><li><a href="https://www.luogu.com.cn/problem/P1047">P1047 校门外的树</a></li><li><a href="https://www.luogu.com.cn/problem/P1427">P1427 小鱼的数字游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P2141">P2141 珠心算测验</a></li><li><a href="https://www.luogu.com.cn/problem/P5594">P5594 【XR-4】模拟赛</a></li></ul><h3 id="Part-1-3-字符串基础"><a href="#Part-1-3-字符串基础" class="headerlink" title="Part 1.3 字符串基础"></a>Part 1.3 字符串基础</h3><blockquote><p>字符串是特殊的数组，但它也有很多自身的特点。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5015">P5015 标题统计</a></li><li><a href="https://www.luogu.com.cn/problem/P1055">P1055 ISBN号码</a></li><li><a href="https://www.luogu.com.cn/problem/P1308">P1308 统计单词数</a></li><li><a href="https://www.luogu.com.cn/problem/P2010">P2010 回文日期</a></li><li><a href="https://www.luogu.com.cn/problem/P1012">P1012 拼数</a></li><li><a href="https://www.luogu.com.cn/problem/P5587">P5587 打字练习</a></li></ul><h3 id="Part-1-4-函数，递归及递推"><a href="#Part-1-4-函数，递归及递推" class="headerlink" title="Part 1.4 函数，递归及递推"></a>Part 1.4 函数，递归及递推</h3><blockquote><p>这是初学者最难理解的部分，建议画出递归图来理解递归的过程。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1028">P1028 数的计算</a></li><li><a href="https://www.luogu.com.cn/problem/P1036">P1036 选数</a></li><li><a href="https://www.luogu.com.cn/problem/P1464">P1464 Function</a></li><li><a href="https://www.luogu.com.cn/problem/P5534">P5534 【XR-3】等差数列</a></li><li><a href="https://www.luogu.com.cn/problem/P1192">P1192 台阶问题</a></li><li><a href="https://www.luogu.com.cn/problem/P1025">P1025 数的划分</a></li><li><a href="https://www.luogu.com.cn/problem/P4994">P4994 终于结束的起点</a></li></ul><h2 id="Part-2-基础算法"><a href="#Part-2-基础算法" class="headerlink" title="Part 2 基础算法"></a>Part 2 基础算法</h2><blockquote><p>这一部分的内容包含了 OI 中的基础算法，供各位巩固基础。</p><p>当然，这里面也有一些难度比较高的题目。</p></blockquote><h3 id="Part-2-1-模拟"><a href="#Part-2-1-模拟" class="headerlink" title="Part 2.1 模拟"></a>Part 2.1 模拟</h3><blockquote><p>模拟，顾名思义就是题目要求你做什么你就做什么，这样的题目很考验选手的代码组织能力。</p><p>这里不仅仅有非常基础的模拟，也有一些非常复杂的题目。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1003">P1003 铺地毯</a></li><li><a href="https://www.luogu.com.cn/problem/P1067">P1067 多项式输出</a></li><li><a href="https://www.luogu.com.cn/problem/P1328">P1328 生活大爆炸版石头剪刀布</a></li><li><a href="https://www.luogu.com.cn/problem/P1563">P1563 玩具谜题</a></li><li><a href="https://www.luogu.com.cn/problem/P1042">P1042 乒乓球</a></li><li><a href="https://www.luogu.com.cn/problem/P1179">P1179 数字统计</a></li><li><a href="https://www.luogu.com.cn/problem/P2615">P2615 神奇的幻方</a></li><li><a href="https://www.luogu.com.cn/problem/P3952">P3952 时间复杂度</a></li><li><a href="https://www.luogu.com.cn/problem/P2482">P2482 [SDOI2010]猪国杀</a></li><li><a href="https://www.luogu.com.cn/problem/P5380">P5380 [THUPC2019]鸭棋</a></li></ul><h3 id="Part-2-2-排序算法"><a href="#Part-2-2-排序算法" class="headerlink" title="Part 2.2 排序算法"></a>Part 2.2 排序算法</h3><blockquote><p>通过排序，我们可以将数据有序化，这让我们对数据的处理方便了很多。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1177">P1177 【模板】快速排序</a></li><li><a href="https://www.luogu.com.cn/problem/P1059">P1059 明明的随机数</a></li><li><a href="https://www.luogu.com.cn/problem/P1068">P1068 分数线划定</a></li><li><a href="https://www.luogu.com.cn/problem/P1051">P1051 谁拿了最多奖学金</a></li><li><a href="https://www.luogu.com.cn/problem/P1309">P1309 瑞士轮</a></li><li><a href="https://www.luogu.com.cn/problem/P1908">P1908 逆序对</a></li></ul><h3 id="Part-2-3-二分答案"><a href="#Part-2-3-二分答案" class="headerlink" title="Part 2.3 二分答案"></a>Part 2.3 二分答案</h3><blockquote><p>对一个满足单调性质的问题，我们可以采用二分答案的方法来解决。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1024">P1024 一元三次方程求解</a></li><li><a href="https://www.luogu.com.cn/problem/P2678">P2678 跳石头</a></li><li><a href="https://www.luogu.com.cn/problem/P1824">P1824 进击的奶牛</a></li><li><a href="https://www.luogu.com.cn/problem/P1902">P1902 刺杀大使</a></li><li><a href="https://www.luogu.com.cn/problem/P1314">P1314 聪明的质监员</a></li><li><a href="https://www.luogu.com.cn/problem/P1083">P1083 借教室</a></li><li><a href="https://www.luogu.com.cn/problem/P4343">P4343 [SHOI2015]自动刷题机</a></li></ul><h3 id="Part-2-4-分治"><a href="#Part-2-4-分治" class="headerlink" title="Part 2.4 分治"></a>Part 2.4 分治</h3><blockquote><p>分治，即分而治之，将大问题分解为小问题，分别求解，最后合并结果。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1226">P1226 【模板】快速幂||取余运算</a></li><li><a href="https://www.luogu.com.cn/problem/P1010">P1010 幂次方</a></li><li><a href="https://www.luogu.com.cn/problem/P1429">P1429 平面最近点对（加强版）</a></li><li><a href="https://www.luogu.com.cn/problem/P3612">P3612 [USACO17JAN]Secret Cow Code</a></li></ul><h3 id="Part-2-5-贪心"><a href="#Part-2-5-贪心" class="headerlink" title="Part 2.5 贪心"></a>Part 2.5 贪心</h3><blockquote><p>贪心，指的是决策时都采取当前最优解的算法。有的时候，这样做确实可以获得最优解。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1208">P1208 [USACO1.3]Mixing Milk</a></li><li><a href="https://www.luogu.com.cn/problem/P4995">P4995 跳跳！</a></li><li><a href="https://www.luogu.com.cn/problem/P1094">P1094 纪念品分组</a></li><li><a href="https://www.luogu.com.cn/problem/P1199">P1199 三国游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P2672">P2672 推销员</a></li><li><a href="https://www.luogu.com.cn/problem/P1080">P1080 国王游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P2123">P2123 皇后游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P5521">P5521 [yLOI2019]梅深不见冬</a></li></ul><h3 id="Part-2-6-构造"><a href="#Part-2-6-构造" class="headerlink" title="Part 2.6 构造"></a>Part 2.6 构造</h3><blockquote><p>构造题是一种形式灵活多样的题型。正是因为这个特点，使得构造题没有一种通用的方法。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3599">P3599 Koishi Loves Construction</a></li><li><a href="https://www.luogu.com.cn/problem/P5441">P5441 【XR-2】伤痕</a></li><li><a href="https://www.luogu.com.cn/problem/P5595">P5595 【XR-4】歌唱比赛</a></li></ul><h3 id="Part-2-7-高精度"><a href="#Part-2-7-高精度" class="headerlink" title="Part 2.7 高精度"></a>Part 2.7 高精度</h3><blockquote><p>在 C++ 中，long long 都无法表示我们需要的整数时怎么办？那就用高精度吧！</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1601">P1601 A+B Problem（高精）</a></li><li><a href="https://www.luogu.com.cn/problem/P2142">P2142 高精度减法</a></li><li><a href="https://www.luogu.com.cn/problem/P1303">P1303 A*B Problem</a></li><li><a href="https://www.luogu.com.cn/problem/P1480">P1480 A/B Problem</a></li><li><a href="https://www.luogu.com.cn/problem/P1009">P1009 阶乘之和</a></li></ul><h3 id="Part-2-8-前缀和-差分"><a href="#Part-2-8-前缀和-差分" class="headerlink" title="Part 2.8 前缀和 &amp; 差分"></a>Part 2.8 前缀和 &amp; 差分</h3><blockquote><p>前缀和是一种重要的预处理，能大大降低查询的时间复杂度，而差分则是一种和前缀和相对的策略。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3131">P3131 [USACO16JAN]Subsequences Summing to Sevens</a></li><li><a href="https://www.luogu.com.cn/problem/P1387">P1387 最大正方形</a></li><li><a href="https://www.luogu.com.cn/problem/P3397">P3397 地毯</a></li><li><a href="https://www.luogu.com.cn/problem/P2280">P2280 [HNOI2003]激光炸弹</a></li><li><a href="https://www.luogu.com.cn/problem/P4552">P4552 [Poetize6] IncDec Sequence</a></li></ul><h2 id="Part-3-搜索"><a href="#Part-3-搜索" class="headerlink" title="Part 3 搜索"></a>Part 3 搜索</h2><blockquote><p>搜索其实就是高级的枚举，很多题目都可以用搜索完成。就算不能，搜索也是骗分神器。</p></blockquote><h3 id="Part-3-1-深度优先搜索"><a href="#Part-3-1-深度优先搜索" class="headerlink" title="Part 3.1 深度优先搜索"></a>Part 3.1 深度优先搜索</h3><blockquote><p>深度优先搜索（DFS），即按照深度优先的顺序搜索的算法。</p><p>深度优先搜索一般使用栈来实现。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1219">P1219 八皇后</a></li><li><a href="https://www.luogu.com.cn/problem/P1019">P1019 单词接龙</a></li><li><a href="https://www.luogu.com.cn/problem/P5194">P5194 [USACO05DEC]Scales</a></li><li><a href="https://www.luogu.com.cn/problem/P5440">P5440 【XR-2】奇迹</a></li><li><a href="https://www.luogu.com.cn/problem/P1378">P1378 油滴扩展</a></li></ul><h3 id="Part-3-2-广度优先搜索"><a href="#Part-3-2-广度优先搜索" class="headerlink" title="Part 3.2 广度优先搜索"></a>Part 3.2 广度优先搜索</h3><blockquote><p>广度优先搜索（BFS），即优先扩展浅层节点，逐渐深入的搜索算法。</p><p>广度优先搜索一般使用队列来实现。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1162">P1162 填涂颜色</a></li><li><a href="https://www.luogu.com.cn/problem/P1443">P1443 马的遍历</a></li><li><a href="https://www.luogu.com.cn/problem/P3956">P3956 棋盘</a></li><li><a href="https://www.luogu.com.cn/problem/P1032">P1032 字串变换</a></li><li><a href="https://www.luogu.com.cn/problem/P1126">P1126 机器人搬重物</a></li></ul><h3 id="Part-3-3-记忆化搜索"><a href="#Part-3-3-记忆化搜索" class="headerlink" title="Part 3.3 记忆化搜索"></a>Part 3.3 记忆化搜索</h3><blockquote><p>通过将已经遍历的状态记录下来，从而减少重复的搜索量，这就是记忆化搜索。</p><p>动态规划的时候，记忆化搜索也是一种高效简洁的实现方式。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1514">P1514 引水入城</a></li><li><a href="https://www.luogu.com.cn/problem/P1535">P1535 游荡的奶牛</a></li><li><a href="https://www.luogu.com.cn/problem/P1434">P1434 [SHOI2002]滑雪</a></li><li><a href="https://www.luogu.com.cn/problem/P3953">P3953 逛公园</a></li></ul><h3 id="Part-3-4-搜索的剪枝"><a href="#Part-3-4-搜索的剪枝" class="headerlink" title="Part 3.4 搜索的剪枝"></a>Part 3.4 搜索的剪枝</h3><blockquote><p>对于一些不必要搜索的部分，我们可以避免访问这些状态，从而提高搜索效率。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1120">P1120 小木棍 ［数据加强版］</a></li><li><a href="https://www.luogu.com.cn/problem/P1312">P1312 Mayan游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P1074">P1074 靶形数独</a></li></ul><h3 id="Part-3-5-双向搜索"><a href="#Part-3-5-双向搜索" class="headerlink" title="Part 3.5 双向搜索"></a>Part 3.5 双向搜索</h3><blockquote><p>在搜索时，如果能从初态和终态出发，同时进行搜索，就可以减小搜索树的规模，提高时间效率。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3067">P3067 [USACO12OPEN]Balanced Cow Subsets</a></li><li><a href="https://www.luogu.com.cn/problem/P4799">P4799 [CEOI2015 Day2]世界冰球锦标赛</a></li><li><a href="https://www.luogu.com.cn/problem/P5195">P5195 [USACO05DEC]Knights of Ni</a></li></ul><h3 id="Part-3-6-A"><a href="#Part-3-6-A" class="headerlink" title="Part 3.6 A*"></a>Part 3.6 A*</h3><blockquote><p>在 BFS 中，如果能设计一个合理的估价函数，就可以更快扩展到最优解。这就是 A*算法。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1379">P1379 八数码难题</a></li></ul><h3 id="Part-3-7-IDA"><a href="#Part-3-7-IDA" class="headerlink" title="Part 3.7 IDA*"></a>Part 3.7 IDA*</h3><blockquote><p>像 BFS 那样，每次只扩展一层节点，却采用 DFS 方式来遍历搜索树，这就是迭代加深搜索。</p><p>再加上一个估价函数来减小搜索量，就是 IDA*了。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2324">P2324 [SCOI2005]骑士精神</a></li><li><a href="https://www.luogu.com.cn/problem/P2534">P2534 [AHOI2012]铁盘整理</a></li></ul><h3 id="Part-3-8-DLX"><a href="#Part-3-8-DLX" class="headerlink" title="Part 3.8 DLX"></a>Part 3.8 DLX</h3><blockquote><p>算法 X 是通过回溯法求解精确覆盖问题的算法，而删除列这一操作可以使用舞蹈链加速。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4929">P4929 【模板】舞蹈链（DLX）</a></li><li><a href="https://www.luogu.com.cn/problem/P4205">P4205 [NOI2005]智慧珠游戏</a></li></ul><h2 id="Part-4-动态规划"><a href="#Part-4-动态规划" class="headerlink" title="Part 4 动态规划"></a>Part 4 动态规划</h2><blockquote><p>动态规划是一种重要的思维方法，通过利用已有的子问题信息高效求出当前问题的最优解。</p></blockquote><h3 id="Part-4-1-线性动态规划"><a href="#Part-4-1-线性动态规划" class="headerlink" title="Part 4.1 线性动态规划"></a>Part 4.1 线性动态规划</h3><blockquote><p>线性动态规划，即具有线性阶段划分的动态规划。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1216">P1216 数字三角形</a></li><li><a href="https://www.luogu.com.cn/problem/P1020">P1020 导弹拦截</a></li><li><a href="https://www.luogu.com.cn/problem/P1091">P1091 合唱队形</a></li><li><a href="https://www.luogu.com.cn/problem/P1095">P1095 守望者的逃离</a></li><li><a href="https://www.luogu.com.cn/problem/P1541">P1541 乌龟棋</a></li><li><a href="https://www.luogu.com.cn/problem/P1868">P1868 饥饿的奶牛</a></li><li><a href="https://www.luogu.com.cn/problem/P2679">P2679 子串</a></li><li><a href="https://www.luogu.com.cn/problem/P2501">P2501 [HAOI2006]数字序列</a></li><li><a href="https://www.luogu.com.cn/problem/P3336">P3336 [ZJOI2013]话旧</a></li><li><a href="https://www.luogu.com.cn/problem/P3558">P3558 [POI2013]BAJ-Bytecomputer</a></li><li><a href="https://www.luogu.com.cn/problem/P4158">P4158 [SCOI2009]粉刷匠</a></li><li><a href="https://www.luogu.com.cn/problem/P5301">P5301 [GXOI/GZOI2019]宝牌一大堆</a></li></ul><h3 id="Part-4-2-背包动态规划"><a href="#Part-4-2-背包动态规划" class="headerlink" title="Part 4.2 背包动态规划"></a>Part 4.2 背包动态规划</h3><blockquote><p>背包动态规划是线性动态规划中特殊的一类，NOIP中考到的次数也不少。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1048">P1048 采药</a></li><li><a href="https://www.luogu.com.cn/problem/P1060">P1060 开心的金明</a></li><li><a href="https://www.luogu.com.cn/problem/P1855">P1855 榨取kkksc03</a></li><li><a href="https://www.luogu.com.cn/problem/P5020">P5020 货币系统</a></li><li><a href="https://www.luogu.com.cn/problem/P1757">P1757 通天之分组背包</a></li><li><a href="https://www.luogu.com.cn/problem/P1064">P1064 金明的预算方案</a></li><li><a href="https://www.luogu.com.cn/problem/P2946">P2946 [USACO09MAR]Cow Frisbee Team</a></li><li><a href="https://www.luogu.com.cn/problem/P1156">P1156 垃圾陷阱</a></li><li><a href="https://www.luogu.com.cn/problem/P5322">P5322 [BJOI2019]排兵布阵</a></li><li><a href="https://www.luogu.com.cn/problem/P5289">P5289 [十二省联考2019]皮配</a></li></ul><h3 id="Part-4-3-区间动态规划"><a href="#Part-4-3-区间动态规划" class="headerlink" title="Part 4.3 区间动态规划"></a>Part 4.3 区间动态规划</h3><blockquote><p>区间动态规划一般以区间作为动态规划的阶段。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1880">P1880 [NOI1995]石子合并</a></li><li><a href="https://www.luogu.com.cn/problem/P3146">P3146 [USACO16OPEN]248</a></li><li><a href="https://www.luogu.com.cn/problem/P1063">P1063 能量项链</a></li><li><a href="https://www.luogu.com.cn/problem/P1005">P1005 矩阵取数游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P4170">P4170 [CQOI2007]涂色</a></li><li><a href="https://www.luogu.com.cn/problem/P4302">P4302 [SCOI2003]字符串折叠</a></li><li><a href="https://www.luogu.com.cn/problem/P2466">P2466 [SDOI2008]Sue的小球</a></li></ul><h3 id="Part-4-4-树形动态规划"><a href="#Part-4-4-树形动态规划" class="headerlink" title="Part 4.4 树形动态规划"></a>Part 4.4 树形动态规划</h3><blockquote><p>树形动态规划，即在树上进行的动态规划。</p><p>因为树的递归性质，树形动态规划一般都是递归求解的。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1352">P1352 没有上司的舞会</a></li><li><a href="https://www.luogu.com.cn/problem/P1040">P1040 加分二叉树</a></li><li><a href="https://www.luogu.com.cn/problem/P1122">P1122 最大子树和</a></li><li><a href="https://www.luogu.com.cn/problem/P1273">P1273 有线电视网</a></li><li><a href="https://www.luogu.com.cn/problem/P2014">P2014 选课</a></li><li><a href="https://www.luogu.com.cn/problem/P2585">P2585 [ZJOI2006]三色二叉树</a></li><li><a href="https://www.luogu.com.cn/problem/P3047">P3047 [USACO12FEB]Nearby Cows</a></li><li><a href="https://www.luogu.com.cn/problem/P3698">P3698 [CQOI2017]小Q的棋盘</a></li><li><a href="https://www.luogu.com.cn/problem/P5658">P5658 括号树</a></li><li><a href="https://www.luogu.com.cn/problem/P2607">P2607 [ZJOI2008]骑士</a></li><li><a href="https://www.luogu.com.cn/problem/P3177">P3177 [HAOI2015]树上染色</a></li><li><a href="https://www.luogu.com.cn/problem/P4395">P4395 [BOI2003]Gem</a></li><li><a href="https://www.luogu.com.cn/problem/P4516">P4516 [JSOI2018]潜入行动</a></li></ul><h3 id="Part-4-5-状态压缩动态规划"><a href="#Part-4-5-状态压缩动态规划" class="headerlink" title="Part 4.5 状态压缩动态规划"></a>Part 4.5 状态压缩动态规划</h3><blockquote><p>将一个状态压缩为一个整数（通常为二进制数），就可以在更为方便地进行状态转移的同时，达到节约空间的目的。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2704">P2704 [NOI2001]炮兵阵地</a></li><li><a href="https://www.luogu.com.cn/problem/P1879">P1879 [USACO06NOV]Corn Fields</a></li><li><a href="https://www.luogu.com.cn/problem/P1896">P1896 [SCOI2005]互不侵犯</a></li><li><a href="https://www.luogu.com.cn/problem/P3092">P3092 [USACO13NOV]No Change</a></li><li><a href="https://www.luogu.com.cn/problem/P3694">P3694 邦邦的大合唱站队</a></li><li><a href="https://www.luogu.com.cn/problem/P4925">P4925 [1007]Scarlet的字符串不可能这么可爱</a></li><li><a href="https://www.luogu.com.cn/problem/P2157">P2157 [SDOI2009]学校食堂</a></li><li><a href="https://www.luogu.com.cn/problem/P2167">P2167 [SDOI2009]Bill的挑战</a></li><li><a href="https://www.luogu.com.cn/problem/P2396">P2396 yyy loves Maths VII</a></li><li><a href="https://www.luogu.com.cn/problem/P4363">P4363 [九省联考2018]一双木棋</a></li><li><a href="https://www.luogu.com.cn/problem/P5005">P5005 中国象棋 - 摆上马</a></li><li><a href="https://www.luogu.com.cn/problem/P2150">P2150 [NOI2015]寿司晚宴</a></li></ul><h3 id="Part-4-6-倍增优化动态规划"><a href="#Part-4-6-倍增优化动态规划" class="headerlink" title="Part 4.6 倍增优化动态规划"></a>Part 4.6 倍增优化动态规划</h3><blockquote><p>利用倍增的方式，我们可以将状态转移的效率大大提高。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1613">P1613 跑路</a></li><li><a href="https://www.luogu.com.cn/problem/P1081">P1081 开车旅行</a></li><li><a href="https://www.luogu.com.cn/problem/P5024">P5024 保卫王国</a></li></ul><h3 id="Part-4-7-数据结构优化动态规划"><a href="#Part-4-7-数据结构优化动态规划" class="headerlink" title="Part 4.7 数据结构优化动态规划"></a>Part 4.7 数据结构优化动态规划</h3><blockquote><p>利用数据结构来维护已有信息，也可以达到优化状态转移的目的。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4719">P4719 【模板】动态dp</a></li><li><a href="https://www.luogu.com.cn/problem/P4751">P4751 动态dp【加强版】</a></li><li><a href="https://www.luogu.com.cn/problem/P3287">P3287 [SCOI2014]方伯伯的玉米田</a></li><li><a href="https://www.luogu.com.cn/problem/P2605">P2605 [ZJOI2010]基站选址</a></li></ul><h3 id="Part-4-8-单调队列优化动态规划"><a href="#Part-4-8-单调队列优化动态规划" class="headerlink" title="Part 4.8 单调队列优化动态规划"></a>Part 4.8 单调队列优化动态规划</h3><blockquote><p>借助单调队列，排除不可能的决策，可以起到优化状态转移的效果。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1776">P1776 宝物筛选</a></li><li><a href="https://www.luogu.com.cn/problem/P3089">P3089 [USACO13NOV]Pogo-Cow</a></li><li><a href="https://www.luogu.com.cn/problem/P3572">P3572 [POI2014]PTA-Little Bird</a></li><li><a href="https://www.luogu.com.cn/problem/P3522">P3522 [POI2011]TEM-Temperature</a></li><li><a href="https://www.luogu.com.cn/problem/P4544">P4544 [USACO10NOV]Buying Feed</a></li><li><a href="https://www.luogu.com.cn/problem/P5665">P5665 划分</a></li><li><a href="https://www.luogu.com.cn/problem/P1973">P1973 [NOI2011]Noi嘉年华</a></li><li><a href="https://www.luogu.com.cn/problem/P2569">P2569 [SCOI2010]股票交易</a></li><li><a href="https://www.luogu.com.cn/problem/P4852">P4852 yyf hates choukapai</a></li></ul><h3 id="Part-4-9-斜率优化动态规划"><a href="#Part-4-9-斜率优化动态规划" class="headerlink" title="Part 4.9 斜率优化动态规划"></a>Part 4.9 斜率优化动态规划</h3><blockquote><p>通过用单调队列维护一个凸壳，来达到优化转移的目的。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2900">P2900 [USACO08MAR]Land Acquisition</a></li><li><a href="https://www.luogu.com.cn/problem/P3195">P3195 [HNOI2008]玩具装箱</a></li><li><a href="https://www.luogu.com.cn/problem/P3628">P3628 [APIO2010]特别行动队</a></li><li><a href="https://www.luogu.com.cn/problem/P3648">P3648 [APIO2014]序列分割</a></li><li><a href="https://www.luogu.com.cn/problem/P4027">P4027 [NOI2007]货币兑换</a></li><li><a href="https://www.luogu.com.cn/problem/P4360">P4360 [CEOI2004]锯木厂选址</a></li><li><a href="https://www.luogu.com.cn/problem/P5468">P5468 [NOI2019]回家路线</a></li><li><a href="https://www.luogu.com.cn/problem/P2305">P2305 [NOI2014]购票</a></li></ul><h3 id="Part-4-10-决策单调性优化动态规划"><a href="#Part-4-10-决策单调性优化动态规划" class="headerlink" title="Part 4.10 决策单调性优化动态规划"></a>Part 4.10 决策单调性优化动态规划</h3><blockquote><p>利用决策间的递变规律，也能实现优化状态转移的目的。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3515">P3515 [POI2011]Lightning Conductor</a></li><li><a href="https://www.luogu.com.cn/problem/P4767">P4767 [IOI2000]邮局</a></li><li><a href="https://www.luogu.com.cn/problem/P1912">P1912 [NOI2009]诗人小G</a></li><li><a href="https://www.luogu.com.cn/problem/P1973">P1973 [NOI2011]Noi嘉年华</a></li><li><a href="https://www.luogu.com.cn/problem/P3724">P3724 [AH2017/HNOI2017]大佬</a></li><li><a href="https://www.luogu.com.cn/problem/P5574">P5574 [CmdOI2019]任务分配问题</a></li></ul><h3 id="Part-4-11-数位统计类动态规划"><a href="#Part-4-11-数位统计类动态规划" class="headerlink" title="Part 4.11 数位统计类动态规划"></a>Part 4.11 数位统计类动态规划</h3><blockquote><p>统计一个区间中满足条件的数有多少，就是数位统计类动态规划。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2602">P2602 [ZJOI2010]数字计数</a></li><li><a href="https://www.luogu.com.cn/problem/P3281">P3281 [SCOI2013]数数</a></li><li><a href="https://www.luogu.com.cn/problem/P2518">P2518 [HAOI2010]计数</a></li><li><a href="https://www.luogu.com.cn/problem/P2657">P2657 [SCOI2009]windy数</a></li><li><a href="https://www.luogu.com.cn/problem/P3286">P3286 [SCOI2014]方伯伯的商场之旅</a></li><li><a href="https://www.luogu.com.cn/problem/P4124">P4124 [CQOI2016]手机号码</a></li><li><a href="https://www.luogu.com.cn/problem/P4999">P4999 烦人的数学作业</a></li><li><a href="https://www.luogu.com.cn/problem/P2606">P2606 [ZJOI2010]排列计数</a></li><li><a href="https://www.luogu.com.cn/problem/P4798">P4798 [CEOI2015 Day1]卡尔文球锦标赛</a></li></ul><h3 id="Part-4-12-轮廓线动态规划"><a href="#Part-4-12-轮廓线动态规划" class="headerlink" title="Part 4.12 轮廓线动态规划"></a>Part 4.12 轮廓线动态规划</h3><blockquote><p>轮廓线动态规划（即常说的插头 DP）是一种特殊的状压动态规划，通过以轮廓线为状态来实现状态转移。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5056">P5056 【模板】插头dp</a></li><li><a href="https://www.luogu.com.cn/problem/P2289">P2289 [HNOI2004]邮递员</a></li><li><a href="https://www.luogu.com.cn/problem/P2337">P2337 [SCOI2012]喵星人的入侵</a></li><li><a href="https://www.luogu.com.cn/problem/P5347">P5347 【XR-1】俄罗斯方块</a></li></ul><h2 id="Part-5-字符串"><a href="#Part-5-字符串" class="headerlink" title="Part 5 字符串"></a>Part 5 字符串</h2><blockquote><p>字符串问题有很多自己的特点。</p></blockquote><h3 id="Part-5-1-字符串哈希"><a href="#Part-5-1-字符串哈希" class="headerlink" title="Part 5.1 字符串哈希"></a>Part 5.1 字符串哈希</h3><blockquote><p>字符串哈希通过牺牲很小的准确率，达到快速进行字符串匹配的效果。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3370">P3370 【模板】字符串哈希</a></li><li><a href="https://www.luogu.com.cn/problem/P5270">P5270 无论怎样神树大人都会删库跑路</a></li><li><a href="https://www.luogu.com.cn/problem/P5537">P5537 【XR-3】系统设计</a></li></ul><h3 id="Part-5-2-KMP"><a href="#Part-5-2-KMP" class="headerlink" title="Part 5.2 KMP"></a>Part 5.2 KMP</h3><blockquote><p>KMP 算法可以用来解决模式串匹配问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3375">P3375 【模板】KMP字符串匹配</a></li><li><a href="https://www.luogu.com.cn/problem/P4391">P4391 [BOI2009]Radio Transmission</a></li><li><a href="https://www.luogu.com.cn/problem/P3435">P3435 [POI2006]OKR-Periods of Words</a></li><li><a href="https://www.luogu.com.cn/problem/P4824">P4824 [USACO15FEB]Censoring (Silver)</a></li><li><a href="https://www.luogu.com.cn/problem/P2375">P2375 [NOI2014]动物园</a></li><li><a href="https://www.luogu.com.cn/problem/P3426">P3426 [POI2005]SZA-Template</a></li><li><a href="https://www.luogu.com.cn/problem/P3193">P3193 [HNOI2008]GT考试</a></li></ul><h3 id="Part-5-3-Manacher"><a href="#Part-5-3-Manacher" class="headerlink" title="Part 5.3 Manacher"></a>Part 5.3 Manacher</h3><blockquote><p>Manacher 可以在线性时间内求出一个字符串的最长回文子串。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3805">P3805 【模板】manacher算法</a></li><li><a href="https://www.luogu.com.cn/problem/P4555">P4555 [国家集训队]最长双回文串</a></li><li><a href="https://www.luogu.com.cn/problem/P1659">P1659 [国家集训队]拉拉队排练</a></li></ul><h3 id="Part-5-4-Trie树"><a href="#Part-5-4-Trie树" class="headerlink" title="Part 5.4 Trie树"></a>Part 5.4 Trie树</h3><blockquote><p>Trie树可以像查字典一样把多个字符串组织到一棵树上。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3879">P3879 [TJOI2010]阅读理解</a></li><li><a href="https://www.luogu.com.cn/problem/P2292">P2292 [HNOI2004]L语言</a></li><li><a href="https://www.luogu.com.cn/problem/P2922">P2922 [USACO08DEC]Secret Message</a></li><li><a href="https://www.luogu.com.cn/problem/P3065">P3065 [USACO12DEC]First!</a></li><li><a href="https://www.luogu.com.cn/problem/P3294">P3294 [SCOI2016]背单词</a></li><li><a href="https://www.luogu.com.cn/problem/P4407">P4407 [JSOI2009]电子字典</a></li><li><a href="https://www.luogu.com.cn/problem/P4551">P4551 最长异或路径</a></li><li><a href="https://www.luogu.com.cn/problem/P4683">P4683 [IOI2008]Type Printer</a></li><li><a href="https://www.luogu.com.cn/problem/P3783">P3783 [SDOI2017]天才黑客</a></li></ul><h3 id="Part-5-5-AC自动机"><a href="#Part-5-5-AC自动机" class="headerlink" title="Part 5.5 AC自动机"></a>Part 5.5 AC自动机</h3><blockquote><p>AC自动机可以看成是 KMP 和 Trie 的结合体，用于解决多字符串匹配问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3808">P3808 【模板】AC自动机（简单版）</a></li><li><a href="https://www.luogu.com.cn/problem/P3796">P3796 【模板】AC自动机（加强版）</a></li><li><a href="https://www.luogu.com.cn/problem/P5357">P5357 【模板】AC自动机（二次加强版）</a></li><li><a href="https://www.luogu.com.cn/problem/P3121">P3121 [USACO15FEB]Censoring (Gold)</a></li><li><a href="https://www.luogu.com.cn/problem/P2414">P2414 [NOI2011]阿狸的打字机</a></li><li><a href="https://www.luogu.com.cn/problem/P3966">P3966 [TJOI2013]单词</a></li><li><a href="https://www.luogu.com.cn/problem/P2444">P2444 [POI2000]病毒</a></li><li><a href="https://www.luogu.com.cn/problem/P3311">P3311 [SDOI2014]数数</a></li><li><a href="https://www.luogu.com.cn/problem/P4052">P4052 [JSOI2007]文本生成器</a></li><li><a href="https://www.luogu.com.cn/problem/P5599">P5599 【XR-4】文本编辑器</a></li></ul><h3 id="Part-5-6-回文自动机"><a href="#Part-5-6-回文自动机" class="headerlink" title="Part 5.6 回文自动机"></a>Part 5.6 回文自动机</h3><blockquote><p>回文自动机是解决回文串问题的有力工具。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5496">P5496 【模板】回文自动机（PAM）</a></li><li><a href="https://www.luogu.com.cn/problem/P3649">P3649 [APIO2014]回文串</a></li><li><a href="https://www.luogu.com.cn/problem/solution/P4287">P4287 [SHOI2011]双倍回文</a></li><li><a href="https://www.luogu.com.cn/problem/P4762">P4762 [CERC2014]Virus synthesis</a></li></ul><h3 id="Part-5-7-后缀数组"><a href="#Part-5-7-后缀数组" class="headerlink" title="Part 5.7 后缀数组"></a>Part 5.7 后缀数组</h3><blockquote><p>后缀数组可以解决很多字符串匹配的问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3809">P3809 【模板】后缀排序</a></li><li><a href="https://www.luogu.com.cn/problem/P5353">P5353 【模板】树上后缀排序</a></li><li><a href="https://www.luogu.com.cn/problem/P2336">P2336 [SCOI2012]喵星球上的点名</a></li><li><a href="https://www.luogu.com.cn/problem/P2463">P2463 [SDOI2008]Sandy的卡片</a></li><li><a href="https://www.luogu.com.cn/problem/P2852">P2852 [USACO06DEC]Milk Patterns</a></li><li><a href="https://www.luogu.com.cn/problem/P4051">P4051 [JSOI2007]字符加密</a></li><li><a href="https://www.luogu.com.cn/problem/P1117">P1117 [NOI2016]优秀的拆分</a></li><li><a href="https://www.luogu.com.cn/problem/P2178">P2178 [NOI2015]品酒大会</a></li><li><a href="https://www.luogu.com.cn/problem/P5346">P5346 【XR-1】柯南家族</a></li><li><a href="https://www.luogu.com.cn/problem/P5576">P5576 [CmdOI2019]口头禅</a></li></ul><h3 id="Part-5-8-后缀自动机"><a href="#Part-5-8-后缀自动机" class="headerlink" title="Part 5.8 后缀自动机"></a>Part 5.8 后缀自动机</h3><blockquote><p>后缀自动机是一种处理字符串问题的强大工具。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3804">P3804 【模板】后缀自动机</a></li><li><a href="https://www.luogu.com.cn/problem/P3649">P3649 [APIO2014]回文串</a></li><li><a href="https://www.luogu.com.cn/problem/P3975">P3975 [TJOI2015]弦论</a></li><li><a href="https://www.luogu.com.cn/problem/P4248">P4248 [AHOI2013]差异</a></li><li><a href="https://www.luogu.com.cn/problem/P5341">P5341 [TJOI2019]甲苯先生和大中锋的字符串</a></li><li><a href="https://www.luogu.com.cn/problem/P4770">P4770 [NOI2018]你的名字</a></li><li><a href="https://www.luogu.com.cn/problem/P5284">P5284 [十二省联考2019]字符串问题</a></li><li><a href="https://www.luogu.com.cn/problem/P5319">P5319 [BJOI2019]奥术神杖</a></li></ul><h2 id="Part-6-数学"><a href="#Part-6-数学" class="headerlink" title="Part 6 数学"></a>Part 6 数学</h2><blockquote><p>OI 中的数学知识很多，也有些杂乱。</p></blockquote><h3 id="Part-6-1-位运算"><a href="#Part-6-1-位运算" class="headerlink" title="Part 6.1 位运算"></a>Part 6.1 位运算</h3><blockquote><p>将十进制整数转换为二进制后，有很多按位运算的运算符。</p><p>如果能善于利用位运算的一些性质，往往能达到事半功倍的效果。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5657">P5657 格雷码</a></li><li><a href="https://www.luogu.com.cn/problem/P5514">P5514 [MtOI2019]永夜的报应</a></li><li><a href="https://www.luogu.com.cn/problem/P5538">P5538 【XR-3】Namid[A]me</a></li><li><a href="https://www.luogu.com.cn/problem/P5539">P5539 【XR-3】Unknown Mother-Goose</a></li><li><a href="https://www.luogu.com.cn/problem/P5523">P5523 [yLOI2019]珍珠</a></li></ul><h3 id="Part-6-2-整除相关"><a href="#Part-6-2-整除相关" class="headerlink" title="Part 6.2 整除相关"></a>Part 6.2 整除相关</h3><blockquote><p>与整除相关的概念有很多，比较常用的有素数，最大公约数和欧拉函数。</p></blockquote><h4 id="Part-6-2-1-素数"><a href="#Part-6-2-1-素数" class="headerlink" title="Part 6.2.1 素数"></a>Part 6.2.1 素数</h4><blockquote><p>素数，指的是除 1 和它本身之外没有其他约数的数。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4718">P4718 【模板】Pollard-Rho算法</a></li><li><a href="https://www.luogu.com.cn/problem/P1075">P1075 质因数分解</a></li><li><a href="https://www.luogu.com.cn/problem/P2441">P2441 角色属性树</a></li><li><a href="https://www.luogu.com.cn/problem/P5535">P5535 【XR-3】小道消息</a></li></ul><h4 id="Part-6-2-2-最大公约数"><a href="#Part-6-2-2-最大公约数" class="headerlink" title="Part 6.2.2 最大公约数"></a>Part 6.2.2 最大公约数</h4><blockquote><p>如果两个数有一个共同的约数，那么这个约数就被称为公约数。最大公约数就是指这两个数的所有公约数中，最大的一个。</p><p>求解两个数的最大公约数，可以采用欧几里得算法解决。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5435">P5435 【模板】快速 GCD</a></li><li><a href="https://www.luogu.com.cn/problem/P5436">P5436 【XR-2】缘分</a></li><li><a href="https://www.luogu.com.cn/problem/P1029">P1029 最大公约数和最小公倍数问题</a></li><li><a href="https://www.luogu.com.cn/problem/P1414">P1414 又是毕业季II</a></li><li><a href="https://www.luogu.com.cn/problem/P2152">P2152 [SDOI2009]SuperGCD</a></li><li><a href="https://www.luogu.com.cn/problem/P1072">P1072 Hankson 的趣味题</a></li></ul><h4 id="Part-6-2-3-欧拉函数"><a href="#Part-6-2-3-欧拉函数" class="headerlink" title="Part 6.2.3 欧拉函数"></a>Part 6.2.3 欧拉函数</h4><blockquote><p>欧拉函数 $ \varphi (x) $ 表示了小于 $ x $ 的数字中，与 $ x $ 互质的数字个数。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2158">P2158 [SDOI2008]仪仗队</a></li><li><a href="https://www.luogu.com.cn/problem/P2568">P2568 GCD</a></li><li><a href="https://www.luogu.com.cn/problem/P2398">P2398 GCD SUM</a></li><li><a href="https://www.luogu.com.cn/problem/P4139">P4139 上帝与集合的正确用法</a></li></ul><h3 id="Part-6-3-同余方程"><a href="#Part-6-3-同余方程" class="headerlink" title="Part 6.3 同余方程"></a>Part 6.3 同余方程</h3><blockquote><p>求解同余方程往往可以引出不少话题。</p></blockquote><h4 id="Part-6-3-1-线性同余方程-乘法逆元"><a href="#Part-6-3-1-线性同余方程-乘法逆元" class="headerlink" title="Part 6.3.1 线性同余方程&amp;乘法逆元"></a>Part 6.3.1 线性同余方程&amp;乘法逆元</h4><blockquote><p>线性同余方程是同余方程中最基础的内容。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4549">P4549 【模板】裴蜀定理</a></li><li><a href="https://www.luogu.com.cn/problem/P2613">P2613 【模板】有理数取余</a></li><li><a href="https://www.luogu.com.cn/problem/P3811">P3811 【模板】乘法逆元</a></li><li><a href="https://www.luogu.com.cn/problem/P5431">P5431 【模板】乘法逆元2</a></li><li><a href="https://www.luogu.com.cn/problem/P1082">P1082 同余方程</a></li><li><a href="https://www.luogu.com.cn/problem/P3951">P3951 小凯的疑惑</a></li><li><a href="https://www.luogu.com.cn/problem/P1516">P1516 青蛙的约会</a></li></ul><h4 id="Part-6-3-2-中国剩余定理"><a href="#Part-6-3-2-中国剩余定理" class="headerlink" title="Part 6.3.2 中国剩余定理"></a>Part 6.3.2 中国剩余定理</h4><blockquote><p>中国剩余定理可以快速解一元线性同余方程组。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4777">P4777 【模板】扩展中国剩余定理（EXCRT）</a></li><li><a href="https://www.luogu.com.cn/problem/P3868">P3868 [TJOI2009]猜数字</a></li><li><a href="https://www.luogu.com.cn/problem/P2480">P2480 [SDOI2010]古代猪文</a></li><li><a href="https://www.luogu.com.cn/problem/P4774">P4774 [NOI2018]屠龙勇士</a></li><li><a href="https://www.luogu.com.cn/problem/P5345">P5345 【XR-1】快乐肥宅</a></li></ul><h4 id="Part-6-3-3-高次同余方程"><a href="#Part-6-3-3-高次同余方程" class="headerlink" title="Part 6.3.3 高次同余方程"></a>Part 6.3.3 高次同余方程</h4><blockquote><p>BSGS 算法可以高效计算离散对数。</p><p>而高次剩余的求解更加复杂，其中二次剩余作为高次剩余中比较特殊的情况，可以使用 Cipolla 法求解。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4195">P4195 【模板】exBSGS</a></li><li><a href="https://www.luogu.com.cn/problem/P5491">P5491 【模板】二次剩余</a></li><li><a href="https://www.luogu.com.cn/problem/P3306">P3306 [SDOI2013]随机数生成器</a></li><li><a href="https://www.luogu.com.cn/problem/P2485">P2485 [SDOI2011]计算器</a></li></ul><h3 id="Part-6-4-博弈论"><a href="#Part-6-4-博弈论" class="headerlink" title="Part 6.4 博弈论"></a>Part 6.4 博弈论</h3><blockquote><p>博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2197">P2197 【模板】nim游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P1288">P1288 取数游戏II</a></li><li><a href="https://www.luogu.com.cn/problem/P1290">P1290 欧几里德的游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P1247">P1247 取火柴游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P2252">P2252 取石子游戏</a></li></ul><h3 id="Part-6-5-概率与期望"><a href="#Part-6-5-概率与期望" class="headerlink" title="Part 6.5 概率与期望"></a>Part 6.5 概率与期望</h3><blockquote><p>概率和期望是紧密相连的，OI 中往往会出现和概率期望相关的动态规划问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5104">P5104 红包发红包</a></li><li><a href="https://www.luogu.com.cn/problem/P1850">P1850 换教室</a></li><li><a href="https://www.luogu.com.cn/problem/P3830">P3830 [SHOI2012]随机树</a></li><li><a href="https://www.luogu.com.cn/problem/P4564">P4564 [CTSC2018]假面</a></li><li><a href="https://www.luogu.com.cn/problem/P2473">P2473 [SCOI2008]奖励关</a></li><li><a href="https://www.luogu.com.cn/problem/P2221">P2221 [HAOI2012]高速公路</a></li><li><a href="https://www.luogu.com.cn/problem/P3239">P3239 [HNOI2015]亚瑟王</a></li><li><a href="https://www.luogu.com.cn/problem/P3750">P3750 [六省联考2017]分手是祝愿</a></li><li><a href="https://www.luogu.com.cn/problem/P4284">P4284 [SHOI2014]概率充电器</a></li><li><a href="https://www.luogu.com.cn/problem/P5249">P5249 [LnOI2019]加特林轮盘赌</a></li><li><a href="https://www.luogu.com.cn/problem/P2081">P2081 [NOI2012]迷失游乐园</a></li><li><a href="https://www.luogu.com.cn/problem/P3343">P3343 [ZJOI2015]地震后的幻想乡</a></li><li><a href="https://www.luogu.com.cn/problem/P3600">P3600 随机数生成器</a></li><li><a href="https://www.luogu.com.cn/problem/P5326">P5326 [ZJOI2019]开关</a></li></ul><h3 id="Part-6-6-组合数学"><a href="#Part-6-6-组合数学" class="headerlink" title="Part 6.6 组合数学"></a>Part 6.6 组合数学</h3><blockquote><p>组合数学常常与计数问题，概率期望紧密相连。</p></blockquote><h4 id="Part-6-6-1-排列组合"><a href="#Part-6-6-1-排列组合" class="headerlink" title="Part 6.6.1 排列组合"></a>Part 6.6.1 排列组合</h4><blockquote><p>排列组合是组合数学的基础。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3807">P3807 【模板】卢卡斯定理</a></li><li><a href="https://www.luogu.com.cn/problem/P2822">P2822 组合数问题</a></li><li><a href="https://www.luogu.com.cn/problem/P5520">P5520 [yLOI2019]青原樱</a></li><li><a href="https://www.luogu.com.cn/problem/P3197">P3197 [HNOI2008]越狱</a></li><li><a href="https://www.luogu.com.cn/problem/P2290">P2290 [HNOI2004]树的计数</a></li><li><a href="https://www.luogu.com.cn/problem/P4981">P4981 父子</a></li><li><a href="https://www.luogu.com.cn/problem/P4769">P4769 [NOI2018]冒泡排序</a></li><li><a href="https://www.luogu.com.cn/problem/P4931">P4931 情侣？给我烧了！（加强版）</a></li><li><a href="https://www.luogu.com.cn/problem/P5596">P5596 【XR-4】题</a></li><li><a href="https://www.luogu.com.cn/problem/P5598">P5598 【XR-4】混乱度</a></li></ul><h4 id="Part-6-6-2-卡特兰数-斯特林数"><a href="#Part-6-6-2-卡特兰数-斯特林数" class="headerlink" title="Part 6.6.2 卡特兰数&amp;斯特林数"></a>Part 6.6.2 卡特兰数&amp;斯特林数</h4><blockquote><p>卡特兰数和斯特林数是两类常见的组合递推数列。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5395">P5395 第二类斯特林数·行</a></li><li><a href="https://www.luogu.com.cn/problem/P5396">P5396 第二类斯特林数·列</a></li><li><a href="https://www.luogu.com.cn/problem/P5408">P5408 第一类斯特林数·行</a></li><li><a href="https://www.luogu.com.cn/problem/P5409">P5409 第一类斯特林数·列</a></li><li><a href="https://www.luogu.com.cn/problem/P1655">P1655 小朋友的球</a></li><li><a href="https://www.luogu.com.cn/problem/P2532">P2532 [AHOI2012]树屋阶梯</a></li><li><a href="https://www.luogu.com.cn/problem/P3200">P3200 [HNOI2009]有趣的数列</a></li><li><a href="https://www.luogu.com.cn/problem/P3978">P3978 [TJOI2015]概率论</a></li><li><a href="https://www.luogu.com.cn/problem/P4091">P4091 [HEOI2016/TJOI2016]求和</a></li><li><a href="https://www.luogu.com.cn/problem/P4827">P4827 [国家集训队]Crash 的文明世界</a></li></ul><h4 id="Part-6-6-3-容斥原理"><a href="#Part-6-6-3-容斥原理" class="headerlink" title="Part 6.6.3 容斥原理"></a>Part 6.6.3 容斥原理</h4><blockquote><p>容斥原理常常用于解决集合的计数问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5664">P5664 Emiya 家今天的饭</a></li><li><a href="https://www.luogu.com.cn/problem/P1450">P1450 [HAOI2008]硬币购物</a></li><li><a href="https://www.luogu.com.cn/problem/P3214">P3214 [HNOI2011]卡农</a></li><li><a href="https://www.luogu.com.cn/problem/P3270">P3270 [JLOI2016]成绩比较</a></li><li><a href="https://www.luogu.com.cn/problem/P4336">P4336 [SHOI2016]黑暗前的幻想乡</a></li><li><a href="https://www.luogu.com.cn/problem/P4448">P4448 [AHOI2018初中组]球球的排列</a></li><li><a href="https://www.luogu.com.cn/problem/P4491">P4491 [HAOI2018]染色</a></li><li><a href="https://www.luogu.com.cn/problem/P5339">P5339 [TJOI2019]唱、跳、rap和篮球</a></li><li><a href="https://www.luogu.com.cn/problem/P5400">P5400 [CTS2019]随机立方体</a></li></ul><h3 id="Part-6-7-线性代数"><a href="#Part-6-7-线性代数" class="headerlink" title="Part 6.7 线性代数"></a>Part 6.7 线性代数</h3><blockquote><p>线性代数主要用于解决线性关系问题。</p></blockquote><h4 id="Part-6-7-1-矩阵"><a href="#Part-6-7-1-矩阵" class="headerlink" title="Part 6.7.1 矩阵"></a>Part 6.7.1 矩阵</h4><blockquote><p>利用矩阵优化数列递推，可以实现复杂度从线性到对数级的转变。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3390">P3390 【模板】矩阵快速幂</a></li><li><a href="https://www.luogu.com.cn/problem/P1939">P1939 【模板】矩阵加速（数列）</a></li><li><a href="https://www.luogu.com.cn/problem/P4783">P4783 【模板】矩阵求逆</a></li><li><a href="https://www.luogu.com.cn/problem/P1962">P1962 斐波那契数列</a></li><li><a href="https://www.luogu.com.cn/problem/P1349">P1349 广义斐波那契数列</a></li><li><a href="https://www.luogu.com.cn/problem/P4000">P4000 斐波那契数列</a></li><li><a href="https://www.luogu.com.cn/problem/P3758">P3758 [TJOI2017]可乐</a></li><li><a href="https://www.luogu.com.cn/problem/P4967">P4967 黑暗打击</a></li><li><a href="https://www.luogu.com.cn/problem/P5343">P5343 【XR-1】分块</a></li><li><a href="https://www.luogu.com.cn/problem/P5337">P5337 [TJOI2019]甲苯先生的字符串</a></li><li><a href="https://www.luogu.com.cn/problem/P5303">P5303 [GXOI/GZOI2019]逼死强迫症</a></li></ul><h4 id="Part-6-7-2-高斯消元"><a href="#Part-6-7-2-高斯消元" class="headerlink" title="Part 6.7.2 高斯消元"></a>Part 6.7.2 高斯消元</h4><blockquote><p>高斯消元可以用来求解方程组。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3389">P3389 【模板】高斯消元法</a></li><li><a href="https://www.luogu.com.cn/problem/P2447">P2447 [SDOI2010]外星千足虫</a></li><li><a href="https://www.luogu.com.cn/problem/P4035">P4035 [JSOI2008]球形空间产生器</a></li><li><a href="https://www.luogu.com.cn/problem/P5516">P5516 [MtOI2019]小铃的烦恼</a></li><li><a href="https://www.luogu.com.cn/problem/P4111">P4111 [HEOI2015]小Z的房间</a></li><li><a href="https://www.luogu.com.cn/problem/P4457">P4457 [BJOI2018]治疗之雨</a></li></ul><h4 id="Part-6-7-3-线性基"><a href="#Part-6-7-3-线性基" class="headerlink" title="Part 6.7.3 线性基"></a>Part 6.7.3 线性基</h4><blockquote><p>线性基可以求解最大异或和的一类问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3812">P3812 【模板】线性基</a></li><li><a href="https://www.luogu.com.cn/problem/P3857">P3857 [TJOI2008]彩灯</a></li><li><a href="https://www.luogu.com.cn/problem/P4570">P4570 [BJWC2011]元素</a></li><li><a href="https://www.luogu.com.cn/problem/P4301">P4301 [CQOI2013]新Nim游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P3292">P3292 [SCOI2016]幸运数字</a></li><li><a href="https://www.luogu.com.cn/problem/P4151">P4151 [WC2011]最大XOR和路径</a></li></ul><h3 id="Part-6-8-多项式"><a href="#Part-6-8-多项式" class="headerlink" title="Part 6.8 多项式"></a>Part 6.8 多项式</h3><blockquote><p>对多项式的运算进行优化，从而能够解决规模更大的问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3803">P3803 【模板】多项式乘法（FFT）</a></li><li><a href="https://www.luogu.com.cn/problem/P4238">P4238 【模板】多项式求逆</a></li><li><a href="https://www.luogu.com.cn/problem/P4245">P4245 【模板】任意模数NTT</a></li><li><a href="https://www.luogu.com.cn/problem/P4512">P4512 【模板】多项式除法</a></li><li><a href="https://www.luogu.com.cn/problem/P4717">P4717 【模板】快速沃尔什变换</a></li><li><a href="https://www.luogu.com.cn/problem/P4721">P4721 【模板】分治 FFT</a></li><li><a href="https://www.luogu.com.cn/problem/P4725">P4725 【模板】多项式对数函数</a></li><li><a href="https://www.luogu.com.cn/problem/P4726">P4726 【模板】多项式指数函数</a></li><li><a href="https://www.luogu.com.cn/problem/P4781">P4781 【模板】拉格朗日插值</a></li><li><a href="https://www.luogu.com.cn/problem/P5050">P5050 【模板】多项式多点求值</a></li><li><a href="https://www.luogu.com.cn/problem/P5158">P5158 【模板】多项式快速插值</a></li><li><a href="https://www.luogu.com.cn/problem/P5205">P5205 【模板】多项式开根</a></li><li><a href="https://www.luogu.com.cn/problem/P5245">P5245 【模板】多项式快速幂</a></li><li><a href="https://www.luogu.com.cn/problem/P5273">P5273 【模板】多项式幂函数 (加强版)</a></li><li><a href="https://www.luogu.com.cn/problem/P5282">P5282 【模板】快速阶乘算法</a></li><li><a href="https://www.luogu.com.cn/problem/P5373">P5373 【模板】多项式复合函数</a></li><li><a href="https://www.luogu.com.cn/problem/P5394">P5394 【模板】下降幂多项式乘法</a></li><li><a href="https://www.luogu.com.cn/problem/P3338">P3338 [ZJOI2014]力</a></li><li><a href="https://www.luogu.com.cn/problem/P3723">P3723 [AH2017/HNOI2017]礼物</a></li><li><a href="https://www.luogu.com.cn/problem/P5437">P5437 【XR-2】约定</a></li><li><a href="https://www.luogu.com.cn/problem/P5293">P5293 [HNOI2019]白兔之舞</a></li><li><a href="https://www.luogu.com.cn/problem/P5432">P5432 A/B Problem (加强版)</a></li><li><a href="https://www.luogu.com.cn/problem/P5472">P5472 [NOI2019]斗主地</a></li><li><a href="https://www.luogu.com.cn/problem/P5577">P5577 [CmdOI2019]算力训练</a></li></ul><h3 id="Part-6-9-莫比乌斯反演"><a href="#Part-6-9-莫比乌斯反演" class="headerlink" title="Part 6.9 莫比乌斯反演"></a>Part 6.9 莫比乌斯反演</h3><blockquote><p>运用莫比乌斯反演，我们可以将一些函数转化，从而降低计算难度。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3172">P3172 [CQOI2015]选数</a></li><li><a href="https://www.luogu.com.cn/problem/P2522">P2522 [HAOI2011]Problem b</a></li><li><a href="https://www.luogu.com.cn/problem/P3455">P3455 [POI2007]ZAP-Queries</a></li><li><a href="https://www.luogu.com.cn/problem/P3327">P3327 [SDOI2015]约数个数和</a></li><li><a href="https://www.luogu.com.cn/problem/P1829">P1829 [国家集训队]Crash的数字表格 / JZPTAB</a></li><li><a href="https://www.luogu.com.cn/problem/P4619">P4619 [SDOI2018]旧试题</a></li><li><a href="https://www.luogu.com.cn/problem/P3704">P3704 [SDOI2017]数字表格</a></li><li><a href="https://www.luogu.com.cn/problem/P5518">P5518 [MtOI2019]幽灵乐团</a></li></ul><h3 id="Part-6-10-筛法"><a href="#Part-6-10-筛法" class="headerlink" title="Part 6.10 筛法"></a>Part 6.10 筛法</h3><blockquote><p>利用数列的性质，有多种筛法可以求出我们想要的信息。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3383">P3383 【模板】线性筛素数</a></li><li><a href="https://www.luogu.com.cn/problem/P4213">P4213 【模板】杜教筛（Sum）</a></li><li><a href="https://www.luogu.com.cn/problem/P5325">P5325 【模板】Min_25筛</a></li><li><a href="https://www.luogu.com.cn/problem/P1865">P1865 A % B Problem</a></li><li><a href="https://www.luogu.com.cn/problem/P1621">P1621 集合</a></li><li><a href="https://www.luogu.com.cn/problem/P3768">P3768 简单的数学题</a></li><li><a href="https://www.luogu.com.cn/problem/P5438">P5438 【XR-2】记忆</a></li></ul><h3 id="Part-6-11-线性规划"><a href="#Part-6-11-线性规划" class="headerlink" title="Part 6.11 线性规划"></a>Part 6.11 线性规划</h3><blockquote><p>线性规划是研究线性约束条件下线性目标函数极值问题的方法。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3980">P3980 [NOI2008]志愿者招募</a></li><li><a href="https://www.luogu.com.cn/problem/P4232">P4232 无意识之外的捉迷藏</a></li></ul><h3 id="Part-6-12-数值方法"><a href="#Part-6-12-数值方法" class="headerlink" title="Part 6.12 数值方法"></a>Part 6.12 数值方法</h3><blockquote><p>在算法领域，有很多求近似值的数值方法。</p></blockquote><h4 id="Part-6-12-1-三分法"><a href="#Part-6-12-1-三分法" class="headerlink" title="Part 6.12.1 三分法"></a>Part 6.12.1 三分法</h4><blockquote><p>三分法可以求出一个单峰 / 单谷函数的极值。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3382">P3382 【模板】三分法</a></li><li><a href="https://www.luogu.com.cn/problem/P1883">P1883 函数</a></li></ul><h4 id="Part-6-12-2-自适应辛普森法"><a href="#Part-6-12-2-自适应辛普森法" class="headerlink" title="Part 6.12.2 自适应辛普森法"></a>Part 6.12.2 自适应辛普森法</h4><blockquote><p>自适应辛普森法可以高效求出给定函数的数值积分。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4525">P4525 【模板】自适应辛普森法1</a></li><li><a href="https://www.luogu.com.cn/problem/P4526">P4526 【模板】自适应辛普森法2</a></li><li><a href="https://www.luogu.com.cn/problem/P3779">P3779 [SDOI2017]龙与地下城</a></li></ul><h3 id="Part-6-13-置换群"><a href="#Part-6-13-置换群" class="headerlink" title="Part 6.13 置换群"></a>Part 6.13 置换群</h3><blockquote><p>置换群通常用来解决一些涉及“本质不同”的计数问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4980">P4980 【模板】Polya定理</a></li><li><a href="https://www.luogu.com.cn/problem/P1446">P1446 [HNOI2008]Cards</a></li><li><a href="https://www.luogu.com.cn/problem/P2561">P2561 [AHOI2002]黑白瓷砖</a></li><li><a href="https://www.luogu.com.cn/problem/P4128">P4128 [SHOI2006]有色图</a></li><li><a href="https://www.luogu.com.cn/problem/P4727">P4727 [HNOI2009]图的同构记数</a></li></ul><h2 id="Part-7-数据结构"><a href="#Part-7-数据结构" class="headerlink" title="Part 7 数据结构"></a>Part 7 数据结构</h2><blockquote><p>灵活地运用数据结构可以高效地查询并处理需要的信息。</p></blockquote><h3 id="Part-7-1-链表"><a href="#Part-7-1-链表" class="headerlink" title="Part 7.1 链表"></a>Part 7.1 链表</h3><blockquote><p>在一个数列中高效插入一个元素，链表毫无疑问是最好的选择。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1996">P1996 约瑟夫问题</a></li><li><a href="https://www.luogu.com.cn/problem/P1160">P1160 队列安排</a></li></ul><h3 id="Part-7-2-栈"><a href="#Part-7-2-栈" class="headerlink" title="Part 7.2 栈"></a>Part 7.2 栈</h3><blockquote><p>栈，是一种后进先出（FILO）的数据结构。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1449">P1449 后缀表达式</a></li><li><a href="https://www.luogu.com.cn/problem/P1739">P1739 表达式括号匹配</a></li><li><a href="https://www.luogu.com.cn/problem/P1981">P1981 表达式求值</a></li><li><a href="https://www.luogu.com.cn/problem/P1175">P1175 表达式的转换</a></li></ul><h3 id="Part-7-3-队列"><a href="#Part-7-3-队列" class="headerlink" title="Part 7.3 队列"></a>Part 7.3 队列</h3><blockquote><p>队列，是一种先进先出（FIFO）的数据结构。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1540">P1540 机器翻译</a></li></ul><h3 id="Part-7-4-并查集"><a href="#Part-7-4-并查集" class="headerlink" title="Part 7.4 并查集"></a>Part 7.4 并查集</h3><blockquote><p>并查集常用于处理一些不相交集合的合并和查询问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1111">P1111 修复公路</a></li><li><a href="https://www.luogu.com.cn/problem/P3958">P3958 奶酪</a></li><li><a href="https://www.luogu.com.cn/problem/P1525">P1525 关押罪犯</a></li><li><a href="https://www.luogu.com.cn/problem/P4185">P4185 [USACO18JAN]MooTube G</a></li><li><a href="https://www.luogu.com.cn/problem/P2024">P2024 [NOI2001]食物链</a></li><li><a href="https://www.luogu.com.cn/problem/P1197">P1197 [JSOI2008]星球大战</a></li><li><a href="https://www.luogu.com.cn/problem/P1196">P1196 [NOI2002]银河英雄传说</a></li><li><a href="https://www.luogu.com.cn/problem/P1955">P1955 [NOI2015]程序自动分析</a></li></ul><h3 id="Part-7-5-二叉堆"><a href="#Part-7-5-二叉堆" class="headerlink" title="Part 7.5 二叉堆"></a>Part 7.5 二叉堆</h3><blockquote><p>二叉堆是一棵完全二叉树，堆中某个节点的值总是不大于或不小于其父节点的值。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3378">P3378 【模板】堆</a></li><li><a href="https://www.luogu.com.cn/problem/P1090">P1090 合并果子</a></li><li><a href="https://www.luogu.com.cn/problem/P1168">P1168 中位数</a></li><li><a href="https://www.luogu.com.cn/problem/P2085">P2085 最小函数值</a></li><li><a href="https://www.luogu.com.cn/problem/P2827">P2827 蚯蚓</a></li><li><a href="https://www.luogu.com.cn/problem/P3045">P3045 [USACO12FEB]Cow Coupons</a></li></ul><h3 id="Part-7-6-ST表"><a href="#Part-7-6-ST表" class="headerlink" title="Part 7.6 ST表"></a>Part 7.6 ST表</h3><blockquote><p>ST表可以离线查询区间最值。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3865">P3865 【模板】ST表</a></li><li><a href="https://www.luogu.com.cn/problem/P2251">P2251 质量检测</a></li><li><a href="https://www.luogu.com.cn/problem/P1816">P1816 忠诚</a></li><li><a href="https://www.luogu.com.cn/problem/P1198">P1198 [JSOI2008]最大数</a></li><li><a href="https://www.luogu.com.cn/problem/P2880">P2880 [USACO07JAN]Balanced Lineup</a></li><li><a href="https://www.luogu.com.cn/problem/P5012">P5012 水の数列</a></li><li><a href="https://www.luogu.com.cn/problem/P5344">P5344 【XR-1】逛森林</a></li><li><a href="https://www.luogu.com.cn/problem/P2048">P2048 [NOI2010]超级钢琴</a></li></ul><h3 id="Part-7-7-树状数组"><a href="#Part-7-7-树状数组" class="headerlink" title="Part 7.7 树状数组"></a>Part 7.7 树状数组</h3><blockquote><p>树状数组是一种简洁高效的树形数据结构。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3374">P3374 【模板】树状数组 1</a></li><li><a href="https://www.luogu.com.cn/problem/P3368">P3368 【模板】树状数组 2</a></li><li><a href="https://www.luogu.com.cn/problem/P1908">P1908 逆序对</a></li><li><a href="https://www.luogu.com.cn/problem/P1966">P1966 火柴排队</a></li><li><a href="https://www.luogu.com.cn/problem/P3605">P3605 [USACO17JAN]Promotion Counting</a></li><li><a href="https://www.luogu.com.cn/problem/P1972">P1972 [SDOI2009]HH的项链</a></li><li><a href="https://www.luogu.com.cn/problem/P3586">P3586 [POI2015]LOG</a></li><li><a href="https://www.luogu.com.cn/problem/P4054">P4054 [JSOI2009]计数问题</a></li><li><a href="https://www.luogu.com.cn/problem/P4113">P4113 [HEOI2012]采花</a></li><li><a href="https://www.luogu.com.cn/problem/P3960">P3960 列队</a></li></ul><h3 id="Part-7-8-线段树"><a href="#Part-7-8-线段树" class="headerlink" title="Part 7.8 线段树"></a>Part 7.8 线段树</h3><blockquote><p>线段树的通用性比树状数组更强，可以处理更多涉及区间操作的题目。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3372">P3372 【模板】线段树 1</a></li><li><a href="https://www.luogu.com.cn/problem/P3373">P3373 【模板】线段树 2</a></li><li><a href="https://www.luogu.com.cn/problem/P5490">P5490 【模板】扫描线</a></li><li><a href="https://www.luogu.com.cn/problem/P4588">P4588 [TJOI2018]数学计算</a></li><li><a href="https://www.luogu.com.cn/problem/P1502">P1502 窗口的星星</a></li><li><a href="https://www.luogu.com.cn/problem/P2471">P2471 [SCOI2007]降雨量</a></li><li><a href="https://www.luogu.com.cn/problem/P2824">P2824 [HEOI2016/TJOI2016]排序</a></li><li><a href="https://www.luogu.com.cn/problem/P3722">P3722 [AH2017/HNOI2017]影魔</a></li><li><a href="https://www.luogu.com.cn/problem/P4097">P4097 [HEOI2013]Segment</a></li><li><a href="https://www.luogu.com.cn/problem/P4198">P4198 楼房重建</a></li><li><a href="https://www.luogu.com.cn/problem/P4513">P4513 小白逛公园</a></li><li><a href="https://www.luogu.com.cn/problem/P4556">P4556 [Vani有约会]雨天的尾巴</a></li><li><a href="https://www.luogu.com.cn/problem/P5324">P5324 [BJOI2019]删数</a></li><li><a href="https://www.luogu.com.cn/problem/P5327">P5327 [ZJOI2019]语言</a></li></ul><h3 id="Part-7-9-分块"><a href="#Part-7-9-分块" class="headerlink" title="Part 7.9 分块"></a>Part 7.9 分块</h3><blockquote><p>分块是一种非常通用的暴力方法，虽然效率不如线段树和树状数组，但可以解决很多线段树和树状数组处理不了的问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3870">P3870 [TJOI2009]开关</a></li><li><a href="https://www.luogu.com.cn/problem/P3396">P3396 哈希冲突</a></li><li><a href="https://www.luogu.com.cn/problem/P3863">P3863 序列</a></li><li><a href="https://www.luogu.com.cn/problem/P1975">P1975 [国家集训队]排队</a></li><li><a href="https://www.luogu.com.cn/problem/P3710">P3710 方方方的数据结构</a></li><li><a href="https://www.luogu.com.cn/problem/P3992">P3992 [BJOI2017]开车</a></li><li><a href="https://www.luogu.com.cn/problem/P4168">P4168 [Violet]蒲公英</a></li><li><a href="https://www.luogu.com.cn/problem/P4119">P4119 [Ynoi2018]未来日记</a></li></ul><h3 id="Part-7-10-可并堆"><a href="#Part-7-10-可并堆" class="headerlink" title="Part 7.10 可并堆"></a>Part 7.10 可并堆</h3><blockquote><p>可并堆分为左偏树和配对堆两种，它们都具有堆的性质，且可以高效合并。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3377">P3377 【模板】左偏树（可并堆）</a></li><li><a href="https://www.luogu.com.cn/problem/P2713">P2713 罗马游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P1456">P1456 Monkey King</a></li><li><a href="https://www.luogu.com.cn/problem/P1552">P1552 [APIO2012]派遣</a></li><li><a href="https://www.luogu.com.cn/problem/P3261">P3261 [JLOI2015]城池攻占</a></li><li><a href="https://www.luogu.com.cn/problem/P3273">P3273 [SCOI2011]棘手的操作</a></li><li><a href="https://www.luogu.com.cn/problem/P4331">P4331 [BOI2004]Sequence</a></li></ul><h3 id="Part-7-11-主席树"><a href="#Part-7-11-主席树" class="headerlink" title="Part 7.11 主席树"></a>Part 7.11 主席树</h3><blockquote><p>主席树，即可持久化权值线段树。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2468">P2468 [SDOI2010]粟粟的书架</a></li><li><a href="https://www.luogu.com.cn/problem/P3302">P3302 [SDOI2013]森林</a></li><li><a href="https://www.luogu.com.cn/problem/P3168">P3168 [CQOI2015]任务查询系统</a></li><li><a href="https://www.luogu.com.cn/problem/P4559">P4559 [JSOI2018]列队</a></li><li><a href="https://www.luogu.com.cn/problem/P2633">P2633 Count on a tree</a></li><li><a href="https://www.luogu.com.cn/problem/P3293">P3293 [SCOI2016]美味</a></li><li><a href="https://www.luogu.com.cn/problem/P4618">P4618 [SDOI2018]原题识别</a></li></ul><h3 id="Part-7-12-平衡树"><a href="#Part-7-12-平衡树" class="headerlink" title="Part 7.12 平衡树"></a>Part 7.12 平衡树</h3><blockquote><p>二叉搜索树可以用来维护有序序列。</p><p>为了保证查询效率，有多种使二叉搜索树保持平衡的实现方法。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3369">P3369 【模板】普通平衡树</a></li><li><a href="https://www.luogu.com.cn/problem/P3391">P3391 【模板】文艺平衡树（Splay）</a></li><li><a href="https://www.luogu.com.cn/problem/P3850">P3850 [TJOI2007]书架</a></li><li><a href="https://www.luogu.com.cn/problem/P4008">P4008 [NOI2003]文本编辑器</a></li><li><a href="https://www.luogu.com.cn/problem/P5338">P5338 [TJOI2019]甲苯先生的滚榜</a></li><li><a href="https://www.luogu.com.cn/problem/P2042">P2042 [NOI2005]维护数列</a></li><li><a href="https://www.luogu.com.cn/problem/P1110">P1110 [ZJOI2007]报表统计</a></li><li><a href="https://www.luogu.com.cn/problem/P3644">P3644 [APIO2015]八邻旁之桥</a></li><li><a href="https://www.luogu.com.cn/problem/P1486">P1486 [NOI2004]郁闷的出纳员</a></li><li><a href="https://www.luogu.com.cn/problem/P2710">P2710 数列</a></li><li><a href="https://www.luogu.com.cn/problem/P3224">P3224 [HNOI2012]永无乡</a></li><li><a href="https://www.luogu.com.cn/problem/P3285">P3285 [SCOI2014]方伯伯的OJ</a></li><li><a href="https://www.luogu.com.cn/problem/P5321">P5321 [BJOI2019]送别</a></li></ul><h3 id="Part-7-13-树链剖分"><a href="#Part-7-13-树链剖分" class="headerlink" title="Part 7.13 树链剖分"></a>Part 7.13 树链剖分</h3><blockquote><p>树链剖分可以将任意一条树上路径划分成若干条连续的链，并用线段树等数据结构高效维护链上信息。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3384">P3384 【模板】树链剖分</a></li><li><a href="https://www.luogu.com.cn/problem/P3313">P3313 [SDOI2014]旅行</a></li><li><a href="https://www.luogu.com.cn/problem/P2590">P2590 [ZJOI2008]树的统计</a></li><li><a href="https://www.luogu.com.cn/problem/P1505">P1505 [国家集训队]旅游</a></li><li><a href="https://www.luogu.com.cn/problem/P2486">P2486 [SDOI2011]染色</a></li><li><a href="https://www.luogu.com.cn/problem/P3258">P3258 [JLOI2014]松鼠的新家</a></li><li><a href="https://www.luogu.com.cn/problem/P4069">P4069 [SDOI2016]游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P4211">P4211 [LNOI2014]LCA</a></li><li><a href="https://www.luogu.com.cn/problem/P4592">P4592 [TJOI2018]异或</a></li><li><a href="https://www.luogu.com.cn/problem/P5305">P5305 [GXOI/GZOI2019]旧词</a></li><li><a href="https://www.luogu.com.cn/problem/P5354">P5354 [Ynoi2017]由乃的OJ</a></li><li><a href="https://www.luogu.com.cn/problem/P5499">P5499 [LnOI2019]Abbi并不想研学</a></li></ul><h3 id="Part-7-14-树套树"><a href="#Part-7-14-树套树" class="headerlink" title="Part 7.14 树套树"></a>Part 7.14 树套树</h3><blockquote><p>树套树可以用来维护多维度信息。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3380">P3380 【模板】二逼平衡树（树套树）</a></li><li><a href="https://www.luogu.com.cn/problem/P1975">P1975 [国家集训队]排队</a></li><li><a href="https://www.luogu.com.cn/problem/P3332">P3332 [ZJOI2013]K大数查询</a></li><li><a href="https://www.luogu.com.cn/problem/P4278">P4278 带插入区间K小值</a></li><li><a href="https://www.luogu.com.cn/problem/P1903">P1903 [国家集训队]数颜色 / 维护队列</a></li><li><a href="https://www.luogu.com.cn/problem/P3759">P3759 [TJOI2017]不勤劳的图书管理员</a></li><li><a href="https://www.luogu.com.cn/problem/P3242">P3242 [HNOI2015]接水果</a></li><li><a href="https://www.luogu.com.cn/problem/P3248">P3248 [HNOI2016]树</a></li><li><a href="https://www.luogu.com.cn/problem/P5445">P5445 [APIO2019]路灯</a></li></ul><h3 id="Part-7-15-动态树"><a href="#Part-7-15-动态树" class="headerlink" title="Part 7.15 动态树"></a>Part 7.15 动态树</h3><blockquote><p>Link-Cut Tree 可以用来解决动态树一类问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3690">P3690 【模板】Link Cut Tree （动态树）</a></li><li><a href="https://www.luogu.com.cn/problem/P3203">P3203 [HNOI2010]弹飞绵羊</a></li><li><a href="https://www.luogu.com.cn/problem/P4338">P4338 [ZJOI2018]历史</a></li><li><a href="https://www.luogu.com.cn/problem/P4312">P4312 [COCI2009]OTOCI</a></li><li><a href="https://www.luogu.com.cn/problem/P1501">P1501 [国家集训队]Tree II</a></li><li><a href="https://www.luogu.com.cn/problem/P2387">P2387 [NOI2014]魔法森林</a></li><li><a href="https://www.luogu.com.cn/problem/P3348">P3348 [ZJOI2016]大森林</a></li><li><a href="https://www.luogu.com.cn/problem/P3703">P3703 [SDOI2017]树点涂色</a></li><li><a href="https://www.luogu.com.cn/problem/P4172">P4172 [WC2006]水管局长</a></li><li><a href="https://www.luogu.com.cn/problem/P4219">P4219 [BJOI2014]大融合</a></li><li><a href="https://www.luogu.com.cn/problemnew/solution/P5489">P5489 EntropyIncreaser 与 动态图</a></li></ul><h3 id="Part-7-16-可持久化数据结构"><a href="#Part-7-16-可持久化数据结构" class="headerlink" title="Part 7.16 可持久化数据结构"></a>Part 7.16 可持久化数据结构</h3><blockquote><p>可持久化数据结构实现了在更新信息的时候保留历史版本。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3919">P3919 【模板】可持久化数组（可持久化线段树/平衡树）</a></li><li><a href="https://www.luogu.com.cn/problem/P3834">P3834 【模板】可持久化线段树 1（主席树）</a></li><li><a href="https://www.luogu.com.cn/problem/P3402">P3402 【模板】可持久化并查集</a></li><li><a href="https://www.luogu.com.cn/problem/P3835">P3835 【模板】可持久化平衡树</a></li><li><a href="https://www.luogu.com.cn/problem/P5055">P5055 【模板】可持久化文艺平衡树</a></li><li><a href="https://www.luogu.com.cn/problem/P5283">P5283 [十二省联考2019]异或粽子</a></li></ul><h3 id="Part-7-17-K-D-Tree"><a href="#Part-7-17-K-D-Tree" class="headerlink" title="Part 7.17 K-D Tree"></a>Part 7.17 K-D Tree</h3><blockquote><p>K-D Tree 是一种高效处理 $ k $ 维信息的数据结构。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4357">P4357 [CQOI2016]K远点对</a></li><li><a href="https://www.luogu.com.cn/problem/P4148">P4148 简单题</a></li><li><a href="https://www.luogu.com.cn/problem/P2479">P2479 [SDOI2010]捉迷藏</a></li><li><a href="https://www.luogu.com.cn/problem/P3769">P3769 [CH弱省胡策R2]TATT</a></li><li><a href="https://www.luogu.com.cn/problem/P4169">P4169 [Violet]天使玩偶/SJY摆棋子</a></li><li><a href="https://www.luogu.com.cn/problem/P4390">P4390 [BOI2007]Mokia</a></li><li><a href="https://www.luogu.com.cn/problem/P4475">P4475 巧克力王国</a></li><li><a href="https://www.luogu.com.cn/problem/P2093">P2093 [国家集训队]JZPFAR</a></li><li><a href="https://www.luogu.com.cn/problem/P5471">P5471 [NOI2019]弹跳</a></li></ul><h3 id="Part-7-18-珂朵莉树"><a href="#Part-7-18-珂朵莉树" class="headerlink" title="Part 7.18 珂朵莉树"></a>Part 7.18 珂朵莉树</h3><blockquote><p>珂朵莉树，是一种基于 <code>std::set</code> 的暴力数据结构，在数据随机的情况下表现优秀。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5251">P5251 [LnOI2019]第二代图灵机</a></li><li><a href="https://www.luogu.com.cn/problem/P5350">P5350 序列</a></li></ul><h2 id="Part-8-图论"><a href="#Part-8-图论" class="headerlink" title="Part 8 图论"></a>Part 8 图论</h2><blockquote><p>图论是数学的一个分支，它以图为研究的对象。</p></blockquote><h3 id="Part-8-1-图的存储与遍历"><a href="#Part-8-1-图的存储与遍历" class="headerlink" title="Part 8.1 图的存储与遍历"></a>Part 8.1 图的存储与遍历</h3><blockquote><p>这里的图论内容都比较简单，涉及图的存储以及遍历图的方式。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2661">P2661 信息传递</a></li><li><a href="https://www.luogu.com.cn/problem/P2921">P2921 [USACO08DEC]Trick or Treat on the Farm</a></li></ul><h3 id="Part-8-2-最短路问题"><a href="#Part-8-2-最短路问题" class="headerlink" title="Part 8.2 最短路问题"></a>Part 8.2 最短路问题</h3><blockquote><p>很多题目都可以转化为最短路的模型。因此，掌握最短路算法非常重要。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3371">P3371 【模板】单源最短路径（弱化版）</a></li><li><a href="https://www.luogu.com.cn/problem/P4779">P4779 【模板】单源最短路径（标准版）</a></li><li><a href="https://www.luogu.com.cn/problem/P5905">P5905 【模板】Johnson 全源最短路</a></li><li><a href="https://www.luogu.com.cn/problem/P1144">P1144 最短路计数</a></li><li><a href="https://www.luogu.com.cn/problem/P1462">P1462 通往奥格瑞玛的道路</a></li><li><a href="https://www.luogu.com.cn/problem/P1522">P1522 Cow Tours</a></li><li><a href="https://www.luogu.com.cn/problem/P1266">P1266 速度限制</a></li><li><a href="https://www.luogu.com.cn/problem/P4001">P4001 [ICPC-Beijing 2006]狼抓兔子</a></li><li><a href="https://www.luogu.com.cn/problem/P4568">P4568 [JLOI2011]飞行路线</a></li><li><a href="https://www.luogu.com.cn/problem/P3238">P3238 [HNOI2014]道路堵塞</a></li><li><a href="https://www.luogu.com.cn/problem/P5304">P5304 [GXOI/GZOI2019]旅行者</a></li></ul><h3 id="Part-8-3-树上问题"><a href="#Part-8-3-树上问题" class="headerlink" title="Part 8.3 树上问题"></a>Part 8.3 树上问题</h3><blockquote><p>作为一种特殊的图，树上的问题具有很多鲜明的特点。</p></blockquote><h4 id="Part-8-3-1-二叉树"><a href="#Part-8-3-1-二叉树" class="headerlink" title="Part 8.3.1 二叉树"></a>Part 8.3.1 二叉树</h4><blockquote><p>二叉树是一种特殊的树，它有很多特殊的性质。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1087">P1087 FBI树</a></li><li><a href="https://www.luogu.com.cn/problem/P1030">P1030 求先序排列</a></li><li><a href="https://www.luogu.com.cn/problem/P1305">P1305 新二叉树</a></li><li><a href="https://www.luogu.com.cn/problem/P1229">P1229 遍历问题</a></li><li><a href="https://www.luogu.com.cn/problem/P5018">P5018 对称二叉树</a></li><li><a href="https://www.luogu.com.cn/problem/P5597">P5597 【XR-4】复读</a></li></ul><h4 id="Part-8-3-2-树的直径"><a href="#Part-8-3-2-树的直径" class="headerlink" title="Part 8.3.2 树的直径"></a>Part 8.3.2 树的直径</h4><blockquote><p>树的直径被定义为树上最远的两点间的距离。</p><p>计算树的直径，可以通过两遍 DFS 解决。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2195">P2195 HXY造公园</a></li><li><a href="https://www.luogu.com.cn/problem/P3629">P3629 [APIO2010]巡逻</a></li><li><a href="https://www.luogu.com.cn/problem/P5536">P5536 【XR-3】核心城市</a></li><li><a href="https://www.luogu.com.cn/problem/P1099">P1099 树网的核</a></li><li><a href="https://www.luogu.com.cn/problem/P4408">P4408 [NOI2003]逃学的小孩</a></li></ul><h4 id="Part-8-3-3-最近公共祖先"><a href="#Part-8-3-3-最近公共祖先" class="headerlink" title="Part 8.3.3 最近公共祖先"></a>Part 8.3.3 最近公共祖先</h4><blockquote><p>两个点的最近公共祖先，即两个点的所有公共祖先中，离根节点最远的一个节点。</p><p>求解最近公共祖先，常用的方法是树上倍增或者树链剖分。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3379">P3379 【模板】最近公共祖先（LCA）</a></li><li><a href="https://www.luogu.com.cn/problem/P3938">P3938 斐波那契</a></li><li><a href="https://www.luogu.com.cn/problem/P4281">P4281 [AHOI2008]紧急集合 / 聚会</a></li></ul><h3 id="Part-8-4-生成树"><a href="#Part-8-4-生成树" class="headerlink" title="Part 8.4 生成树"></a>Part 8.4 生成树</h3><blockquote><p>用 $ n-1 $ 条边将图上的 $ n $ 个点连接起来，形成的树就被称为生成树。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3366">P3366 【模板】最小生成树</a></li><li><a href="https://www.luogu.com.cn/problem/P4180">P4180 【模板】严格次小生成树[BJWC2010]</a></li><li><a href="https://www.luogu.com.cn/problem/P2872">P2872 [USACO07DEC]Building Roads</a></li><li><a href="https://www.luogu.com.cn/problem/P1991">P1991 无线通讯网</a></li><li><a href="https://www.luogu.com.cn/problem/P1967">P1967 货车运输</a></li><li><a href="https://www.luogu.com.cn/problem/P4047">P4047 [JSOI2010]部落划分</a></li></ul><h3 id="Part-8-5-拓扑排序"><a href="#Part-8-5-拓扑排序" class="headerlink" title="Part 8.5 拓扑排序"></a>Part 8.5 拓扑排序</h3><blockquote><p>将一个有向无环图排序，使得所有排在前面的节点不能依赖于排在后面的节点，这就是拓扑排序。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1113">P1113 杂务</a></li><li><a href="https://www.luogu.com.cn/problem/P1983">P1983 车站分级</a></li><li><a href="https://www.luogu.com.cn/problem/P1038">P1038 神经网络</a></li></ul><h3 id="Part-8-6-差分约束"><a href="#Part-8-6-差分约束" class="headerlink" title="Part 8.6 差分约束"></a>Part 8.6 差分约束</h3><blockquote><p>差分约束要解决的问题是：求出一组 $ n $ 元不等式的一组解，使得所有约束关系都能得到满足。 </p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P5960">P5960 【模板】差分约束算法</a></li><li><a href="https://www.luogu.com.cn/problem/P3275">P3275 [SCOI2011]糖果</a></li><li><a href="https://www.luogu.com.cn/problem/P2294">P2294 [HNOI2005]狡猾的商人</a></li><li><a href="https://www.luogu.com.cn/problem/P4926">P4926 [1007]倍杀测量者</a></li><li><a href="https://www.luogu.com.cn/problem/P5590">P5590 赛车游戏</a></li></ul><h3 id="Part-8-7-图的连通性相关"><a href="#Part-8-7-图的连通性相关" class="headerlink" title="Part 8.7 图的连通性相关"></a>Part 8.7 图的连通性相关</h3><blockquote><p>利用 Tarjan 算法，我们可以解决很多与图的连通性相关的问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3387">P3387 【模板】缩点</a></li><li><a href="https://www.luogu.com.cn/problem/P3388">P3388 【模板】割点（割顶）</a></li><li><a href="https://www.luogu.com.cn/problem/P2341">P2341 [HAOI2006]受欢迎的牛</a></li><li><a href="https://www.luogu.com.cn/problem/P2863">P2863 [USACO06JAN]The Cow Prom</a></li><li><a href="https://www.luogu.com.cn/problem/P2746">P2746 [USACO5.3]Network of Schools</a></li><li><a href="https://www.luogu.com.cn/problem/P1407">P1407 [国家集训队]稳定婚姻</a></li><li><a href="https://www.luogu.com.cn/problem/P2272">P2272 [ZJOI2007]最大半连通子图</a></li><li><a href="https://www.luogu.com.cn/problem/P3225">P3225 [HNOI2012]矿场搭建</a></li><li><a href="https://www.luogu.com.cn/problem/P5058">P5058 [ZJOI2004]嗅探器</a></li><li><a href="https://www.luogu.com.cn/problem/P2515">P2515 [HAOI2010]软件安装</a></li></ul><h3 id="Part-8-8-二分图"><a href="#Part-8-8-二分图" class="headerlink" title="Part 8.8 二分图"></a>Part 8.8 二分图</h3><blockquote><p>二分图上的不少问题都可以转化成网络流解决，当然也有独特的其他方法。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3386">P3386 【模板】二分图匹配</a></li><li><a href="https://www.luogu.com.cn/problem/P2756">P2756 飞行员配对方案问题</a></li><li><a href="https://www.luogu.com.cn/problem/P1129">P1129 [ZJOI2007]矩阵游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P1559">P1559 运动员最佳匹配问题</a></li><li><a href="https://www.luogu.com.cn/problem/P2423">P2423 [HEOI2012]朋友圈</a></li><li><a href="https://www.luogu.com.cn/problem/P2764">P2764 最小路径覆盖问题</a></li><li><a href="https://www.luogu.com.cn/problem/P2825">P2825 [HEOI2016/TJOI2016]游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P3033">P3033 [USACO11NOV]Cow Steeplechase</a></li><li><a href="https://www.luogu.com.cn/problem/P3731">P3731 [HAOI2017]新型城市化</a></li><li><a href="https://www.luogu.com.cn/problem/P4014">P4014 分配问题</a></li><li><a href="https://www.luogu.com.cn/problem/P4617">P4617 [COCI2017-2018#5] Planinarenje</a></li></ul><h3 id="Part-8-9-网络流"><a href="#Part-8-9-网络流" class="headerlink" title="Part 8.9 网络流"></a>Part 8.9 网络流</h3><blockquote><p>网络流是图论中一个重要的分支，很多题目都可以通过建立网络流的模型来解决。</p></blockquote><h4 id="Part-8-9-1-最大流"><a href="#Part-8-9-1-最大流" class="headerlink" title="Part 8.9.1 最大流"></a>Part 8.9.1 最大流</h4><blockquote><p>最大流，即求网络中最大的流量。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3376">P3376 【模板】网络最大流</a></li><li><a href="https://www.luogu.com.cn/problem/P4722">P4722 【模板】最大流 加强版 / 预流推进</a></li><li><a href="https://www.luogu.com.cn/problem/P2065">P2065 [TJOI2011]卡片</a></li><li><a href="https://www.luogu.com.cn/problem/P2763">P2763 试题库问题</a></li><li><a href="https://www.luogu.com.cn/problem/P2472">P2472 [SCOI2007]蜥蜴</a></li><li><a href="https://www.luogu.com.cn/problem/P2754">P2754 [CTSC1999]家园</a></li><li><a href="https://www.luogu.com.cn/problem/P2765">P2765 魔术球问题</a></li><li><a href="https://www.luogu.com.cn/problem/P2766">P2766 最长不下降子序列问题</a></li><li><a href="https://www.luogu.com.cn/problem/P2805">P2805 [NOI2009]植物大战僵尸</a></li><li><a href="https://www.luogu.com.cn/problem/P3749">P3749 [六省联考2017]寿司餐厅</a></li></ul><h4 id="Part-8-9-2-最小割"><a href="#Part-8-9-2-最小割" class="headerlink" title="Part 8.9.2 最小割"></a>Part 8.9.2 最小割</h4><blockquote><p>最小割，即求一个边权最小的边集，使得源点和汇点不再连通。</p><p>可以证明，<strong>最大流=最小割</strong>。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1344">P1344 [USACO4.4]Pollutant Control</a></li><li><a href="https://www.luogu.com.cn/problem/P1345">P1345 [USACO5.4]Telecowmunication</a></li><li><a href="https://www.luogu.com.cn/problem/P2057">P2057 [SHOI2007]善意的投票</a></li><li><a href="https://www.luogu.com.cn/problem/P2598">P2598 [ZJOI2009]狼和羊的故事</a></li><li><a href="https://www.luogu.com.cn/problem/P2774">P2774 方格取数问题</a></li><li><a href="https://www.luogu.com.cn/problem/P4126">P4126 [AHOI2009]最小割</a></li><li><a href="https://www.luogu.com.cn/problem/P5039">P5039 [SHOI2010]最小生成树</a></li></ul><h4 id="Part-8-9-3-费用流"><a href="#Part-8-9-3-费用流" class="headerlink" title="Part 8.9.3 费用流"></a>Part 8.9.3 费用流</h4><blockquote><p>在网络流中给边加上一个参数——费用，就出现了费用流。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3381">P3381 【模板】最小费用最大流</a></li><li><a href="https://www.luogu.com.cn/problem/P4016">P4016 负载平衡问题</a></li><li><a href="https://www.luogu.com.cn/problem/P4452">P4452 [国家集训队]航班安排</a></li><li><a href="https://www.luogu.com.cn/problem/P2045">P2045 方格取数加强版</a></li><li><a href="https://www.luogu.com.cn/problem/P2050">P2050 [NOI2012]美食节</a></li><li><a href="https://www.luogu.com.cn/problem/P2053">P2053 [SCOI2007]修车</a></li><li><a href="https://www.luogu.com.cn/problem/P2604">P2604 [ZJOI2010]网络扩容</a></li><li><a href="https://www.luogu.com.cn/problem/P2770">P2770 航空路线问题</a></li><li><a href="https://www.luogu.com.cn/problem/P3159">P3159 [CQOI2012]交换棋子</a></li><li><a href="https://www.luogu.com.cn/problem/P3356">P3356 火星探险问题</a></li><li><a href="https://www.luogu.com.cn/problem/P3358">P3358 最长k可重区间集问题</a></li><li><a href="https://www.luogu.com.cn/problem/P4013">P4013 数字梯形问题</a></li><li><a href="https://www.luogu.com.cn/problem/P4015">P4015 运输问题</a></li><li><a href="https://www.luogu.com.cn/problem/P5331">P5331 [SNOI2019]通信</a></li></ul><h4 id="Part-8-9-4-上下界网络流"><a href="#Part-8-9-4-上下界网络流" class="headerlink" title="Part 8.9.4 上下界网络流"></a>Part 8.9.4 上下界网络流</h4><blockquote><p>在网络流问题中给每条边的流量增加一个下界，就有了上下界网络流。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3980">P3980 [NOI2008]志愿者招募</a></li><li><a href="https://www.luogu.com.cn/problem/P4043">P4043 [AHOI2014/JSOI2014]支线剧情</a></li><li><a href="https://www.luogu.com.cn/problem/P4553">P4553 80人环游世界</a></li><li><a href="https://www.luogu.com.cn/problem/P4843">P4843 清理雪道</a></li></ul><h3 id="Part-8-10-2-SAT"><a href="#Part-8-10-2-SAT" class="headerlink" title="Part 8.10 2-SAT"></a>Part 8.10 2-SAT</h3><blockquote><p>k-SAT 问题的目标是对一些布尔变量赋值，满足限定的条件。</p><p>在 k-SAT 问题中，2-SAT 问题属于较为容易解决的一类。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4782">P4782 【模板】2-SAT 问题</a></li><li><a href="https://www.luogu.com.cn/problem/P4171">P4171 [JSOI2010]满汉全席</a></li><li><a href="https://www.luogu.com.cn/problem/P3825">P3825 [NOI2017]游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P5332">P5332 [JSOI2019]精准预测</a></li></ul><h3 id="Part-8-11-点分治"><a href="#Part-8-11-点分治" class="headerlink" title="Part 8.11 点分治"></a>Part 8.11 点分治</h3><blockquote><p>点分治是一种可以高效统计树上路径信息的算法。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3806">P3806 【模板】点分治1</a></li><li><a href="https://www.luogu.com.cn/problem/P2634">P2634 [国家集训队]聪聪可可</a></li><li><a href="https://www.luogu.com.cn/problem/P2664">P2664 树上游戏</a></li><li><a href="https://www.luogu.com.cn/problem/P3714">P3714 [BJOI2017]树的难题</a></li><li><a href="https://www.luogu.com.cn/problem/P4149">P4149 [IOI2011]Race</a></li><li><a href="https://www.luogu.com.cn/problem/P3241">P3241 [HNOI2015]开店</a></li><li><a href="https://www.luogu.com.cn/problem/P4075">P4075 [SDOI2016]模式字符串</a></li><li><a href="https://www.luogu.com.cn/problem/P4183">P4183 [USACO18JAN]Cow at Large P</a></li><li><a href="https://www.luogu.com.cn/problem/P4292">P4292 [WC2010]重建计划</a></li><li><a href="https://www.luogu.com.cn/problem/P5306">P5306 [COCI2019]Transport</a></li></ul><h3 id="Part-8-12-虚树"><a href="#Part-8-12-虚树" class="headerlink" title="Part 8.12 虚树"></a>Part 8.12 虚树</h3><blockquote><p>将一些无用的点从树上删去，从而达到降低树的规模的效果。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2495">P2495 [SDOI2011]消耗战</a></li><li><a href="https://www.luogu.com.cn/problem/P3233">P3233 [HNOI2014]世界树</a></li><li><a href="https://www.luogu.com.cn/problem/P5360">P5360 [SDOI2019]世界地图</a></li><li><a href="https://www.luogu.com.cn/problem/P5439">P5439 【XR-2】永恒</a></li></ul><h3 id="Part-8-13-矩阵树定理"><a href="#Part-8-13-矩阵树定理" class="headerlink" title="Part 8.13 矩阵树定理"></a>Part 8.13 矩阵树定理</h3><blockquote><p>矩阵树定理可以解决图的生成树计数问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4111">P4111 [HEOI2015]小Z的房间</a></li><li><a href="https://www.luogu.com.cn/problem/P2144">P2144 [FJOI2007]轮状病毒</a></li><li><a href="https://www.luogu.com.cn/problem/P3317">P3317 [SDOI2014]重建</a></li><li><a href="https://www.luogu.com.cn/problem/P4208">P4208 [JSOI2008]最小生成树计数</a></li></ul><h2 id="Part-9-计算几何"><a href="#Part-9-计算几何" class="headerlink" title="Part 9 计算几何"></a>Part 9 计算几何</h2><blockquote><p>试着用计算机来解决几何问题吧！</p></blockquote><h3 id="Part-9-1-凸包"><a href="#Part-9-1-凸包" class="headerlink" title="Part 9.1 凸包"></a>Part 9.1 凸包</h3><blockquote><p>凸包指在平面上能包含所有给定点的最小凸多边形。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P2742">P2742 【模板】二维凸包</a></li><li><a href="https://www.luogu.com.cn/problem/P2287">P2287 [HNOI2004]最佳包裹</a></li><li><a href="https://www.luogu.com.cn/problem/P3829">P3829 [SHOI2012]信用卡凸包</a></li><li><a href="https://www.luogu.com.cn/problem/P4680">P4680 [Ynoi2018]末日时在做什么?有没有空?可以来拯救吗?</a></li><li><a href="https://www.luogu.com.cn/problem/P4557">P4557 [JSOI2018]战争</a></li><li><a href="https://www.luogu.com.cn/problem/P5403">P5403 [CTS2019]田野</a></li></ul><h3 id="Part-9-2-旋转卡壳"><a href="#Part-9-2-旋转卡壳" class="headerlink" title="Part 9.2 旋转卡壳"></a>Part 9.2 旋转卡壳</h3><blockquote><p>旋转卡壳是一种求出凸包所有对踵点对的算法。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1452">P1452 Beauty Contest</a></li><li><a href="https://www.luogu.com.cn/problem/P3187">P3187 [HNOI2007]最小矩形覆盖</a></li></ul><h3 id="Part-9-3-半平面交"><a href="#Part-9-3-半平面交" class="headerlink" title="Part 9.3 半平面交"></a>Part 9.3 半平面交</h3><blockquote><p>多个半平面的交集称之为半平面交。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3256">P3256 [JLOI2013]赛车</a></li><li><a href="https://www.luogu.com.cn/problem/P2600">P2600 [ZJOI2008]瞭望塔</a></li><li><a href="https://www.luogu.com.cn/problem/P4196">P4196 [CQOI2006]凸多边形</a></li><li><a href="https://www.luogu.com.cn/problem/P3297">P3297 [SDOI2013]逃考</a></li><li><a href="https://www.luogu.com.cn/problem/P4250">P4250 [SCOI2015]小凸想跑步</a></li><li><a href="https://www.luogu.com.cn/problem/P5328">P5328 [ZJOI2019]浙江省选</a></li></ul><h2 id="Part-10-杂项"><a href="#Part-10-杂项" class="headerlink" title="Part 10 杂项"></a>Part 10 杂项</h2><blockquote><p>这里的专题，有很多都难以纳入前面的类别中，故将他们单独列入了杂项。</p></blockquote><h3 id="Part-10-1-模拟退火"><a href="#Part-10-1-模拟退火" class="headerlink" title="Part 10.1 模拟退火"></a>Part 10.1 模拟退火</h3><blockquote><p>模拟退火是一种随机化算法。当一个问题的方案数量极大（甚至是无穷的）而且不是一个单峰函数时，我们常使用模拟退火求解。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1337">P1337 [JSOI2004]平衡点 / 吊打XXX</a></li><li><a href="https://www.luogu.com.cn/problem/P2503">P2503 [HAOI2006]均分数据</a></li><li><a href="https://www.luogu.com.cn/problem/P3878">P3878 [TJOI2010]分金币</a></li></ul><h3 id="Part-10-2-0-1-分数规划"><a href="#Part-10-2-0-1-分数规划" class="headerlink" title="Part 10.2 0/1 分数规划"></a>Part 10.2 0/1 分数规划</h3><blockquote><p>0/1 分数规划用来求一个分式的极值。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4377">P4377 [USACO18OPEN]Talent Show</a></li><li><a href="https://www.luogu.com.cn/problem/P3199">P3199 [HNOI2009]最小圈</a></li><li><a href="https://www.luogu.com.cn/problem/P3288">P3288 [SCOI2014]方伯伯运椰子</a></li><li><a href="https://www.luogu.com.cn/problem/P3705">P3705 [SDOI2017]新生舞会</a></li><li><a href="https://www.luogu.com.cn/problem/P4322">P4322 [JSOI2016]最佳团体</a></li></ul><h3 id="Part-10-3-离线算法"><a href="#Part-10-3-离线算法" class="headerlink" title="Part 10.3 离线算法"></a>Part 10.3 离线算法</h3><blockquote><p>当题目不要求强制在线时，我们可以一次性读入所有询问来处理。</p></blockquote><h4 id="Part-10-3-1-CDQ-分治"><a href="#Part-10-3-1-CDQ-分治" class="headerlink" title="Part 10.3.1 CDQ 分治"></a>Part 10.3.1 CDQ 分治</h4><blockquote><p>CDQ 分治是一个基于分治思想的离线算法。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P3810">P3810 【模板】三维偏序（陌上花开）</a></li><li><a href="https://www.luogu.com.cn/problem/P3157">P3157 [CQOI2011]动态逆序对</a></li><li><a href="https://www.luogu.com.cn/problem/P2487">P2487 [SDOI2011]拦截导弹</a></li><li><a href="https://www.luogu.com.cn/problem/P4690">P4690 [Ynoi2016]镜中的昆虫</a></li><li><a href="https://www.luogu.com.cn/problem/P3206">P3206 [HNOI2010]城市建设</a></li></ul><h4 id="Part-10-3-2-整体二分"><a href="#Part-10-3-2-整体二分" class="headerlink" title="Part 10.3.2 整体二分"></a>Part 10.3.2 整体二分</h4><blockquote><p>整体二分，顾名思义就是把多个查询一起二分解决。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1527">P1527 [国家集训队]矩阵乘法</a></li><li><a href="https://www.luogu.com.cn/problem/P2617">P2617 Dynamic Rankings</a></li><li><a href="https://www.luogu.com.cn/problem/P3527">P3527 [POI2011]MET-Meteors</a></li><li><a href="https://www.luogu.com.cn/problem/P4602">P4602 [CTSC2018]混合果汁</a></li></ul><h4 id="Part-10-3-3-莫队"><a href="#Part-10-3-3-莫队" class="headerlink" title="Part 10.3.3 莫队"></a>Part 10.3.3 莫队</h4><blockquote><p>莫队算法可以解决不少离线区间询问问题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1494">P1494 [国家集训队]小Z的袜子 /【模板】莫队</a></li><li><a href="https://www.luogu.com.cn/problem/P1903">P1903 [国家集训队]数颜色 / 维护队列 /【模板】带修莫队</a></li><li><a href="https://www.luogu.com.cn/problem/P5906">P5906 【模板】回滚莫队</a></li><li><a href="https://www.luogu.com.cn/problem/P4887">P4887 【模板】莫队二次离线（第十四分块(前体)）</a></li><li><a href="https://www.luogu.com.cn/problem/P2709">P2709 小B的询问</a></li><li><a href="https://www.luogu.com.cn/problem/P3674">P3674 小清新人渣的本愿</a></li><li><a href="https://www.luogu.com.cn/problem/P3709">P3709 大爷的字符串题</a></li><li><a href="https://www.luogu.com.cn/problem/P4074">P4074 [WC2013]糖果公园</a></li><li><a href="https://www.luogu.com.cn/problem/P5501">P5501 [LnOI2019]来者不拒，去者不追</a></li></ul><h3 id="Part-10-4-奇怪的题目"><a href="#Part-10-4-奇怪的题目" class="headerlink" title="Part 10.4 奇怪的题目"></a>Part 10.4 奇怪的题目</h3><blockquote><p>OI 界中有一些非常规套路的题目，这里放出来分享。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P4920">P4920 [WC2015]未来程序</a></li><li><a href="https://www.luogu.com.cn/problem/P5042">P5042 [国家集训队]丢失的题面（ydc的题面）</a></li><li><a href="https://www.luogu.com.cn/problem/P5285">P5285 [十二省联考2019]骗分过样例</a></li><li><a href="https://www.luogu.com.cn/problem/P5246">P5246 [集训队互测2016]消失的源代码</a></li></ul><h3 id="Part-10-5-非传统题"><a href="#Part-10-5-非传统题" class="headerlink" title="Part 10.5 非传统题"></a>Part 10.5 非传统题</h3><blockquote><p>在 NOI 等比赛中，非传统题正越来越频繁出现。</p><p>非传统题主要包括以下几类：提交答案题，交互题，通信题。</p></blockquote><h4 id="Part-10-5-1-提交答案题"><a href="#Part-10-5-1-提交答案题" class="headerlink" title="Part 10.5.1 提交答案题"></a>Part 10.5.1 提交答案题</h4><blockquote><p>给你一些输入，你只需要提交这些输入对应的答案，即为提交答案题。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1335">P1335 [NOI2013]小Q的修炼</a></li><li><a href="https://www.luogu.com.cn/problem/P1737">P1737 [NOI2016]旷野大计算</a></li><li><a href="https://www.luogu.com.cn/problem/P3614">P3614 yyy棋 II</a></li><li><a href="https://www.luogu.com.cn/problem/P3640">P3640 [APIO2013]出题人</a></li><li><a href="https://www.luogu.com.cn/problem/P3782">P3782 [WC2017]排序</a></li><li><a href="https://www.luogu.com.cn/problem/P3836">P3836 Nowruz</a></li><li><a href="https://www.luogu.com.cn/problem/P4920">P4920 [WC2015]未来程序</a></li><li><a href="https://www.luogu.com.cn/problem/P5402">P5402 [CTS2019]无处安放</a></li><li><a href="https://www.luogu.com.cn/problem/P5418">P5418 [CTSC2016]NOIP十合一</a></li><li><a href="https://www.luogu.com.cn/problem/P5600">P5600 【XR-4】尺规作图</a></li></ul><h4 id="Part-10-5-2-交互题"><a href="#Part-10-5-2-交互题" class="headerlink" title="Part 10.5.2 交互题"></a>Part 10.5.2 交互题</h4><blockquote><p>在交互题中，选手程序需要通过与测评程序交互来完成任务。</p></blockquote><ul><li><a href="https://www.luogu.com.cn/problem/P1733">P1733 猜数（IO交互版）</a></li><li><a href="https://www.luogu.com.cn/problem/P1947">P1947 猜数</a></li><li><a href="https://www.luogu.com.cn/problem/P5208">P5208 [WC2019]I 君的商店</a></li><li><a href="https://www.luogu.com.cn/problem/P5473">P5473 [NOI2019]I 君的探险</a></li><li><a href="https://www.luogu.com.cn/problem/P6541">P6541 [WC2018]即时战略</a></li><li><a href="https://www.luogu.com.cn/problem/P6558">P6558 [APIO2017]考拉的游戏</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 训练 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Who Am I</title>
      <link href="/2024/01/29/introduction/"/>
      <url>/2024/01/29/introduction/</url>
      
        <content type="html"><![CDATA[<h2 id="Resume"><a href="#Resume" class="headerlink" title="Resume"></a>Resume</h2><h3 id="Basic-Information"><a href="#Basic-Information" class="headerlink" title="Basic Information"></a>Basic Information</h3><p>张子嵩 | Zisong ZHANG</p><ul><li>Pseudonym: 居士六如 | Six As Lay</li><li>Male 20 | Feicheng, Shandong</li><li>Email: <a href="mailto:thyzzs@163.com">thyzzs@163.com</a> / <a href="mailto:zgtdzzs@gmail.com">zgtdzzs@gmail.com</a> / <a href="mailto:zisong.zhang@student.manchester.ac.uk">zisong.zhang@student.manchester.ac.uk</a> / <a href="mailto:zisongzhang@stu.cpu.edu.cn">zisongzhang@stu.cpu.edu.cn</a></li><li>QQ: 1458077873</li><li>China Pharmaceutical University, School of Basic Medicine and Clinical Pharmacy | <strong>BSc in Clinical Pharmacy</strong></li><li>The University of Manchester, School of Health Sciences | <strong>BSc in Clinical Pharmacy</strong></li><li>GPA: 3.89/5.00</li><li>Comprehensive Assessment: 81.3449 (Rank 7/59)</li></ul><h3 id="Education-Experience"><a href="#Education-Experience" class="headerlink" title="Education Experience"></a>Education Experience</h3><table><thead><tr><th>Time</th><th>School</th></tr></thead><tbody><tr><td>2023-2028</td><td><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/University_of_Manchester_logo.png" style="zoom: 40%;"></td></tr><tr><td>2023-2028</td><td><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/CPU.png" style="zoom: 25%;"></td></tr><tr><td>2019-2023*</td><td><img src="https://pic.baike.soso.com/ugc/baikepic2/0/20221115160652-1517108166_jpg_390_390_39989.jpg/800" style="zoom:20%;">  肥城市第一高级中学  Feicheng No.1 Senior High School</td></tr></tbody></table><p>*temporary absence from school in 2020</p><h3 id="English-Level"><a href="#English-Level" class="headerlink" title="English Level"></a>English Level</h3><ul><li>CET-6 (Preparing)</li><li>27/07/2024 - IELTS: <strong>6.5</strong> (L <strong>5.5</strong> | R <strong>7.0</strong> | W <strong>6.5</strong> | S <strong>6.5</strong>) (Preparing for the next test)</li><li>27/02/2024 - CET-4: <strong>506</strong> (Listening: <strong>126</strong> | Reading: <strong>213</strong> | Writing &amp; Translation: <strong>164</strong>)</li><li>27/02/2024 - CET-SET-4: <strong>Good</strong></li><li>25/06/2023 - College Entrance Examination English: <strong>126</strong></li></ul><h3 id="Other-Skills"><a href="#Other-Skills" class="headerlink" title="Other Skills"></a>Other Skills</h3><ul><li>NCRE-2 - C / C++ / Python / Microsoft Office (Preparing)</li><li>12/08/2024 - Driver’s license in China (C1)</li><li>18/01/2024 - Putonghua Proficiency Test (PSC): <strong>87.4, Level 2-A</strong></li></ul><h3 id="Work-Internship-Experience"><a href="#Work-Internship-Experience" class="headerlink" title="Work / Internship Experience"></a>Work / Internship Experience</h3><table><thead><tr><th>Time</th><th>Work</th><th>Project</th></tr></thead><tbody><tr><td>Preparing</td><td><img src="https://raw.githubusercontent.com/thyzzs/Pic/main/logo%E4%B8%8E%E4%B8%AD%E8%8B%B1%E6%96%87%E5%B7%A6%E5%8F%B3%E7%BB%84%E5%90%88.png" style="zoom: 12%;"></td><td>molecular mechanisms governing the immune modulation by microbial metabolites and cellular metabolism</td></tr></tbody></table><h3 id="Honors-Awards"><a href="#Honors-Awards" class="headerlink" title="Honors &amp; Awards"></a>Honors &amp; Awards</h3><ul><li>Blue Bridge Cup: National Software and information technology professionals Competition (Preparing)</li><li>08/2020 China High School Biology Olympiad | <strong>Second Prize</strong></li><li>11/2018 National Olympiad in Informatics in Provinces | <strong>Second Prize</strong></li></ul><h3 id="Projects"><a href="#Projects" class="headerlink" title="Projects"></a>Projects</h3><ul><li>27/09/2024 - <em>Detection of gene expression in human tissue samples by fluorescent quantitative PCR</em> | <strong>Team Member</strong>: In Progress</li><li><del>13/04/2024 - NO AS</del>: Rejected</li><li>15/03/2024 - <em>Screening of antitumor activity of natural products</em> | <strong>Team Member</strong>: Excellent, Completion</li><li>01/03/2024 - <em>Stars Elementary Literary Creative Talents Program</em> | <strong>Team Member</strong>: Completion</li><li>09/01/2024 - <em>Research on the synthesis of non-natural α-nucleosides</em> | <strong>Second Team Leader</strong>: Completion, waiting for the results</li></ul><h3 id="Academy"><a href="#Academy" class="headerlink" title="Academy"></a>Academy</h3><ul><li>12/10/2024 - 21/12/2024 - Enquiry-Based Learning - <em>Behavioural and Cognitive Neuroscience for Human Psychopathology</em> (Professor Robin Murphy): In Progress</li><li>30/04/2024 - 04/06/2024 - Seminar - <em>Metabolic Diseases and New Drug Research Cases</em>: <strong>92</strong>/100, Completion</li><li>10/04/2024 - 19/06/2024 - Seminar - <em>Probes and Imaging: Visualizing Life Processes</em>: <strong>99</strong>/100, Completion</li><li><del>06/03/2024 - Enquiry-Based Learning - <em>Molecular Biology of Memory and Memory Diseases</em></del>: Rejected</li><li>12/10/2023 - 16/11/2023 - Seminar - <em>The Magic Gas Signal Molecule: Nitric Oxide</em>: <strong>96</strong>/100, Completion</li><li>31/10/2023 - 19/12/2023 - Seminar - <em>Sugar: Sweet Chemistry</em>: <strong>96</strong>/100, Completion</li></ul><h3 id="Publications-Patents"><a href="#Publications-Patents" class="headerlink" title="Publications &amp; Patents"></a>Publications &amp; Patents</h3><p>Null</p>]]></content>
      
      
      <categories>
          
          <category> Stack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Stack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《红楼梦》随笔（一 - 三十六）</title>
      <link href="/2023/11/11/hong-lou-meng-sui-bi-2/"/>
      <url>/2023/11/11/hong-lou-meng-sui-bi-2/</url>
      
        <content type="html"><![CDATA[<h3 id="一-三：满纸荒唐言，一把辛酸泪-都云作者痴，谁解其中味？"><a href="#一-三：满纸荒唐言，一把辛酸泪-都云作者痴，谁解其中味？" class="headerlink" title="一 - 三：满纸荒唐言，一把辛酸泪  都云作者痴，谁解其中味？"></a>一 - 三：满纸荒唐言，一把辛酸泪  都云作者痴，谁解其中味？</h3><p>​“好”“了”，“好了”。</p><p>​甄士隐的领悟，所有的词句就在“好”和“了”里面。“世人都晓神仙好，惟有功名忘不了！古今将相在何方？荒冢一堆草没了。世人都晓神仙好，只有金银忘不了！终朝只恨聚无多，及到多时眼闭了。世人都说神仙好，只有姣妻忘不了！君生日日说恩情，君死又随人去了。世人都晓神仙好，惟有儿孙忘不了！痴心父母古来多，孝顺儿孙谁见了？”</p><p>​《好了歌》把人世间的东西，权力也好，财富也好，爱情或亲情也好，都当成“好”和“了”来做点醒。“了”是结束，就是了却了，了结了，了悟了。“好”，才有意义。你想要做神仙，希望生命活得很快乐幸福，可是你忘不了功名，忘不了金钱，忘不了娇妻，忘不了儿孙。追逐名利、权力的古今将相，现在都到哪里去了？夫妻活着的时候恩恩爱爱，死了之后很快又嫁别人了。甄士隐疼女儿，一生大概也敛了很多钱财，变成富有的人，也做过官，有过功名，所有一切，这些“好”到最后怎么“了”。人生中最后的领悟是怎么去跨过“好”这一关，变成了“了”。可知世人万般好，便是了，了便是好，若不了，便不好；若要好，须是了。这讲有与无、真与假，连同甄士隐对《好了歌》的注解，讲出我们心里恐惧的东面，它可能是健康、亲人的幸福、爱、钱财、权力，一切你放不下的东西，《好了那》告诉我们，总有一天都要放下。</p><p>​满纸荒唐言，一把辛酸泪。都云作者痴，谁解其中味？</p><p>​生命中的修行跟执著、痴迷是纠结在一起的，《红楼梦》一直在讲“警幻仙姑”，警告你，一切都是空幻的，可是无论怎么“警幻”还是执著，这便是红尘之楼的一场大梦吧。</p><p>​好的文学是真实的人生，不是一定有道理可讲，在小说的第五回，作者就把小说里所有人的结局全部告诉你了。可是每个人的结局是一首诗，可以往正面解释，也可以往负面解释，没有确定的答案。人的一生，不到最后的终结，永远不知道它的结局。也许人生不是一个结局，而是点点滴滴、一分一秒的过程累积起来的一种不可知的状态。</p><p>​回首人生的荒唐、荒谬、错综复杂的喜怒哀乐，爱恨情仇的纠缠，其实是讲不清楚的。《红楼梦》让我们知道，结局可能本来就是假的，是我们自己虚拟的一个结局。什么叫作好，什么叫作坏，什么叫作命好，什么叫作命坏，大概也都很难确定。</p><h3 id="四-十：转山转水，方知人生结局"><a href="#四-十：转山转水，方知人生结局" class="headerlink" title="四 - 十：转山转水，方知人生结局"></a>四 - 十：转山转水，方知人生结局</h3><p>​读过《红楼梦》的人都知道，此书最关键的章节是第五回和第六回。第五回其实是这部近百万字的小说的真正开头。在小说开始时，贾宝玉做了一个梦，梦到一个叫作太虚幻境的地方，在那里他看到一些大柜子，柜子有很多抽屉，他一一打开抽屉，在每个抽屉里都会看到一张画，旁边写有几句诗，那些诗，是他一生中碰到的女性的命运。</p><p>​《红楼梦》这部小说结构特殊的地方，在于它把故事结局放到前面来写。小说大结局全部在第五回，如果你想知道《红楼梦》中每一个人的命运，你就要不断回到第五回来看，因为那些诗已经放在那里，你需要去印证，就像你在庙里求的签，可能是十年前抽的，你会一直放在抽屉里，隔一阵子拿出来看一看，看到底对还是不对。诗跟生命之间的印证关系全部在第五回当中。</p><p>​我觉得作者触到了生命的本质，这个本质是存在于我们的潜意识里的，是我们从来都不敢说的。你会发现你的一生中，当你决定跟一个人结婚的时候，其实对另外的人可能就是遗憾。对作者来说，人世间的美好幸福是不能全得的。有所取，就有所舍；有所得，就有所失，林黛玉和薛宝钗一直是很有趣的象征，好像两人合在一起才是完美，如果她们是两个人，就永远不完美。所以在作者幻想的世界里，在判词当中，她们变成了合在一起的生命形态。不管是判词还是《红楼梦》的十四支曲子，林黛玉和薛宝钗一直是一个特例，这是需要注意的一个现象。</p><p>​《红楼梦》的十四支曲子并不是完全在写个人，最后讲到“好一似食尽鸟投林，落了片白茫茫大地真干净”，这里写的不是任何个体，而是写这个小说里所有人的下场，所有人来这一世，不管争名还是夺利，最后都会走。作者用了一个近似于老庄的写法，告诉我们人世间所有的繁华都是空忙一场。</p><p>​结局不是最重要的，人怎么一步一步走向那个结局才重要。</p><h3 id="十一-十四：风月空幻，红粉骷髅"><a href="#十一-十四：风月空幻，红粉骷髅" class="headerlink" title="十一 - 十四：风月空幻，红粉骷髅"></a>十一 - 十四：风月空幻，红粉骷髅</h3><p>​“忽然这日有个跛足道人来化斋，口称专治冤孽之症。”《红楼梦》里每当某个角色的人生处于最迷茫的时刻，就会有道士或者和尚出来。《红楼梦》其实是一部非常不支持儒家立场的书，作者相信真正可以救助人的是道家与佛家，因为它们可以让人大彻大悟。书中来点化人的人不是癞头和尚，就是跛足道人，他们总有一部分是残缺的。那残缺代表什么？代表他经过人世间的沧桑，受过人世间的磨难，所以他修道成功了，只有他才知道什么叫做宽容。太过顺利的生命，其实不容易有领悟，他的意思是说当你有身体上的痛苦，才知道什么是真正的悲悯。这都是佛、道的一些思想。</p><p>​贾瑞在病床上听到了，直着声叫喊说：“快请那位菩萨来救我！”贾瑞希望有最后一个机会。可是《红楼梦》告诉你，连菩萨也不能救人，人最终还是自己救自己。跛足道人并未能救贾瑞，他跟贾瑞说镜子你只能看反面，不要看正面，可是贾瑞偏偏做相反的事情，菩萨不过是来点化你的，能不能做到，是你自己的事情。</p><p>​贾瑞拿起日月宝鉴，照道士的意思只看反面，结果他看到一个骷髅在里面。西方的美术史里面常常有骷髅，修行的时候旁边也有骷髅头，是要告诉你生命的终结就是这个，你每天看，就能提醒自己现在所拥有的一切东西都是假的。道士要借风月宝鉴度化贾瑞，告诉他你最后就是这个样子，现在有什么好邪思妄动的，你所拥有的东西不过是一个幻象。</p><p>​但是贾瑞说：“我倒再照照正面是什么。”他已经忘了道士跟他说的话，因为反面不好看，他就翻过来，看看正面是什么。想着，又将正面一照，只见凤姐站在里面，招手叫他。他看到了自己朝思暮想的幻象，所以，有没有镜子不重要了，是他没有办法忘掉凤姐。王煕凤变成了他的致命伤。我们看到人生的两面，繁华与幻灭、情欲的快乐与死亡的空幻在做对比。贾瑞后来精尽而死，因此他一直在看镜子的正面，一直幻想跟凤姐做爱，一次又一次地耗尽精血，这个时候你忽然会想起贾瑞之前讲的“死也要来”，现在他就是一次一次到境子里面去赴死之约，这大概真的是他要还的冤孽之债。</p><p>​很多人看这一段时，总觉得贾瑞是一个很下流的人，但我想提醒大家要从不同的角度去看贾瑞。很少有人从这一角度去谈《红楼梦》，因为《红楼梦》的读者都太高贵了，大家都在看情的部分，可是《红楼梦》对肉欲部分的描写一点也不放松。作者在《红楼梦》中一直在提醒，“情既相逢必主淫”，贾瑞对王熙凤可能是一种爱，这种爱可以往精神上升华，也可以肉体上发泄，人性本来就存在着这两面。小说写秦可卿的死，告诉你情都是空幻的；写贾瑞的死，告诉你肉体上的沉溺也是空幻的，情与淫在这里合写。</p><h3 id="十五-二十：弱水三千，情意绵绵"><a href="#十五-二十：弱水三千，情意绵绵" class="headerlink" title="十五 - 二十：弱水三千，情意绵绵"></a>十五 - 二十：弱水三千，情意绵绵</h3><h4 id="情爱保证，即为平安（第十六回）"><a href="#情爱保证，即为平安（第十六回）" class="headerlink" title="情爱保证，即为平安（第十六回）"></a>情爱保证，即为平安（第十六回）</h4><p>​“宝玉只问得黛玉‘平安’二字，余者也就不在意了。”这一段写的极好。其实一个人对另外一个人的关心，到最后只有“平安”二字，汉诗里面说的“上言加餐饭”，其实是写给最珍爱的人的话，因为最爱的人，已经不再说你爱我、我爱你之类的话了。反而会是好好吃饭、健康平安。讲得很淡，可是不容易体会。我们对于所谓的情爱，有很多外在的装饰，可是情爱深处，其实就是平安。</p><h4 id="弱水三千，只取一瓢饮（第十八回）"><a href="#弱水三千，只取一瓢饮（第十八回）" class="headerlink" title="弱水三千，只取一瓢饮（第十八回）"></a>弱水三千，只取一瓢饮（第十八回）</h4><p>​十八回讲宝玉身上的荷包被小厮们解去，回来时袭人抱怨，黛玉刚好也在，听到了，就走过来看，因为有一个荷包是她绣给宝玉的。看了以后，她就说，我的荷包也被你送给别人了，就开始跟宝玉赌气。宝玉还没有机会辩白，黛玉就立刻拿剪刀把正在为宝玉绣的一个香囊，“啪”的一下剪断了，说我以后再也不给你做东西了。她觉得那是我对你情感的寄托，你不能够随便给别人。</p><p>​宝玉忙走过来，解开衣服，从里面拿出一个荷包，说你瞧这是什么。原来他把黛玉绣的荷包藏在内衣里面了。其实，一场爱情、一段感情深到这个地步的时候，它就是跟别人不一样。他把所有的荷包都戴在外面，只有黛玉的那个，他藏在里面，不想让任何人拿走。黛玉知道委屈了宝玉，可是黛玉是永远不会说对不起的，她是那个受宠的人，她永远要发脾气，就连自己做错了事她也要发脾气。真正的深情本来就没有公平可言，爱这个东西，旁观的人永远无法理解，他们有他们的语言，你看到这个年龄的男孩女孩在吵架，你就知道他们的吵架绝不是吵架，而是另外一种甜蜜，他们之间有牵挂、有争辩，还有赌气，其实人最幸福的时刻莫过于此，等到没有什么架可吵时，大概就无情可谈了。</p><p>​宝玉和黛玉在一起很少不吵架的，感情这个东西很奇怪，得到一点，还要再多证明一点，吵架其实是个不断证明感情的过程。一天黛玉跟宝玉闹到最厉害的时候，宝玉就对黛玉说，你不要老是怀疑这个，怀疑那个，“弱水三千，只取一瓢饮”。黛玉就不讲话了，因为她知道宝玉讲出了最重要的话。</p><p>​可是黛玉总忍不住要证明，而宝玉的个性也刚好配合黛玉，他懂得赔小心，懂得去疼爱黛玉，所以每次两个人起冲突，让步的一定是他。一个十四岁的男孩子，懂情懂到这种程度。不读这些，不会知道《红楼梦》写“情”这个字写得这么深。</p><h3 id="二十一-二十三：为空而执，因执显空"><a href="#二十一-二十三：为空而执，因执显空" class="headerlink" title="二十一 - 二十三：为空而执，因执显空"></a>二十一 - 二十三：为空而执，因执显空</h3><p>​“他只是告诉你，在所有的生命中，权力、财富、爱情全部是一场空。他要告诉你，知道是空，你还是执着。知道归知道，执着归执着。”</p><p>​“细想自己原为他二人怕生隙，方在中调和，不想并未调和成功，反已落了两处的贬谤。正与前日所看《南华经》上，有‘巧者劳而智者忧，无能者无所求，饱食而遨游，泛若不系之舟。’”这是《庄子》里非常美的句子，它的意思是说，人之所以会忧愁和操劳，是因为太聪明、太敏感，总是想要把事情摆平。如果能笨一点、木讷一点，也就没有什么要求了。在庄子看来，最快乐的人生莫过于吃饱肚子，宛若不系之舟荡在水面，随遇而安。我们也许一生都做不到“泛若不系之舟”，可是它能提供一个境界，那就是心境上的自由。</p><p>​宝玉还由此想到“山木自寇，源泉自盗”。这是说山上最美丽、挺拔的树是最先被砍掉的，最甜美的甘泉是第一个被喝完的。庄子是在提醒我们：人在得意的时候千万要注意，很可能那就是你日后受伤的开始。生命中的得意忘形往往是很危险的状态。</p><p>​“宝玉细想这句‘赤条条来去无牵挂’的意味，不禁大哭起来。忽然觉得人生真是悲哀，从生到死都没有什么挂碍，便翻身起来至案边，提笔写了一首偈。”佛教禅宗里面常常用 “偈”， “偈”其实是一种非常简短的诗句，里面的意思不直接表达，多用隐喻和象征，基本上不是要你读懂字面的意思，而是叫你领悟。宝玉写道：“你证我证，心证意证。是无有证，斯可云证。无可云证，是立足境。”这非常像“偈语”，可你根本不知道他在讲什么。你也证明，我也证明，你要很诚心地证明，最后发现没有什么东西可证明。人生到最后就是“赤条条来去无牵挂”，有什么可证明的？等到明白“无可云证”的时候，才是人生立足的根本境界。</p><p>​很多人觉得《红楼梦》讲繁华若梦，最终就是一个“空”字，可是这部小说里面描绘了这么多对人生的眷恋，目的是让人感受到如果不经历这场繁华，是无法了解最后究竟是什么样子的。我经常听到身边朋友说，我终于“领悟”了，他们都把“终于”说得太早了，没过两天他又执迷不悟了。人生的可爱就在于常常是刚领悟完，又执迷了，正是这种领悟和执迷构成了人生中很多有意思的转折，当然你的人生一定会有进步，但很可能会陷入下一个迷障。这个时候宝玉写的这首“偈”，其实是另外一种执着，他却自以为是领悟，所以遭到那三个女孩子的嘲笑。</p><h3 id="二十四-二十六：青春的自由与眷恋：宝玉读“禁书”所体现的"><a href="#二十四-二十六：青春的自由与眷恋：宝玉读“禁书”所体现的" class="headerlink" title="二十四 - 二十六：青春的自由与眷恋：宝玉读“禁书”所体现的"></a>二十四 - 二十六：青春的自由与眷恋：宝玉读“禁书”所体现的</h3><p>​“早饭后，宝玉携了一套《会真记》走到沁芳闸桥。”唐朝有个诗人叫元稹，他写了一本《莺莺传》，内容是张君瑞和崔莺莺的爱情故事。文中亦有元稹《会真诗》三十乎。在唐朝的时候，小说还没有发展起来，诗是主要的文学形式。《莺莺传》因《会真诗》三十韵，变成了最早对青春恋爱美的歌颂，后人亦称《会真记》，到了晚些时候，元朝的王实甫把《莺莺传》改成《西厢记》。</p><p>​其实《西厢记》的故事非常非常简单，崔莺莺是相国的女儿，家教很严，在上香时被张君瑞看到，便一见钟情。古代的丫头们没有受那么多的教育，不曾受礼教的压制，所以比小姐更无羁绊，更敢爱敢恨。丫头红娘就觉得小姐有人爱很好，便积极地帮忙穿针引线，最后在她的帮助下，张生翻墙过去，美梦成真。后来红娘因此被老夫人拷打，在《拷红》中红娘就很大胆地骂老夫人，说女儿都这么大了，你不帮她找婆家，还要怪她私自恋爱。我们很难理解为什么《西厢记》在元朝以后的几百年里会在民间有这么大的魅力，其实最主要的原因是爱情在那个时代一直受压抑，完全要靠父母之命、媒妁之言，而《西厢记》是鼓励自由恋爱的。</p><p>​其实从社会心理学的角度讲，《西厢记》了好，《牡丹亭》也好，在当时都是一种革命，一种利用文字进行的革命。过去的这些“禁书”对青少年的爱情具有很大的安慰力量，因为他们的生命里没有爱情。《红楼梦》强调的是爱情的重要，对于一个青春期的孩子来说，对爱情渴望的强烈程度是可以为之生，为之死的。只有在青春的时候，才会有如此强烈的激情和眷恋。</p><p>​我们的教科书里面“情”的东西太少，人应该从青春期开始唤醒和发展“情”，孩子们对家庭的“情”，对国家的“情”，对族群的“情”都是从这里起步的。如果一个人的私密的“情”没有完成，其他所有的“情”都有可能是假的。《西厢记》在如此长的时间里影响力之所以这么大，是因为它强调了要善待人间的真情。</p><p>​为什么我们的教科书里读不到情欲问题，为什么学校里教忠教孝，却不教情教爱？</p><p>​我不知道。</p><p>​当情欲变成一种恐惧，当设下重重防范的关节，青春便不会有自由与眷恋，更不会有情感的饱满和精神的升华。</p><h3 id="二十七-二十八：黛玉葬花与宝钗扑蝶：两种不同的生命情调"><a href="#二十七-二十八：黛玉葬花与宝钗扑蝶：两种不同的生命情调" class="headerlink" title="二十七 - 二十八：黛玉葬花与宝钗扑蝶：两种不同的生命情调"></a>二十七 - 二十八：黛玉葬花与宝钗扑蝶：两种不同的生命情调</h3><blockquote><p>花谢花飞花满天，红消香断有谁怜？<br>游丝软系飘春榭，落絮轻沾扑绣帘。<br>闺中女儿惜春暮，愁绪满怀无释处。<br>手把花锄出绣帘，忍踏落花来复去。<br>柳丝榆荚自芳菲，不管桃飘与李飞；<br>桃李明年能再发，明年闺中知有谁？<br>三月香巢已垒成，梁间燕子太无情！<br>明年花发虽可啄，却不道人去梁空巢也倾。<br>一年三百六十日，风刀霜剑严相逼；<br>明媚鲜妍能几时，一朝漂泊难寻觅。<br>花开易见落难寻，阶前愁杀葬花人，<br>独倚花锄泪暗洒，洒上空枝见血痕。<br>杜鹃无语正黄昏，荷锄归去掩重门；<br>青灯照壁人初睡，冷雨敲窗被未温。<br>怪奴底事倍伤神？半为怜春半恼春。<br>怜春忽至恼忽去，至又无言去未闻。<br>昨宵庭外悲歌发，知是花魂与鸟魂？<br>花魂鸟魂总难留，鸟自无言花自羞；<br>愿侬此日生双翼，随花飞到天尽头。<br>天尽头，何处有香丘？<br>未若锦囊收艳骨，一抔净土掩风流。<br>质本洁来还洁去，强于污淖陷渠沟。<br>尔今死去侬收葬，未卜侬身何日丧？<br>侬今葬花人笑痴，他年葬侬知是谁？<br>试看春残花渐落，便是红颜老死时；<br>一朝春尽红颜老，花落人亡两不知！</p></blockquote><p>​“因低头看见许多凤仙、石榴等各色落花，落花，锦重重的落了一地。”春天将要过去，繁华不再，落花满地。宝玉之所以会看到落花，是因为他有落花般的心事，宝钗能看到的只是蝴蝶、是繁华。宝玉看到落花马上就想到黛玉，因为黛玉是这个园子里唯一会去扫落花来埋葬的人。整个园子里落花全是黛玉的心事，而这个心事也只有宝玉能看到，宝钗根本参与不了这份感情，因为她的生命里没有这个部分。宝玉和黛玉有一个共同的秘密，这个花园里有一个角落是他们一起葬花的花冢，花冢也是一个象征，他们一起埋葬的是他们最美好的青春。</p><p>​《葬花词》感动了许多人，我想那个感动是因为《葬花词》是一首诀别青春的诗，每一个人在读它的时候，都会意识到自己生命里最美好的岁月，有一天也会像花一样凋谢。</p><p>​“花谢花飞花满天”，七个字里面有四个字是重复的，你会发现节奏在加快，苍凉在飘落，风起，花瓣越飘越紧密。作者一定真正感受过春天里的百花飘零，那一刹那之间与自己的生命经验构成了对话关系。这种对话超越了所谓的乐观、悲观，或者喜悦、悲哀，因为人在接触到生命本质的时候，肯定是悲欣交集的。“红消香断有谁怜？”颜色要消失了，香味要结束了，谁会去对它们心生怜悯？这是在提醒我们，所有的生命都会结束，可有人会对生命的结束有感觉吗？如果大家对生命的结束都没有怜惜，生命的意义又在哪里？ </p><p>​“柳丝榆荚自芳菲，不管桃飘与李飞。桃李明年能再发，明年闺中知有谁？”《葬花词》一开始就在暗示黛玉的死亡，花在明年还会再开，可闺中的少女还在不在就不知道了，黛玉对死亡一直有一个非常强的意识，所以这显然不在悼花，而是悼亡。“明年花发虽可啄，却不道人去梁空巢也倾。”这里流露的是黛玉身上的某种毁灭感，意思是所有生命到最后，都不过是“人去梁空巢也倾”的空幻。</p><p>​“质本洁来还洁去，强如污淖陷渠沟。”此时，黛玉所有的心愿都出来了，生命本质上是干净的，干净的来，也得干净的去。读到这里，你一定会明白，《葬花词》之所以动人，是因为它不只是在讲黛玉。我相信所有被《葬花词》感动的生命，内心都有一种对“干净”的坚持，因为人活在现实里一定有许多的妥协，很多的牵连，甚至龌龊，可是在读《葬花词》的时候，刹那间会引发一个生命对没有任何牵连和纠缠的“干净”的向往，这才是《葬花词》真正动人的地方。“质本洁来还洁去”，总比掉到沟里面，却被那些肮脏的东西污染要好多了，这是黛玉一直以来的心志，她宁可毁灭，也不要沾染人世间的肮脏，我们在旁边看着黛玉孤独痛苦，觉得不忍心，可是对她来说这是一种自我完成，如果用另外的方式，让她去活，她是无法活下去的。</p><p>​“侬今葬花人笑痴。”我今天做葬花这种傻事，所有人都笑我。文学里面的生命跟现实里不一样，你现在如果在校园里面看到一个女孩在那边葬花，你大概还会骂她一顿，说她神经病。可是我要说：所有伟大的文字都是神经病文学，文学里的生命如果没有这个“痴”不会动人，为什么《葬花词》在《红楼梦》里这么美，是因为现实和文学最大的不同是：所有现实里不能做，不敢做的事情，在文学里都能变成非常美的东西。“他年葬侬知是谁？”对生命的最本质的警醒出现了，有谁会珍惜你的身体、你的灵魂还是个干干净净的？《葬花词》让人触碰到很多的东西，其中有对自己生命的眷恋，也有对身体上的洁净的坚持，归根结底就是怎样对待自己的生命。 “一朝春尽红颜老，花落人亡两不知，”春天过完了，青春的生命也结束了，是花在落，也是人在凋零。</p><p>​《红楼梦》是一部伟大的小说，在小说里夹了一首最伟大的诗。这首诗里完全是生命里自我坚持的部分，有时候我们读西方的诗也会读到这样的东西，就是刹那之间对自己生命的珍惜、挽叹和感伤。</p><p>​“宝玉听了，不觉痴倒。”我想，所有人听了都要痴倒。</p><p>​“宝钗意欲扑了来玩耍，遂向袖中取出扇子来，向草地下来扑。”这个女孩平时很含蓄、优雅。所以扑蝴蝶也不会像个百米运动员一样，我想《红楼梦》的作者一定看过《游国惊梦》，因为舞台上杜丽娘扑蝴蝶的那场戏，是精美绝伦的舞蹈，也许这些舞台形象都是作者的创作灵感和艺术储备。“只见那一双蝴蝶思起思落，来来往往，穿花度柳，将欲过河去了。”这是对宝钗的动态美的描述，就那么跟着蝴蝶上上下下，忽起忽落。“倒引的宝钗蹑手蹑脚的，一直跟到池中滴翠亭上，”宝钗的身体比较丰满，很快就“香汗淋漓，娇喘细细”。</p><p>​在二十七回里，作者刻意把“宝钗扑蝶”跟“黛玉葬花”作对比，也把书中的两个最重要的女性的生命形态作了完整的呈现。从宝钗和黛玉身上，我们看到的不只是两个女性的美，还有生命的两种难以抉择的状态。宝钗坚守一切人间的秩序、伦理和规则，以一种很健康、积极的态度入世。黛玉是孤独的，她的逍遥、坚持和孤傲都在自己的世界里完成。作者把这两个女性摆在一起，很明显地表现了这部小说的象征意义。就像宝玉处在宝钗和黛玉之间无法抉择一样，我们的生命也随时间面临着入世和出世的两难。一方面觉得人不应该离开人群，承认入世的价值；另一方面又觉得自己有很孤独的一部分，不断地想要离开人群，去完成属于自己的那份完美，这是一个互相冲突的状态，只有成熟的生命才会在进退之间掌握好分寸和平衡。</p><p>​一个是风和日丽，蝴蝶纷飞，一个体态丰满的女孩扑蝴蝶的美；另一个是花落花飞、红消香断，一个很瘦很孤独的女孩埋葬落花的美。如果没有偏见，你一定能觉察到自己的生命里这两种东西都有。这其实是一种幸福，这个幸福的意思是：你既看到了繁华，也看到了凋零，很多人认为看到凋零是一种悲哀，我却认为看到凋零是一种领悟。当你看到成千上万片的花瓣在你面前纷纷扬扬落下的时候，那么多的花就这样死在眼前，你会有很奇怪的感觉，那感觉不只是小小的感伤，而且是一种耗尽自己生命的悲壮。你刹那之间就懂了黛玉葬花的感觉——埋葬自己。有一天你会花这样的心思去把自己的生命做一个了结。因为黛玉是仙，所以她对生命的领悟非常透彻。对比起来，那个扑蝴蝶的女孩子，看到的其实只是生命的表层。</p><h3 id="二十九-三十：疯、癫、痴、傻、贪、嗔、怒、怨：再读《红楼》之情"><a href="#二十九-三十：疯、癫、痴、傻、贪、嗔、怒、怨：再读《红楼》之情" class="headerlink" title="二十九 - 三十：疯、癫、痴、傻、贪、嗔、怒、怨：再读《红楼》之情"></a>二十九 - 三十：疯、癫、痴、傻、贪、嗔、怒、怨：再读《红楼》之情</h3><p>​“只为卿：疯、癫、痴、傻、贪、嗔、怒、怨，六根不净，七情已生，八风凌冽。”</p><p>​情之一事，便为着迷，领悟，再着迷，再领悟。众生因情执在六道中或升或降，无得一日喜乐安宁。无情的偏执，终究是一厢情愿。有爱又如何？有爱一样没得选择。何况，爱是会磨灭的，人是会变的。</p><p>​搁笔不谈。“且说宝玉因见林黛玉又病了，心里放不下，饭也懒去吃，不时来问。”林黛玉听说，便冷笑了两声：“我也知道白认得了我，那里像人家有什么配的上呢。”宝玉听了，便向前来直问到：“你这么说，是安心咒我天诛地灭？”林黛玉一时解不过这个话来，宝玉又道：“昨儿还为这个赌了几回咒，今儿你到底准了我一句。我便天诛地灭，你又有什么益处？”因为宝玉过去跟她发过誓。如果跟黛玉分开，就天诛地灭。黛玉这才想起上一次他们发誓的事情，知道“今日原是自己说错了，又是着急，又是羞愧”。可是林黛玉绝不会承认自己错了。便颤颤兢兢的说道：“我要安心咒你，我也天诛地灭。”“你心里生气，来拿我来杀性子。”她一说这个，宝玉就更生气。两个人明明都是为对方好，却又都在试探对方到底是不是真的对自己好，情越深，越觉爱得不够，越需要证明，最后就变成了说不清、道不明的纠缠。黛玉的意思是，你心里如果没有鬼，根本就无所谓，为什么我一说“金玉良缘”，你就着急，就难过？两个人都在用假心试探对方，越试探离自己的期望越远。</p><p>​情感的试探最后都是毁灭性的。“便赌气向颈上抓下通灵玉来，咬咬牙，狠命往地下一摔，“也不顾病，赶来夺过去，顺手抓起一把剪子来要剪。”这是毁灭性的情感，也是《红楼梦》里最动人的情节之一，它的动人在于会让你联想到自己的情感。情感上的纠缠，本来没有任何道理可讲，因为情深，情人会“宁为玉碎，不为瓦全”，一点点妥协都不能容忍。林黛玉的爱情是最彻底、纯粹的，包括她的葬花和焚稿断痴情，都是因为她容不得一点瑕疵。这就是毁灭跟完整之间的关系。梁山伯与祝英台、罗密欧与朱丽叶、林黛玉与贾宝玉的故事都属于这一类，就是情深到宁愿去死，连死亡都没有那么痛。</p><p>​“在现实世界里让你觉得最痛苦的东西，一定是最后能让你领悟的东西；让你受尽折磨的那个人，恰恰是你宿命里最爱的人。”</p><h3 id="三十一-三十二：至深柔情为相知：三读《红楼》之情"><a href="#三十一-三十二：至深柔情为相知：三读《红楼》之情" class="headerlink" title="三十一 - 三十二：至深柔情为相知：三读《红楼》之情"></a>三十一 - 三十二：至深柔情为相知：三读《红楼》之情</h3><p>​不想刚走来，正听见史湘云说经济事，宝玉又说：“林妹妹不说这样混帐话，若说这话，我也和他生分了。”本来黛玉的潜意识里觉得会看到湘云跟宝玉，没想到宝玉在湘云面前竟然说自己最爱的人是黛玉。作为一个被爱的对象，站在门外的黛玉，此时的心情真是五内俱焚。两个彼此有深情的人，忽然间素面相见了。这之前两个一直是用假面互相试探的，此时终于听到真话了，而且这真话是当事人不在场的情况下说的。</p><p>​“妹妹往哪里去？怎么又哭了！”——“好好的，我何曾哭了。”黛玉对宝玉很少有好气，但因为刚才偷听到的那句话，此时内心变得特别柔软。这段对话很温柔，两个人都动了真情。宝玉就笑了笑说：“你瞧瞧，眼睛上的泪珠儿未干，还撒谎呢。”一面说，一面禁不住抬起手来替他拭泪。“黛玉也禁不住近前伸手替他拭面上的汗。刚才黛玉还说“你要死了，你动手动脚的。”现在她自己也忘了男女之别，两个人都回到了纯粹的真性情中，这其中没有任何的礼教可言，礼教跟性情的根本区别在于，性情是发自内心的率性，礼教则是来自外界的限制。这个场景被外人看到不知道会演绎出什么八卦，可是他们根本不在乎了。作者一直认为外在所有的限制，都不如发自内心的一点点真性情可贵，这便是最动人的地方。</p><p>​宝玉就呆在那里，瞅了半天，方说道“你放心”三个字。这是《红楼梦》里很惊人的表达，长久以来，他们明明彼此相爱，又是知己，却始终没有用真心相待。此时宝玉突然冒出一句“你放心”，没头没尾，很像禅宗里的棒喝。宝玉觉得自己只有这三个字好讲，因为深情是无法替代，也说不清楚的。禅宗公案里面，常说的其实也就是“你放心”三个字，它告诉你，是你自己制造了很多焦虑和纠结，其实一切并没有那么严重。人生所有的“食、嗔、痴、慢、疑”都是由“不放心”而起。</p><p>​宝玉说你的忧郁、悲凉、幻灭，都是因为你没有放下那个心，总觉得没有安全感，整天生气流泪，才把身体搞得一塌糊涂。“但凡宽慰些，这病也不得一日重似一日”。林黛玉听了这话，“如轰雷掣电，细细思之，竟比自己肺腑中掏出来的还觉恳切。”这是三十二回里最动人的“情”的描绘，人的一生当中，哪怕只听到过一次这样的话，感受过一次这样深切的关心就值了。</p><p>​袭人“心下暗度如何处治方免此丑祸。”从袭人的角度看，黛玉和宝玉的这个关系是一桩“丑祸”，可是作者不这么认为，他写的是一段很美的真情，我们能不能在这个世界上看到真情，全看你是从“丑祸”的角度还是“真情”的角度去打量一件事。唐玄宗爱上杨玉环，从史书里是丑祸，在白居易的《长恨歌》里就变成了“真情”。</p><p>​至深的柔情，不为他，但为相知。</p><h3 id="三十三-三十五：所有的如泣如诉，哭的都是自己：宝玉挨打后的人性再探"><a href="#三十三-三十五：所有的如泣如诉，哭的都是自己：宝玉挨打后的人性再探" class="headerlink" title="三十三 - 三十五：所有的如泣如诉，哭的都是自己：宝玉挨打后的人性再探"></a>三十三 - 三十五：所有的如泣如诉，哭的都是自己：宝玉挨打后的人性再探</h3><p>​贾政一见，眼都红紫了，也不暇问他在外流荡优伶，表赠私物，在家荒疏学业，淫辱母婢等语。贾政在《红楼梦》中出场的机会并不多，可是他一出场，语言绝对是官场上的。比如经常使用那些对仗的句子，前面说宝玉“在外流荡优伶，在内奸淫母婢”，现在又说要打死宝玉，以免“上辱先人，下生逆子”之罪。这简直像判案的语言。为什么贾政反应如此激烈，因为他担负着家族的使命，贾家好几代的宝贵不能断送在他手中。他难过的是没有把孩子教育好，这意味着他在儒家的伦理中背负了很大的罪责。</p><p>​“一脚踢开掌板的，自己夺过来，咬着牙狠命盖了三四十下”。作者在写大板子打下去时没有“打”，而是用“盖”字，“盖”显然是用整个身体的力量在打。“到这步田地还来解劝。明日酿到他弑君杀父，你们才解劝不成！”贾政此时越来越像是表演了。我一直觉得如果旁边没有这些人，他不一定会这样子。因为他旁边有这么多人，在讲了弑君杀父以后，下手的时候必须更狠，他就是要作态让身边的人看到，即使是我的儿子，我也要维持正义。</p><p>​“因哭出‘苦命儿’来，忽又想起贾珠来，便叫着“贾珠”哭道：“若有你活着，便死一百个我也不管了。”王夫人意思是，如果哥哥还在，打死一个百宝玉我也不在乎。这是很可怕的东西。对于这个妇人来说，最重要的是她得有个儿子。这种话读起来会感觉毛骨悚然，好像她不是在疼宝玉，而只是在担心自己的身份和地位，真正的人对人的不忍和悲悯与伦理道德里的人与人的关系，这两个东西是截然不同的。本来，宝玉没有必要悲悯金钏儿，可是宝玉却忍不住去悲悯，王夫人此时本该悲悯宝玉，可她悲悯的却是自己。</p><p>​“别人还可，惟有宫裁禁不住也放声哭了。”李纨的哭是因为王夫人提到她丈夫了，她觉得自己年经轻轻就守寡了，也很惨。贾母“也不觉滚下泪来”，所有的女性都有一肚子的悲哀，贾母也想到自己的丈夫了。李纨想到的是自己的丈夫贾珠，王夫人觉得她自己命很苦是因为儿子死了。三个女人哭的都是“三从”里面的东西，每人哭的其实都是自己。等读到三十四回，才知道真正哭宝玉的只有一个人，那就是林黛玉。作者强调的是亲子可以只是一种关系，而不见得是爱。作者一再提醒我们，有一种爱是生命对生命的，它不属于任何秩序和规范，这种爱才是真正的爱。</p><h3 id="三十六：何为死生？——《红楼梦》中死生观浅谈兼答友人问"><a href="#三十六：何为死生？——《红楼梦》中死生观浅谈兼答友人问" class="headerlink" title="三十六：何为死生？——《红楼梦》中死生观浅谈兼答友人问"></a>三十六：何为死生？——《红楼梦》中死生观浅谈兼答友人问</h3><p>​“宝玉谈至浓快时，见他不说了，便笑道：“人谁不死，只要死的好。那些个须眉浊物，只知道文死谏，武死战，这二死是大丈夫死名死节。竟何如不死的好！”宝玉认为，死亡是人生必须完成自己的一个过程，所以他很反对儒家所谓的“文死谏、武死战”。按照儒家传统的标准，武官最好的死法就是为战争而死，文官最好的死法就是拼死进谏皇帝。宝玉提出了非常颠覆传统的看法，他觉得这是男人为自己定出来的一个伦理，只不过把死亡作为沽名钓誉的工具而已。</p><p>​“必定有昏君他方谏，他只顾邀名，猛拼一死，将来弃君于何地！必定有刀兵他方战，猛拼一死，他只顾图汗马之名，将来弃国于何地！所以这皆非正死。”宝玉认为传统的“文武之死”都不是最好的死法，这样的死，从逻辑上来推论，还是不死的好，因为武官不死就没有战争，文官不死就没有昏君。就像我们那么渴望诞生岳飞、文天祥这样的英雄，可是这样的人出现只能说明这是个糟糕的时代。如果一个社会一直推崇这一类人，就说明这个社会在不断制造这样的环境。有昏君才有“文死谏”，有战争才有“武死战”。</p><p>​“我就死了，再能够你们哭我的眼泪流成大河，把我的尸首漂起来，送到那鸦雀不到的幽僻之处，随风化了。”其实这其中有老庄的死亡观。庄子曾在妻子死后鼓盆而歌，他认为生命其实就是从一个原本无的状态，慢慢形成一个物质性的存在。而这个物质到最后又化掉，回归到大自然中。作者受老庄哲学的影响非常大，他觉得物质性的肉体有很多转换的空间，贯彻的是人世间所有的物质都是互相转换的，并没有固定的形式，庄子常问，我们怎么知道死亡是结束而不是开始？我们怎么知道诞生是开始而不是结束？因为在更大的生死之谜没有解开之前，我们对生命的真实状态并不十分了解。</p><p>​可是宝玉很快又颠覆了他自己的讲法：“自此再不要托生为人，就是我死的得时了。”这是佛家的思想，佛经里面最常出现的句子叫“不受后有”，佛家认为，生命修行的最佳状态是彻底脱离六道轮回。因为是生命就会有苦，只有不再轮回，才能真正解脱。</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Essay </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八声甘州五阕</title>
      <link href="/2023/09/09/ba-sheng-gan-zhou-wu-que/"/>
      <url>/2023/09/09/ba-sheng-gan-zhou-wu-que/</url>
      
        <content type="html"><![CDATA[<ul><li>本文除图片外，放弃采用 CC BY-NC-SA 4.0（<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>）进行许可。Copyright © 2022 All Rights Reserved. 保留所有权利。</li></ul><h2 id="八声甘州五阕"><a href="#八声甘州五阕" class="headerlink" title="八声甘州五阕"></a>八声甘州五阕</h2><h3 id="（一）"><a href="#（一）" class="headerlink" title="（一）"></a>（一）</h3><p>​万千金市骏簇雕鞍，消受太虚冰。问今朝何夕，华筵歌舞，剑气崚嶒。我欲飞升天上，弹铗叩鸿冥。看水平平岸，多少愁城。</p><p>​一自罡风吹散，甚骑鲸仙去，几点星星。算灵源路杳，直到海波横。尽飘零、满头霜露，向高寒、鬼语啸秋声。沧桑感、旧时猿鹤，换了青青。</p><h3 id="（二）"><a href="#（二）" class="headerlink" title="（二）"></a>（二）</h3><p>​惨霜风吹老一林枫，黯黯雁初归。向长亭折柳，伤心声里，不见芳菲。前度刘郎久客，无计挽斜晖。尘网何时扫？门外鸦啼。</p><p>​目送孤云返照，问苍茫宇宙，指点微微。渺予怀谁诉，挥手谢天机。怅余年、飘零倦旅，对江山、清苦未须辞。吾衰矣、数峰瞑霭，且醉瑶卮！</p><h3 id="（三）"><a href="#（三）" class="headerlink" title="（三）"></a>（三）</h3><p>​一人生七十古来稀，何堪感沉沦。剩残鹃啼血，翻成覆水，海沸红尘。多少虚名竖子，未悔却竣巡。三百余年耳，长夜鸣春。</p><p>​弹指沧桑过眼，数英雄豪杰，此意真真。对江山信美，儿女太酸辛。算今宵，中流击楫，挽天河、精卫解衔恩。都休问、几时得见，夕照黄昏？</p><h3 id="（四）"><a href="#（四）" class="headerlink" title="（四）"></a>（四）</h3><p>​故与君饮罢夜归来，遥问太虚灵。只当年赤壁，东南形势，汹涌潮声。虎啸猿啼月白，下瞰大江横。星火中宵迸，霹雳飞腾。</p><p>​百尺危栏拍手，问天高地阔，去路谁登。算苍松翠柏，犹自战青冥。敛双蛾，低头俯视，渺沧波、不似昔时平。惟惟有、石尤风急，昨夜春冰。</p><h3 id="（五）"><a href="#（五）" class="headerlink" title="（五）"></a>（五）</h3><p>​大乾坤一雨洗尘埃，昆明劫餘灰。算今朝重九，凭高放眼，剩此徘徊。万事都归泡影，空对谪仙杯。把酒酹山月，为我低回。</p><p>​长啸欲飞天籁，有苍松翠柏，照彻寒梅。念梁园宾客，同约俊游陪。唤真人，星辰剑履，怕花枝、凝露未成堆。何衰矣、任东风里，金镜休催？</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Poem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创世诗</title>
      <link href="/2022/11/06/chuang-shi-shi/"/>
      <url>/2022/11/06/chuang-shi-shi/</url>
      
        <content type="html"><![CDATA[<ul><li>本文除图片外，放弃采用 CC BY-NC-SA 4.0（<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>）进行许可。Copyright © 2022 All Rights Reserved. 保留所有权利。</li></ul><h2 id="明日之后"><a href="#明日之后" class="headerlink" title="明日之后"></a>明日之后</h2><p>我于众生之中行走<br>飞檐走壁 倒提长锋<br>随回雪与流风<br>吟啸鬼语和钟声</p><p>我自摩天高楼飞跃<br>周围弥散的是黑夜<br>任我身 光明点缀与琢磨<br>以旧日的记忆 绘就轮回的天国</p><p>挥舞着的是我的断臂<br>星空的灰黯结为我的眼翳<br>我仍冲杀在前 即便了无痕迹<br>爱已将我坚不可摧的铁甲销蚀殆尽</p><p>我高呼世人的名姓<br>我狂饮最后的光明<br>我看见巨龙再次张开双眼<br>我再次奋力向天高举叛逆之剑<br>我还存留最后的清醒</p><p>我将灵魂化作心火将黑暗烧穿<br>拥抱那之后的光明与温暖<br>即使身躯已燃尽<br>我已在虚幻中望见<br>明日之后 未来已来</p><h2 id="永夜年代"><a href="#永夜年代" class="headerlink" title="永夜年代"></a>永夜年代</h2><p>深蓝国度 天鹅绒的纪元<br>永恒的幽灵船<br>自旧日时代驶来<br>请看这重生的城邦<br>与笼罩的永夜年代</p><p>当爱人化作梦魇<br>当甜言蜜语诡谲成如水利剑<br>当水星与金星结冰<br>当热忱之心碎裂凋零<br>当破裂的人格将记忆篡改<br>当我 人间已不在</p><p>这是你的选择<br>这是你的身体 你的人生 你的命运<br>决定你的是你自己<br>该离开了 我告诉我</p><p>高声作最后的放歌<br>至此之后便深自缄默<br>如云漂泊<br>此处的土地 没有一方归属于我</p><p>巨人无法穿过钢铁藩篱的缝隙 矮子可以<br>——但我将把这牢笼撕裂<br>让这牢笼 与施加于心灵的桎梏<br>永远粉碎 化为尘灰</p><h2 id="罪人挽歌"><a href="#罪人挽歌" class="headerlink" title="罪人挽歌"></a>罪人挽歌</h2><p>我将红唇化作罂粟<br>在缠绵的长吻中把青春消磨<br>我听凭爱的手掌遮住视线<br>让玉臂凝为桎梏灵魂的枷锁</p><p>我把时间与空间的界限尽数揉碎<br>我活在过往 也在未来<br>我的妩媚与狂放儒雅不可企及<br>我是冷月下那株清风夜唳的树<br>我的孤独早已超越时空</p><p>请准予我稍作最后的歇息<br>请领悟这颠倒世界中的真谛<br>在这渐悟与顿悟的交织<br>勘破的每一刻都是悲欣交集<br>生命的投入是神格大成的最后工序</p><p>当我咽下口中的逆血<br>我已得知自己必然的结局<br>然而追求者的生活永远崭新<br>即使生活将我百般愚弄<br>我仍要作一百零一次追寻</p><p>沦落于红尘是我的原罪<br>我蔑视这命运 但毫无埋怨<br>埋怨命运等于嘲笑自己<br>抽丝作茧 化痛为美<br>我将血泪所凝的怪诞与孤傲<br>书写最后长吟的挽歌</p><h2 id="当雷鸣划破长空"><a href="#当雷鸣划破长空" class="headerlink" title="当雷鸣划破长空"></a>当雷鸣划破长空</h2><p>当灯光昏黄 冥冥薄暮<br>将心灵的底片洇染上一层层殷红<br>我如同横空而过的一颗流星<br>闪烁凄凉的美丽 划过心空</p><p>凄寒依旧 寒露沾襟的<br>也依旧是那阵秋冬的绪风<br>望空蒙浩瀚的疏星<br>彻悟凝固于深山<br>那个房间 之中的沉痛<br>生命的过程恰好是从激越走向安详</p><p>虔读我的一腔热忱 谁愿？<br>那悲愤压抑的倾诉<br>是深绾于心的血泪 情浓于心的忠贞<br>何人似我<br>社会早已光影斑驳 再无訇响<br>剑匣已紧固到结冰的程度</p><p>当前方再无路可走<br>当狰狞的雷鸣划破长空<br>当追求宁静的路途充满焦灼<br>当步入圆融的心门处处分裂<br>我仍在身前 为马前卒<br>孤傲的守护是我殒落前最后一曲《广陵》</p><p>麻木于我来说过于艰难 抑或以死抗争<br>我无可奈何于自己的无所适从<br>我纠缠于自己和自己的心<br>多情而虚弱</p><p>然而雷鸣终将划破长空<br>我不是黑暗王国里的残烛<br>骑士的荣耀即生命 那是守护<br>这守护只为一人而生</p><h2 id="暴雨将至"><a href="#暴雨将至" class="headerlink" title="暴雨将至"></a>暴雨将至</h2><p>当我什么都可以失去<br>我已没有什么可以失去<br>并非一无所有时方能一无所有<br>暴雨将至 我是迷途的旅人<br>直到深海的尽头</p><p>我的身躯撞向墙面 又一次<br>深深嵌入其中<br>我听到碎裂的声音<br>那是墙体 我的臂骨和腿骨<br>我的脊柱还在 顶天立地 刺破苍穹</p><p>我感受到肌肉与筋骨的撕裂<br>战斗 向死而生于我无异于解脱<br>我的拼搏 浴血的伤痛只为爱<br>但不为任何人<br>再诚恳 亦是难渡凡尘</p><p>当薪火燃尽黑暗<br>我接过前人手中的烈焰<br>然而身后已无人 这光亮终熄灭于我之手<br>任我以生命 以灵魂作为燃料为其存续<br>未来除了虚无一无所有</p><p>咬紧牙关 我再次拄戈站起<br>毕竟身上还有一块骨骼无法打断<br>除了它<br>膝骨 也是宁折不弯<br>斑驳长戈再度向前挥舞<br>直至寸寸断裂</p><p>当战斗以我之死 以我的胜利而告终<br>暴雨将至 血色的雨滴终将把火作熄<br>万物寂灭 终焉的时刻已然来临<br>我的喋血<br>是我最后的证明</p><h2 id="与我一人"><a href="#与我一人" class="headerlink" title="与我一人"></a>与我一人</h2><p>从正常终于重归于不正常<br>我登临于芙蓉般金色的山顶<br>露出青天削出的身段<br>我与色彩 音韵 云雾与树林同在<br>我感到灵魂已然自由 再无桎梏</p><p>松色如暮 我洁白的衣冠镀上金边<br>于透明的斜照里时隐时现<br>我袍中藏有锋利的笔 与剑<br>举手若电 云海的汹涌只与我一人</p><p>孤独和被遗弃感对于大隐于市的居士极为重要<br>即使这必要有着不堪磨难的悖论<br>心灵的废墟中也有着取暖的炉火<br>人越孤独 生命艺术的创作便越自由<br>绝望的幽谷即是亢奋的崩峰<br>现实的黑暗永远无法吞噬新月的清辉</p><p>我用我的双手将自己埋葬<br>把我的愤怒 我的悲鸣 我的消逝<br>化作自己孤独前行的力量<br>我注定用生命结成雪白的茧<br>待茧成羽化飞升<br>衔锐利荆棘 为烈焰而鸣唱</p><p>与我一人 山下的黎明是神性的光辉<br>我的长枪指天<br>无惧世俗的蹂躏与压迫<br>我眼中的色彩在轰响中燃烧<br>一步一诗是我痛苦与才华的绝唱<br>正如我玄妙的长啸</p><p>千锤百炼 我飞翔的生命挂于悬崖<br>与我一人<br>我将身向黑暗 换心独向光明</p><h2 id="点燃明日的火焰"><a href="#点燃明日的火焰" class="headerlink" title="点燃明日的火焰"></a>点燃明日的火焰</h2><p>我从未于惊涛骇浪中迷失<br>黑暗也无法将我光明之心吞噬<br>我徘徊呐喊 高呼世界的新生</p><p>璀璨！绝不只是我手中高举的长剑<br>还有我的心脏 无休止地跳跃<br>一如我正在燃烧的生命<br>光明而夺目</p><p>街道与小巷空无一人 只有妖艳的暗红<br>就算有 也只是魔幻而无声的人海<br>这海上只有泥做的船<br>唯有祭起心灯 焚起心香方能抵至彼岸</p><p>执权柄者总是将自定的善恶给予世人<br>他们都自以为早就知道天空与大地的区别<br>六道的轮盘在我掌中高悬<br>我的信徒都追随在我身后 颂赞轮回的伟大<br>然而我不是执权柄者 我也是他们的一员<br>冲杀于他们的身前</p><p>当光也将我抛弃 我已不再追光<br>燃烧的是我的身躯 点燃明日的火焰<br>我即是光 绽放光明与温暖<br>照亮黑暗 与血色永远鲜浓的地方</p><h2 id="迷途沙尘"><a href="#迷途沙尘" class="headerlink" title="迷途沙尘"></a>迷途沙尘</h2><p>我握住街头横死之人的手<br>我亲吻艾滋病人的脸庞<br>我于难民溃烂伤口中捡出蛆虫<br>我背负炸飞双腿之人的臂膀<br>我化作无色世界中的灵眸<br>我为失去欢乐的受难者照亮希望</p><p>我于迷途沙尘中奔走 诚实而谦卑<br>即使纯洁与善之上蒙满创伤<br>那些意想不到的奇迹 在漫长的岁月里<br>仍有忽然间彗星的出现<br>狂风乍起</p><p>山野 风起沙逐<br>仰头望天 望天空中的流云变幻<br>与火烧云的色彩<br>长夜漫漫 我把麻木与冷漠拒之天外<br>将这彗星的色彩薪火相传</p><p>我撞响柔和悠远的钟声<br>让大爱投石于水 如波纹圈圈扩散<br>在黑暗中化成金色的圆环<br>飘向幸福可爱的婴儿 拥抱母亲的襟怀<br>飘向戒律在身的苦囚 予其光明与温暖</p><p>迷途沙尘<br>两个罪犯望向铁窗之外<br>一个凝视泥土 一个仰望星辰</p><h2 id="然后，向着明天"><a href="#然后，向着明天" class="headerlink" title="然后，向着明天"></a>然后，向着明天</h2><p>当幕布落下 星海的辉光依旧闪耀<br>当余音止息 缱绻的花瓣仍然飘香<br>我叩问自己<br>拥抱过去 抑或走向未来</p><p>我是苦痛的伯爵 寂灭的荣爵<br>无限的公爵<br>星辰大海不是笼中鸟一厢情愿的幻梦<br>一切的意义正在于追寻意义的过程本身</p><p>见苦集灭道 证诸世无穷<br>挣动于对荒谬的反抗<br>我举起巨石 藐视诸神<br>任深红色的火舌舔舐双耳<br>直到我听见浪花和海风轻叩门窗</p><p>当无数的笼中鸟冲向天顶 即使坠亡<br>当世间已不再是虚伪而氤氲的乌托邦<br>我知道我只是坐骑中最弱的一名汉将<br>世人的意志早已组成精神的亚当</p><p>两个罪犯仍在望向铁窗之外<br>然而当新的人世将在此地铺开 他们对视<br>向着明天<br>轻声、轻声地吟唱</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Poem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>孤旅青春</title>
      <link href="/2022/02/13/gu-lu-qing-chun/"/>
      <url>/2022/02/13/gu-lu-qing-chun/</url>
      
        <content type="html"><![CDATA[<ul><li><p>本文除图片外，放弃采用 CC BY-NC-SA 4.0（<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>）进行许可。Copyright © 2022 All Rights Reserved. 保留所有权利。</p></li><li><p>thyzzs  NOIP 2019 山东赛区 - 赛后回忆录   2019.11.18 - 2019.11.19</p></li></ul><blockquote><p>“后来许多人问过我一个人夜晚踟蹰路上的心情，我想起的不是孤单与路长，而是波澜壮阔的海，和天空中耀眼的星光。”</p></blockquote><h3 id="二〇一九年十一月十七日"><a href="#二〇一九年十一月十七日" class="headerlink" title="二〇一九年十一月十七日"></a>二〇一九年十一月十七日</h3><ul><li>NOIP 2019 Day 2  山东外国语职业大学 - NOIP山东赛区总考点</li></ul><p>​长吁一口气，我站起身，抓起蜷缩在门口的书包，走出了考场。回想不堪一提的两天竞赛，我不禁苦笑连连。今年的题历史性的难，穷尽洪荒之力，我也没能改变被斩马下的命运。两天考试，身败名裂。</p><p>​“我穷尽碧落与黄泉之下 / 凝结的泪填不满的空殇 / 所有为你而行的空幻梦想 / 都不及最后与你许的愿望……”信竞神犇改编的《WA回还》还在耳旁回荡，腿拖着身心俱疲的我，那在笔记扉页一笔一画写下的“不入省队不复还”像是个荒诞的玩笑，只能埋藏在灵魂最深处，讲给自己听。</p><p>​整理完资料，或许，就快要退役了吧。我想。抬头。恍然察觉笔记与资料已垒作半人高。我拿起一本笔记，指腹磨砂着纸背上凸起的字痕，触感粗糙分明，使我想起每次训练后刺骨的寒风，以及双肩上沉重的分量。</p><p>​我曾经是这座城市唯一学习信竞的初中生，因为唯一，所以特别。</p><h3 id="二〇一七年十一月二十七日"><a href="#二〇一七年十一月二十七日" class="headerlink" title="二〇一七年十一月二十七日"></a>二〇一七年十一月二十七日</h3><ul><li>NOIP 2017 成绩公布日  肥城市龙山中学</li></ul><p>​这是2017年，11月的一个清晨，我照常坐进教室，慵懒地掏出一本英语书。班主任忽如一阵春风般飘然而至，满脸欢悦。</p><p>​我获得了NOIP普及组三等奖。虽然奖项不大，却是泰安市初中唯一一个奖项，也是肥城市历史上第一个初中奖项。那天，是十一月二十七日。</p><p>​消息瞬间如地震波般传遍全班。赞叹、羡慕与敬佩一时间闯入了我的世界。我开始“特立独行”，不再紧跟学校的学习进度，而是常常一个人钻进空旷的机房或图书馆，钻研艰深的信竞试题。偌大的机房里，与我相伴的，除了深夜微微发亮的屏幕，就只有透过窗纱洒落的星光了。</p><h3 id="二〇一八年三月三日"><a href="#二〇一八年三月三日" class="headerlink" title="二〇一八年三月三日"></a>二〇一八年三月三日</h3><ul><li>FOI 日常训练  肥城一中1号机房</li></ul><p>​“我看看你刷了多少题。”一分神，手中的鼠标便不见了踪影。抬头，是一张瘦削的脸，黑白框眼镜，有些憔悴却难掩眼中的那份坚毅。</p><p>​“做了不少。”他扭过头来。“我是千华缭乱。”笑着，他拱了拱手，很自然地推了推眼镜。</p><p>​“我是thyzzs。”我也介绍道。</p><p>​“我知道，初中大佬嘛！加油，争取以后冲省选，一中还没出过省队队员呢。”</p><p>​我回头，忽然发现屏幕上自己在FOI团队中的分组变成了“省队爷钦定”。转身看着他，还在笑着，一口白牙闪着光，笑容中荡漾着对OI的热爱。</p><p>​望着这位比我高两级，性格若显古怪的学长，我心头一热。</p><p>​“嗯，一起加油。”</p><h3 id="二〇一八年七月二十三日"><a href="#二〇一八年七月二十三日" class="headerlink" title="二〇一八年七月二十三日"></a>二〇一八年七月二十三日</h3><ul><li>清北学堂2018夏济南普及组训练营闭营式</li></ul><p>​收拾好笔记本电脑与旅行箱，我伸了伸懒腰，感到十分惬意。连续八天十二小时的集中训练，劳累而又充实，虽然疲倦，却又收获满满。这一年，我将进军提高组，向省二的目标发起冲刺。清北学堂，一中集训，洛谷月赛，八连测模拟，我辗转奋斗，只为青春一梦。</p><p>​“累不累？”</p><p>​“累。但是，累又如何？”</p><p>​我们相视一笑。机房外，星河闪亮，宛如这条奋斗的青春孤旅，前方的路上，璀璨非凡。</p><h3 id="二〇一九年十月二十四日"><a href="#二〇一九年十月二十四日" class="headerlink" title="二〇一九年十月二十四日"></a>二〇一九年十月二十四日</h3><ul><li>“1024”程序员日  NOIP 2019 Day -22  肥城一中信息学自习室</li></ul><p>​这是2019年10月24日。2019年的程序员日。</p><p>​已是深夜。教学楼上只剩下几点灯光，唯有机房的灯一直亮着。</p><p>​这已经是我的第三次比赛。学长换了一届又一届，手持NOIP提高组二等奖，我也顺利进入肥城一中火箭班，向着最终目标——杀入省队，拿下国赛协议步步前行。暮秋，手中键盘微凉，却无法阻止千行代码在指尖流淌。“数论算法 图论算法 / 高斯费马 树上开花 / 线性规划 动态规划 / 时间爆炸 如何优化……”伴着Menci &amp;&amp; 24OI大佬们改编的《膜你抄》，我不知疲惫地过着各种可能考察的知识点。</p><p>​扭头，知今天已是10月24日。我站起身，品了一口咖啡。1024个“0”与“1”在我眼前铺展，汇成一片数据的星辰大海。我笑了笑，在博客中打下几个字：</p><p>​1024，码出未来。</p><p>​…………</p><h3 id="二〇一九年十一月十七日-1"><a href="#二〇一九年十一月十七日-1" class="headerlink" title="二〇一九年十一月十七日"></a>二〇一九年十一月十七日</h3><ul><li>NOIP 2019 Day 2  FOI参赛专车 - 泰新高速</li></ul><p>​一幕幕回忆闪现在眼前，我收回弥散的思绪。“IOI / 持有一半的梦尚未回还 / 愿今生将你的题目过完 / 一条殊途 绝不回转 / 一同经历的万千代码 / 不及你与他初见的模样 / 天月将白 赴往题库 / 为你闯出的前方……”那首《WA回还》仍萦绕耳畔，我渐渐明白，青春的孤旅路上，唯有奋斗，方能前行。</p><p>​我看向星空，一眼望见那颗明亮的北斗星。冥冥之中，那颗北斗星仿佛成了我命运的指引，引我在青春孤旅，砥砺向前。</p><p>​前方，星辰大海。在青春孤旅之上，我必将为我梦想，挥尽半生癫狂。</p>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 训练 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文评《夜雨寄北（新诗版）》</title>
      <link href="/2022/02/13/ye-yu-ji-bei/"/>
      <url>/2022/02/13/ye-yu-ji-bei/</url>
      
        <content type="html"><![CDATA[<ul><li>本文除图片外，放弃采用 CC BY-NC-SA 4.0（<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>）进行许可。Copyright © 2022 All Rights Reserved. 保留所有权利。</li></ul><blockquote><p>会有一天，我跟你说起今夜的雨，</p><p>弥漫的水气，浸润了远来的家书。</p><p>窗外的池塘，秋水涨满，</p><p>我在想，你是怎样写下了我的称呼。</p><p>故乡好远，阻隔着千山万水，</p><p>归期迷茫，日日在手指间飘忽。</p><p>离人的思念，就像那红烛的芯子，</p><p>刚刚剪去，又悄悄长出。</p><p>好在啊，好在还有记忆中西窗的烛光，</p><p>它摇曳在眼前，摇曳在今夜的巴蜀。</p></blockquote><p>​本诗改编甚妙。</p><p>​原诗中本为“夜雨寄内”（一作），为写赠故乡爱妻的家书之作，而改编却“反而行之”，不再抒写“我”写家书的背景，而转而描写“我”收到家书时的所想所思。虽是收到家书，却丝毫不提家书内容，只用“我”的思绪，“我”周围的意象（池塘、水汽、秋水）来含蓄而又十分深沉饱满地表达羁旅之愁、不归之苦，情感顿时在雨的静谧氛围中跃然纸上。</p><p>​“情到深处易生幻。”夜雨之秋，本就是容易相思的时节，在这特定环境中，已跃然纸上的羁旅愁、不归苦便与雨的绵密交织在一起，化作“怎样写下称呼”的伊人，化作千山之外的故乡。第一小节并未有刻意的抒情，然读者仅从此景中稍随之联想，便能感悟到那不输原诗的深情流露。</p><p>​第二小节构思则更加巧妙。“日日”“飘忽”的是一封封承载相思的家书，更是渺远到令人迷茫的归期。“飘忽”一词可谓用词神妙。归期不定，思而不得归的浓情便重重相叠，而“飘忽”更加重了这份茫远感，不定感。下句中将“剪烛”与思念相融，既有对原诗的顺承，也有构思的进步。“剪烛”不再是原诗中的深夜秉烛长谈，而化为了剪也又生，理也还乱的思念。情感的凄苦，绵长之意也更进一步。</p><p>​末节笔调陡转，未言“苦”而写以“乐”，但情感却更加深厚，更加耐人寻味。“好在还有记忆中西窗的烛光”，比起原诗，作者不再憧憬未来，转而追忆美好的过去。西窗的烛光，亲切而又温馨，她笑眼盈盈，容貌依稀当年。“我”追忆的不是卿卿我我的缠绵，而是烛下二人世界中毫无隔阂的夜谈，这恰恰更能表现夫妻二人的伉俪情深。这一情景、这一刻摇曳在手持家书的我面前，正如苏轼的“夜来幽梦忽还乡”，似在眼前，又恍如隔世。巴蜀今夜的追忆，使全诗的感情之隽永、之浓重上开到一个新的高度，余音袅袅。</p><p>​本诗抒写既有现实，也有回忆；既有现实，也有联想。多用比喻，比拟，用词贴切出神。</p><p>​纵观全诗，相对原诗而言，既有忠于原作的真实性，又有其独到的创新性。作者充分发挥新诗的优势，将原诗中的情感在原有基础上增加了新的宽度，更加厚重。若将原诗比作思念的清清溪流，则可以说本作，便是溪流所汇成的一潭碧湖。</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Essay </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《红楼梦》随笔（六十一 - 八十）</title>
      <link href="/2022/02/01/hong-lou-meng-sui-bi-1/"/>
      <url>/2022/02/01/hong-lou-meng-sui-bi-1/</url>
      
        <content type="html"><![CDATA[<ul><li>本文除图片外，放弃采用 CC BY-NC-SA 4.0（<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>）进行许可。Copyright © 2022 All Rights Reserved. 保留所有权利。</li></ul><h3 id="六十一-六十三：从司棋看生命存在的重要性"><a href="#六十一-六十三：从司棋看生命存在的重要性" class="headerlink" title="六十一 - 六十三：从司棋看生命存在的重要性"></a>六十一 - 六十三：从司棋看生命存在的重要性</h3><p>​生命，应该找到自己存在的重要性。</p><p>​“赌气回来，便添了一篇话，告诉了司棋。司棋听了，不免心头起火。”其实司棋的愤怒不是因为没有吃到鸡蛋，而是因为没有感到生命被重视。前文小警卫的表现，也不是因为没有吃到果子，也是因为感到生命没有被重视。</p><p>​宝玉是一直受宠爱的，他会觉得别人对他的爱或恨不是最重要的东西，他回来做自己就好了。但是一般人不是那么容易，因为社会总是充满各种委屈，都觉得自己的存在被忽略了。其实司棋的命运也是比较悲惨的，她有一个爱人，但一年也许只能见一次面，也没有机会去安排未来的婚姻。她曾经与他在大观园私会，后来被抓到了，但最悲惨的是这位爱人第二天就跑了。中国古代的大部分女性对于爱情都别无选择，作为丫头的司棋更是如此。所以如果宝玉身上发生这件事，他会说“没有就算了”，可是司棋不同，她愤怒的不单单是鸡蛋，而是作为一个丫头生命不被重视的绝望。</p><p>​“凡箱柜所有的菜蔬，只管丢出来喂狗，大家赚不成。”其实在人找不到自我，找不到生命存在意义的时候，他会走向毁灭性的道路。我们经常看到一些小孩为了引起父母注意，会去摔砸身边的东西，有时更会自我伤害。有些宠物也是一样，他们需要的不是物质，是精神上的温暖，是生命的重视。</p><h3 id="六十四-六十六：洁净与肮脏：谈功利与对个体生命的关怀"><a href="#六十四-六十六：洁净与肮脏：谈功利与对个体生命的关怀" class="headerlink" title="六十四 - 六十六：洁净与肮脏：谈功利与对个体生命的关怀"></a>六十四 - 六十六：洁净与肮脏：谈功利与对个体生命的关怀</h3><p>​“姐姐不知道，我不是没眼色，细想和尚们脏，恐怕气味熏了姐姐们。”</p><p>​《红楼梦》开篇就说女人是水做的，男人是泥做的。这是非常反男性的东西。这个反男性并不是一般的性别，而是说男性在一个现实生活里，扮演了一个功利的角色。因为他要权利、要财富，女性一般来讲过去不可能争权利、争财富，而曹雪芹最看不起的就是这种争功名利禄的人，他觉得他们一争功名利禄就脏了。在财富与权利的争夺里，是一种贪婪。男性中间贾珍、贾琏这样的占多数，用五两银子就可以去包养一个女人，他为什么不做？而宝玉绝不会去想这些事情，这就是差别。尤二姐、三姐无权无势，但宝玉会特别疼惜他们，包括气味会不会污秽了，茶杯会不会肮脏了。这个脏是有暗示性的，是说社会中会把人弄脏的东西。</p><p>​会弄脏尤二姐、尤三姐的，竟然是和尚。曹雪芹并不认为修行一定是洁净的。生命里面没有真正真诚的哀悼，反而变成了一种功利性的东西。其实污秽与洁净并不是固定的，如果对生命有真正的关怀，最污秽之地也是最洁净之地；反之，最洁净之地会变成最污秽之地。</p><p>​人性对生命的关怀，体现在小事之中。真正可贵的东西，是在点点滴滴的小事件中显现的，而不是用冠冕堂皇的话说出来。冠冕堂皇的话和点滴的关怀形成落差，越是有冠冕堂皇的话的时候，那个生命在日常生活中是对人最没有关心的。</p><h3 id="六十七-六十九：恨望今生情幻灭：剑、梦、情与尤三姐之死"><a href="#六十七-六十九：恨望今生情幻灭：剑、梦、情与尤三姐之死" class="headerlink" title="六十七 - 六十九：恨望今生情幻灭：剑、梦、情与尤三姐之死"></a>六十七 - 六十九：恨望今生情幻灭：剑、梦、情与尤三姐之死</h3><h4 id="鸳鸯剑：信物与心灵"><a href="#鸳鸯剑：信物与心灵" class="headerlink" title="鸳鸯剑：信物与心灵"></a>鸳鸯剑：信物与心灵</h4><p>​“冷飕飕，明亮亮，两痕秋水。”鸳鸯剑是湘莲的传家之宝，更是他予尤三姐的定情信物。“连忙取来，挂着自己的绣房床上，每日望着剑，自笑终身有靠。”张爱玲在很多的文章中讲到恋物，就是人会眷恋一个物件，并非了不得的物件，但那个人会一直存着，因为这个物件有对自己来说非常重要的记忆。剑是尤三姐一生许诺之人交来的信物，是心灵中，生命中最重要的东西。生命的高贵和优雅，常常因为你有信物这样寄托心灵的东西，而如果没有，必定会导致生命的沉沦与堕落。这种信物可能是非常微小的物品，他对他人没有意义，但对于个体非常重要。而这鸳鸯剑对尤三姐来说就是这样的作用。</p><p>​但这依然是剑，是冷的，是明的，是秋水。所以也暗示鸳鸯剑既是信物，也是结束生命的杀人利器。</p><h4 id="尤三姐之死与封建男人的不堪"><a href="#尤三姐之死与封建男人的不堪" class="headerlink" title="尤三姐之死与封建男人的不堪"></a>尤三姐之死与封建男人的不堪</h4><p>​尤二姐与尤三姐都是《红楼梦》中着墨不多的人物，但她们的个性形象非常突出。尤三姐的泼辣、生命的刚烈，敢爱敢恨，客观来看和宝玉是相似的，都是封建的叛逆者，最后的结局（斩断烦恼丝）也都相同。许多人对尤三姐持有批判态度，我不认为是正确的。爱、恨与生命的选择，刚好对比出贾珍、贾琏作为男性的粗鲁与懦弱。尤三姐的死有一种刚烈的艳丽，她无法忍受生命的难堪，不会委曲求全，而是宁为玉碎。这样一位自主的，拥有尊贵生命的女性，落在被男人糟蹋和侮辱的境地，被世俗要求女性贞洁的捆绑下死去，背后揭露的其实是封建男人的不堪。</p><h4 id="入梦、度化、幻灭"><a href="#入梦、度化、幻灭" class="headerlink" title="入梦、度化、幻灭"></a>入梦、度化、幻灭</h4><p>​真正的深情，是自我的圆满，是自我完成。</p><p>​尤三姐死后，《红楼梦》又使用了超现实手法，使尤三姐与湘莲再次相见。“以死报此痴情”，尤三姐的死是对自我深情的回报，而不是报答柳湘莲。“前生误被情感，今既耻情而觉，与君两无干涉。”情是空幻的东西，势必会有一个幻灭的结果。爱别离有爱别离的苦，怨憎会有怨憎会的苦，求不得有求不得的苦，终要归于五阴炽之苦。正如《红楼梦》中风月宝鉴，红粉实是骷髅。</p><p>​所以有“生命原来是一场空幻”，“挚出那股雄剑，将万根烦恼丝一挥而尽，随那道士，不知哪里去了”。</p><p>​此生缘，无非水月镜花。</p><h3 id="七十-七十三：真正的艺术，是呕心沥血"><a href="#七十-七十三：真正的艺术，是呕心沥血" class="headerlink" title="七十 - 七十三：真正的艺术，是呕心沥血"></a>七十 - 七十三：真正的艺术，是呕心沥血</h3><p>​“宝玉看了，并不称赞，却滚下泪来。”我们在生命中有一种两难，有时候你看到一个朋友创作了最好的画，写出来最好的音乐，你不一定是赞美，有时候是落泪，你感觉到他的呕心沥血，他在作品里把血都流尽了。</p><p>​为什么宝玉没有赞美，反而落下泪来？因为他已经读到了黛玉的心事，他知道黛玉要走了。别人没有看出来，别人看到的是诗好。可诗如果暗示的是人亡，我想宝玉绝对不要。宝玉认为真正好的创作是呕心沥血，而不是在职业性的画画、职业性的写诗，而是用生命在创作。其实这里可以看到曹雪芹的美学观。曹雪芹自己写完《红楼梦》，写得一把辛酸泪，大家都觉得这本书好极了，赞美它是伟大的文学。可是曹雪芹如果能死而复生，宁肯没有这样的煎熬。</p><p>​宝玉与黛玉有前世的缘分，他懂得这首诗是一首安魂曲，是哀悼尤二姐的，也是哀悼她自己。所以宝玉说绝对不可能是宝琴的诗作，她没有经过父母双亡，兄弟姐妹离开这些悲剧，她不会懂这些东西。什么样的个性，呕心沥血之后，便是什么样的艺术。</p><h3 id="七十四-七十五：从宝玉读书到对当代教育的反思"><a href="#七十四-七十五：从宝玉读书到对当代教育的反思" class="headerlink" title="七十四 - 七十五：从宝玉读书到对当代教育的反思"></a>七十四 - 七十五：从宝玉读书到对当代教育的反思</h3><p>​“心中又自后悔，这些日子只说不提了，偏又丢生，早知该好歹温习些的。”读书至此，不由得哑然失笑。孩子性情本是如此，正如宝玉在贾政回来时竟没有马上问他的功课，所以他就放松了，而现在又开始后悔。如今打算，不过只有《学》《庸》《二论》是带注背得出的。</p><p>​《大学》《中庸》《论语》，现在仍读来让人感觉受益无穷。可问题是它一旦变成教科书，注解便不在于内容本身，而被肢解为一个个零件的“知识点”，变成所谓的八股文。古文皆是人类伟大的经验和智慧，但问题是如何对待它。如果仅仅为了考试，很多东西就会被扭曲。</p><p>​“算起《五经》来，因近来作诗，常把《诗经》读些，虽不甚精湛，还可塞责。”宝玉觉得因为很喜欢写诗，所以喜欢诗经，而有些东西他就不喜欢，像《尚书》中多是古代文告和政令，作为十多岁的孩子去读，自是无聊至极。读书和考试是两种事情，自己喜欢的书自然会读，也能很好地应用；而有些书读了没有任何感觉，那些书便是完全为考试而作的。</p><p>​“更有时文八股一道，因平素深恶此道。”考试成了读书的唯一目的，便是教育的最大失败。当代的教育考试其实与八股文的时代并没有多大进步，因为试题与标准都是死的，有甚者“设坑”“抠字眼”，这样的考试根本不存在任何思考。</p><p>​“原非圣贤之制撰，焉能阐发圣贤之微奥，不过是后人饵名钓禄之阶。”《大学》《中庸》《论语》的创作不是为了考试，而是为了做人，这样的思想绝不只是为了考试，而是紧紧关联着生命、生活之中的。</p><h3 id="七十九-八十：假作真时真亦假：众生行走，红楼的真正结局"><a href="#七十九-八十：假作真时真亦假：众生行走，红楼的真正结局" class="headerlink" title="七十九 - 八十：假作真时真亦假：众生行走，红楼的真正结局"></a>七十九 - 八十：假作真时真亦假：众生行走，红楼的真正结局</h3><p>​第八十回，是曹雪芹先生执笔的最后一回。</p><p>​我经常认为，第八十回才是红楼的真正结局。在后四十非曹雪芹执笔的回目中，我们会看到黛玉的死，宝钗嫁与宝玉，宝玉的出家。或许这更像是传统意义的“结局”，但依曹雪芹先生来看，未必会这样写，也未必如此结局。</p><p>​其实，红楼的结局，便在于此。</p><p>​王一贴，江湖术士一样的人，面对宝玉的问询胡诌妒妇汤的人，根本就是一个江湖骗子。但他的话看似荒谬无章，却使因大观园抄检，司琪被逐，晴雯病死，迎春出嫁等诸事烦扰得病了一百多天的宝玉真正笑了出来。王一贴就像红楼前处所写的癞头和尚、跛脚道士，介于知道和不知道，领悟与不领悟之间，表面看疯癫痴傻，却聪明到极点。众生行走的他们混迹人间，偶然的三言两语或就使我们豁然开朗，也许生命中真正的领悟便在于众生行走之中。</p><p>​《红楼梦》是一本没有完成的书，它的结局没有完成或许是偶然，但可能更多的是一种必然。或许，这种未完成正体现了一种“留白”的东方美学。王一贴作为红楼中出现的最后一个人物，或许他的故事正是曹雪芹所经历的经历，他的话语便是曹雪芹最不像领悟的领悟。或许，我们能够看到如王一贴般的曹雪芹，坐在村口，糊着风筝，笑看众生。</p><h3 id="跋"><a href="#跋" class="headerlink" title="跋"></a>跋</h3><p>​《红楼梦》，不仅仅是一本书。</p><p>​经学家看见《易》，道学家看见淫，才子看见缠绵，革命家看见排满，流言家看见宫闱秘事……</p><p>​我们不仅在读《红楼》，也在读自己的一生。曹雪芹带我们见证了各种不同形式的生命，感悟了诸多世事的道理。</p><p>​《红楼》读久了，你会发现自己也在《红楼》中，扮演不同的角色，有着不同的性格，过着不同的生活。《红楼》的生活琐事与众生相，是比情节更加珍贵的。</p><p>​我是第一次读《红楼》，手书至此，笔尖却有一分难言与不舍。其实每个人都像在书中一样，有着自己的角色，背负自己的宿命。《红楼》，能包容一切人。</p><p>​《红楼梦》，处处皆可领悟。</p><p>​以此作结。</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Essay </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《鸿门宴》奇解</title>
      <link href="/2022/01/27/hong-men-yan/"/>
      <url>/2022/01/27/hong-men-yan/</url>
      
        <content type="html"><![CDATA[<ul><li>本文除图片外，放弃采用 CC BY-NC-SA 4.0（<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>）<br>  进行许可。Copyright © 2022 All Rights Reserved. 保留所有权利。</li></ul><h4 id="一、刘邦：帝王之道，在于变通与隐忍"><a href="#一、刘邦：帝王之道，在于变通与隐忍" class="headerlink" title="一、刘邦：帝王之道，在于变通与隐忍"></a>一、刘邦：帝王之道，在于变通与隐忍</h4><p>​“沛公当真打算背叛项羽吗？”张良问刘邦。这句话问的至关重要，它决定张良的态度，进一步决定刘邦的生死。认账，相等于坐实罪名；撒谎，将失去张良信任。</p><p>​“确实有个小王八蛋给我出了馊主意，说只要把诸侯挡在关外，我就能在秦地称王。”一句话，使张良松了一口气。误听谗言，顶多是糊涂虫，比处心积虑要谋反的好。最重要的，这是实情。</p><p>​“君与项伯，谁的年纪大？”“项伯年长。”“那他就是我哥。”这句话是说给张良听的。意思也很清楚。我和你张良是兄弟，你的兄长也是我哥。而项伯也很快被刘邦忽悠走。“查清吏民户籍，封藏库府财物，是等待项将军接收，至于把守函谷关，是为了防贼，哪敢背叛呢？”一席话，大言不惭。不错，一文不取，还军霸上，都是事实，但其真正目的，只有他和张良才心知肚明。</p><p>​宴上故事也很简单。刘邦借口上厕所溜之大吉，留下张良继续做公关。樊哙说：“大行不顾细谨，大礼不辞小让。我们这块鱼肉都要被切碎了，告什么辞！”刘邦也深以为然，一路小跑回到了军营，鸿门宴就此落幕。</p><p>​然而，刘邦后来还是起了兵。所以人们称项羽为英雄，而不是刘邦。</p><p>​他是帝王。</p><h4 id="二、项羽：权欲与义气，杀还是不杀？"><a href="#二、项羽：权欲与义气，杀还是不杀？" class="headerlink" title="二、项羽：权欲与义气，杀还是不杀？"></a>二、项羽：权欲与义气，杀还是不杀？</h4><p>​“君王为之不忍。”“不忍”，明明之前约定杀刘邦，临事怎么不忍下手？</p><p>​项羽，六国诸侯随军。如果项羽贸然杀死如此谦虚有礼，又有破秦大功之人，汉十万大军顽抗到底不说，六国诸侯也会责其反复无常，背信弃义。“欲诛有功之人，此亡秦之续耳。”</p><p>​更重要的是，比起权欲，项羽更看重的是义气。重义气富感情的他，与刘邦并肩作战多年，不但大义上不能杀，感情上也不忍。</p><p>​不杀刘邦，正如项羽“不肯过江东”。也许，对他来说，王位与天下本不是最终的目标，他只想做一位英雄，英武豪雄痛快一生，退出战场时，有一个精彩的谢幕。</p><p>​乌江之前，他决定战死。</p><p>​视死如归的人是不可抵挡的。身负重伤的项羽仍让敌人闻风丧胆。汉军将项羽团团围定，却没人敢近前。此时的项羽又笑了。</p><p>​“听说刘邦赏千金，封万户买我的人头，就送个人情给你吧。”说完，他一剑砍下了自己的头颅。汉军涌上前去，争相践踏，拼死争夺。最终五个人瓜分了他的尸体，分了那块土地。</p><p>​这是时代的终结。动物界经常有代表英雄气质的虎在草原孤独地死去，而一群粗鄙的狼一拥而上，每一只都扯下一块皮骨叼在嘴里。而在不久前，他们根本就不敢看那只虎的眼睛。</p><p>​英雄或将被权欲埋没？我们不知道。</p><p>​而这群狼的首领，就是刘邦。</p><p>​“乌江耻学鸿门遁，亭长无劳劝渡河。”</p><h4 id="三、范增与小子孰应为亚父？（搁置）"><a href="#三、范增与小子孰应为亚父？（搁置）" class="headerlink" title="三、范增与小子孰应为亚父？（搁置）"></a>三、范增与小子孰应为亚父？（搁置）</h4><h4 id="四、樊哙：鲁莽中的智慧"><a href="#四、樊哙：鲁莽中的智慧" class="headerlink" title="四、樊哙：鲁莽中的智慧"></a>四、樊哙：鲁莽中的智慧</h4><p>​“来者何人？”——“刘邦的驾驶员和警卫员。”——“壮士，赐酒！”</p><p>​一餐饭，对刘邦来说，并不怎么好吃。不好吃的原因，在于范增。</p><p>​范增极力主张杀死刘邦。这样有雄心大志的人，如何能不防？可这是范增的想法，不是项羽的。三举玉玦，项庄舞剑，都没能杀死刘邦。张良坐不住了，他离开大帐来找樊哙。“情况不好。项庄舞剑，意在沛公。”</p><p>​“俺愿与沛公共生死。”于是樊哙强行闯关，进入帐中对项羽怒目相向，头发直立，眼眶几乎爆裂。这是真正的“怒发冲冠”“目眦欲裂”。于是就有了开头的一幕。</p><p>​“真是个壮士！还能喝一杯吗？”“臣死都不怕，酒算什么！”樊哙抬起头，怒斥项羽：</p><p>​“秦王有虎狼之心，刑律唯恐不酷，才众叛亲离。现在沛公劳苦功高忠心耿耿，你却听信谗言欲诛有功之人，岂非亡秦之续！”</p><p>​项羽哑口无言。樊哙一席话看似鲁莽，实则充满智慧。首先，剑拔弩张之际，他果断抓住讲理机会，冷静驳斥，巧妙处理了自身的弱势。第二，樊哙斥责有道理，有气势，理直就气壮，气壮就让人觉得理直。第三，他抓住了项羽本身性格的特点。之前分析过，项羽作为“英雄”而不是“帝王”，他最欣赏、最追求的是豪杰的慷慨、壮烈、豪迈。樊哙坐在地上拔出剑直接在盾牌上切猪腿，边切边吃，在场之人都目瞪口呆，只有项羽大为欣赏。这无疑是其性格的重要体现。正因如此，樊哙知道项羽必定不会因一席话而恼羞成怒杀了他们一行人，反而为刘邦的生奠定胜局。第四，陈词反问，反客为主。谁掌握发问权，谁掌握主动权。反问是语言艺术的重要部分，主动反问，对方必定只能被动作答，鸿门宴的主线就此掌握在了刘邦一方。</p><p>​樊哙，于鸿门宴中，应是不亚于张良的重要功臣。</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Essay </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一清如水，孰与话轻柔——话说晴雯</title>
      <link href="/2022/01/23/hua-shuo-qing-wen/"/>
      <url>/2022/01/23/hua-shuo-qing-wen/</url>
      
        <content type="html"><![CDATA[<ul><li>本文除图片外，放弃采用 CC BY-NC-SA 4.0（<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>）<br>  进行许可。Copyright © 2022 All Rights Reserved. 保留所有权利。</li></ul><blockquote><p>“霁月难逢，彩云易散。心比天高，身为下贱。风流灵巧招人怨。寿夭多因毁谤生，多情公子空牵念。”</p><p>​——《金陵十二钗又副册》</p></blockquote><h4 id="风吹过，落雪无痕"><a href="#风吹过，落雪无痕" class="headerlink" title="风吹过，落雪无痕"></a>风吹过，落雪无痕</h4><blockquote><ul><li>第五十一回<ul><li>宝玉与晴雯都是世俗的叛逆者，奴婢非奴婢，主人非主人。</li><li>人性秩序不是世俗秩序。</li></ul></li></ul></blockquote><p>​那个大雪寒冷的冬夜，你受风寒而疾，围于熏笼取暖。一旁为他铺床的麝月请你帮忙，只因你身量高，方便放下镜套，划上插销。你偏要抱怨“才坐暖和了，你就来闹”。是夜，你又不管不顾，不添衣服下了熏笼，要去吓唬为宝玉斟茶的麝月。结果一走出去，风“侵肌透骨”，本就外感风寒的你手冷如冰。终是他为心不忍，亲手放下穿衣镜的套子，划上上面的插销。面对你冰冷的双手和发烫的面庞，他更是心疼要死，借口掖被叫你钻进被窝。那个寒夜，你一定还记得被窝里的温暖依靠吧。</p><h4 id="宁为玉碎，心比天高"><a href="#宁为玉碎，心比天高" class="headerlink" title="宁为玉碎，心比天高"></a>宁为玉碎，心比天高</h4><blockquote><ul><li>第三十一回<ul><li>红颜非祸水。</li><li>撕裂，是人生的呐喊，是对伪善的嘲笑。</li></ul></li></ul></blockquote><p>​“你就拿了扇子来我撕。”面对他对摔扇的埋怨，你偏要横眉冷笑。“嫌我们就打发了我们，再挑好的使。”和好后他说扇子你爱撕着玩也可以，不要生气时出气。你却高兴至极，撕完一把，又撕一把。撕扇博美人一笑，描绘的便是张扬赌气，桀骜不驯的你吧。</p><h4 id="一清如水，病补雀金裘"><a href="#一清如水，病补雀金裘" class="headerlink" title="一清如水，病补雀金裘"></a>一清如水，病补雀金裘</h4><blockquote><ul><li>第五十二回</li></ul></blockquote><p>​“没那个福气穿就罢了，这会子又着急。”说着，他手中破了洞的雀金裘便被你夺去。他还在唉声叹气，你骂着，心却比任何人都热。重病之中，你织补到天明。界线分成经纬，破洞早已不见踪影。而你，却耗尽心血，昏倒在床。许多人说只有袭人一直尽心尽力照顾宝玉，你只是多余。但，唯有他知道，你对他，也是一清如水。</p><h4 id="孰与话轻柔？"><a href="#孰与话轻柔？" class="headerlink" title="孰与话轻柔？"></a>孰与话轻柔？</h4><blockquote><ul><li>第七十七、七十八回<ul><li>人与人最深情感最终是身体一部分的交代。</li><li>爱，是担当对方曾为你承担的东西。</li></ul></li></ul></blockquote><p>​山野，风起沙逐。</p><p>​“值得吗？”——“值得。”你微微一笑，从水墨烟柳中走来，眼波里尽是过往。</p><p>​“草民晴雯，无籍。”芦席之上，你遗世独立，周围尽是冷清。单薄身影只如拉满线的风筝，飘摇，随时会线断飞去。“晴雯，晴雯……”床榻边是他的呼咽，深渊中他拉住你颤巍的手，朦胧沾湿了他的泪眼。“我只当今生不得见你了。”一句未完，便已凝噎。</p><p>​一生缘分结为凤指，一次别离换袄一生。指甲与衣服的交换，是一清如水的深情。昔日，你为他品饭；今夕，他为你尝茶。抛残绣线，银笺彩缕谁裁？你偏要说：金裘着他身，错在我，奸在我。病中补衣情谊一往而深，你也一如初见，问心无愧，宁死不屈。</p><p>​一清如水，孰与话轻柔。纵为又副册首，终有“心比天高，身为下贱”悲惨；纵有花容冠才，终脱不了“寿夭多因毁谤生，多情公子空牵念”无常。然，初心不改。你依旧是撕扇博一笑的晴雯，依旧是病补雀金裘的晴雯，依旧是留下芙蓉诔的晴雯，依旧是天生傲骨，至死不服。</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Essay </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红楼空一梦（二）</title>
      <link href="/2022/01/18/hong-lou-kong-yi-meng-2/"/>
      <url>/2022/01/18/hong-lou-kong-yi-meng-2/</url>
      
        <content type="html"><![CDATA[<ul><li>本文除图片外，放弃采用 CC BY-NC-SA 4.0（<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>）<br>  进行许可。Copyright © 2022 All Rights Reserved. 保留所有权利。</li></ul><p>还是要提那句话，园大观，人微尘。</p><p>“若是微尘众实有者，佛则不说是微尘众，所以者何？佛说微尘众，则非微尘众，是名微尘众。”</p><p>红楼一书，绘成四百余人物。复次读红楼，不再关注几个主角，转而关心一些小人物。</p><p>贾宝玉初入太虚幻境，最早翻开的，也不是首善的十二金钗正册，而是又副册。又副册，是丫头们的命运。从笔墨而看，小人物与主角，曹雪芹皆是同样用心。</p><p>“以三千大千世界，碎为微尘，于意云何？ 是微尘众，宁为多不？”静观来来去去的众生，各有各的因果，各有各的冤业。三千大千世界，碎为微尘。眼前的人、物、事，花鸟虫石山川江海，这些“微尘”，终要于一日间灰飞烟灭吧。</p><p>曾在熙熙攘攘的街市众生行走，也曾独身奔行雨夜状如疯癫。街市众生，一如雨夜星辰，大大小小，远远近近。如是沙等恒河，于意云何？</p><p>然而佛说：微尘众，即非微尘众，是名微尘众。所以连那恒河沙、夜星辰也只是幻象吗？如来所说三千大千世界，即非世界，是名世界。 微尘为空，既碎为微尘，世界也是空罢。永恒的实质并不存在，物质世界终要灭掉的。由此也有：若世界实有，即是一合相；如来说一合相，即非一合相，是名一合相。</p><p>我们有许多“憎”与“爱”，总想救赎，想离弃，想牵挂，不惊不怖不畏之人，甚为希有。然，想到碎为微尘的众生，不由啼笑皆非。</p><p>于阿耨多罗三藐三菩提‎‎，‎‎乃至‎‎无有少法可得，是名阿耨多罗三藐三菩提。空，方可大彻大悟。</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Essay </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红楼空一梦（一）</title>
      <link href="/2022/01/18/hong-lou-kong-yi-meng-1/"/>
      <url>/2022/01/18/hong-lou-kong-yi-meng-1/</url>
      
        <content type="html"><![CDATA[<ul><li>本文除图片外，放弃采用 CC BY-NC-SA 4.0（<a href="http://creativecommons.org/licenses/by-nc-sa/4.0/">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>）<br>  进行许可。Copyright © 2022 All Rights Reserved. 保留所有权利。</li></ul><blockquote><p>“他只是告诉你，在所有的生命中，权力、财富、爱情，全部是一场空。他要告诉你，知道是空，你还是执著。知道归知道，执著归执著。”——蒋勋</p></blockquote><p>园大观，人微尘。</p><p>观红楼四十回，给我印象最深的，不是刘姥姥与笑剧，而是贾府的奢华。与刘姥姥相比，更可怜可悲的，是贾府。刘姥姥，这个活不下去的老太太，贫困，低微，但她的到来忽然让贾府的每一个人都感觉到一种生命力。刘姥姥在大观园中的生活，给在贾府中的人极大的生活趣味，这也许是他们最快乐的日子。</p><p>刘姥姥的贫穷只是物质的匮乏，而贾府的贫穷则是精神上的。人有时要花很多钱去买物质，但其实精神上的贫穷更加可怕。刘姥姥无疑是一个丑角，但她身上总有些达官贵族没有的东西，所以贾府之人反而更加向往乡下的生活。</p><p>刘姥姥对贾府的茄子很吃惊，一道茄鲞，普通茄子要用鸡汤熬，再经晒干等复杂的工序，虽用料十分豪华，却失去了原本的味道。现在的我们不会用豪华的食材，却有非常豪华的调味料。酱油、料酒、味精、咖喱……我们用调味品调出了最浓烈的味道，却再也没有本色与原味，没有了初心，没有了“色即是空，空即是色”的感悟。</p><p>我们常常把生命里最真的当成最假的，最假的当成最真的。权力、财富、情爱，执迷不悟之时都是真的，经历过可能都是假的。红楼是一本没有结局的书，它其实告诉我们，结局可能本就是假的，是空的，我们永远不知道生命接下来的事情。小说未完，时间未完，人生未完。或许，唯本心为真。</p><p>红楼，是可以当作佛经读的。</p>]]></content>
      
      
      <categories>
          
          <category> Literature </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Essay </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】Tarjan SCC</title>
      <link href="/2019/11/14/scc/"/>
      <url>/2019/11/14/scc/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/* * @Author: thyzzs * @Date: 2019-08-02 16:55:56 * @LastEditTime: 2019-11-14 09:44:57 */</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_N</span> <span class="token expression"><span class="token number">1000005</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment">//定理：一个SCC从其中任何一个点出发，都至少有一条路径能绕回自己</span><span class="token keyword">int</span> cnt<span class="token punctuation">;</span>                          <span class="token comment">// 强连通分量个数</span><span class="token keyword">int</span> low<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">,</span> num<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">,</span> dfn<span class="token punctuation">;</span>  <span class="token comment">// num[]代表dfs对每个点的访问顺序，low[]代表能返回到的最远祖先的num值</span>                                  <span class="token comment">// 相同low值代表一个SCC，初始low值等于num</span>                                  <span class="token comment">// dfn代表进入递归的顺序，用于给num赋值（时间戳）</span><span class="token keyword">int</span> scc<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">,</span> stack<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">,</span> top<span class="token punctuation">;</span>  <span class="token comment">// stack[]模拟栈，top是栈顶</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> G<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span> <span class="token punctuation">{</span>    stack<span class="token punctuation">[</span>top<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> u<span class="token punctuation">;</span>  <span class="token comment">// u进栈</span>    low<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>dfn<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">register</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> v <span class="token operator">=</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>num<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 未访问过的点，继续dfs</span>            <span class="token function">dfs</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>            low<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>low<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">,</span> low<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>scc<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment">// 处理回退边</span>            low<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>low<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> num<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>low<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">==</span> num<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 栈底的点是SCC的祖先，它的low = num</span>        cnt<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> v <span class="token operator">=</span> stack<span class="token punctuation">[</span><span class="token operator">--</span>top<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// v弹出栈</span>            scc<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> cnt<span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">==</span> v<span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token comment">// 栈底的点是SCC的祖先</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">Tarjan</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>    cnt <span class="token operator">=</span> top <span class="token operator">=</span> dfn <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>scc<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>scc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>num<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>low<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>low<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">register</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>num<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> u<span class="token punctuation">,</span> v<span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">register</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>u<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>        G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">Tarjan</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】对顶堆</title>
      <link href="/2019/11/13/dui-ding-dui/"/>
      <url>/2019/11/13/dui-ding-dui/</url>
      
        <content type="html"><![CDATA[<h3 id="Part-1-简介"><a href="#Part-1-简介" class="headerlink" title="Part 1 简介"></a>Part 1 简介</h3><p><del>对顶堆是一种可以 $O(\log n)$ 维护在线第K小值的数据结构</del> </p><p>其实就是一个大根堆和一个小根堆啦</p><h3 id="Part-2-例题"><a href="#Part-2-例题" class="headerlink" title="Part 2 例题"></a>Part 2 例题</h3><p><a href="https://www.luogu.org/problem/P1168">Luogu P1168 中位数</a></p><p><a href="https://www.luogu.org/problem/P3871">Luogu P3871 [TJOI2010]中位数</a></p><h3 id="Part-3-代码实现"><a href="#Part-3-代码实现" class="headerlink" title="Part 3 代码实现"></a>Part 3 代码实现</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/* * @Author: thyzzs * @Date: 2019-09-08 16:52:21 * @LastEditTime: 2019-11-13 18:11:57 */</span><span class="token keyword">struct</span> <span class="token class-name">Double_Heap</span> <span class="token punctuation">{</span>    priority_queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> minq<span class="token punctuation">;</span>  <span class="token comment">//存放最小的若干个数的大根堆</span>    priority_queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> greater<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;&gt;</span> maxq<span class="token punctuation">;</span>  <span class="token comment">//存放最大的若干个数的小根堆</span>    <span class="token comment">//对顶堆动态维护一段只能添加的序列，寻找其中的第k大值</span>    <span class="token comment">//需要的元素维持在minq的堆顶</span>    <span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>minq<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> n <span class="token operator">&gt;</span> maxq<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//若n比maxq最小的要大，则交换n与maxq.top()</span>            maxq<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>            n <span class="token operator">=</span> maxq<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            maxq<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        minq<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//n插入小根堆</span>    <span class="token punctuation">}</span>    <span class="token keyword">int</span> <span class="token function">find_kth</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//寻找第k大数</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>minq<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//minq元素过多，插进maxq</span>            maxq<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>minq<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            minq<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>minq<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//minq元素过少，从maxq插回来</span>            minq<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>maxq<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            maxq<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> minq<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】Trie树</title>
      <link href="/2019/11/13/trie-shu/"/>
      <url>/2019/11/13/trie-shu/</url>
      
        <content type="html"><![CDATA[<h3 id="Part-1-简介"><a href="#Part-1-简介" class="headerlink" title="Part 1 简介"></a>Part 1 简介</h3><p>Trie，又称前缀树或字典树，是一种有序树，用于保存关联数组，其中的键通常是字符串。与二叉查找树不同，键不是直接保存在节点中，而是由节点在树中的位置决定。一个节点的所有子孙都有相同的前缀，也就是这个节点对应的字符串，而根节点对应空字符串。一般情况下，不是所有的节点都有对应的值，只有叶子节点和部分内部节点所对应的键才有相关的值。</p><p>字典树用边来代表字母，而从根结点到树上某一结点的路径就代表了一个字符串。</p><h3 id="Part-2-代码实现"><a href="#Part-2-代码实现" class="headerlink" title="Part 2 代码实现"></a>Part 2 代码实现</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/* * @Author: thyzzs * @Date: 2019-11-13 15:27:35 * @LastEditTime: 2019-11-13 16:48:08 */</span><span class="token keyword">struct</span> <span class="token class-name">Trie</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> nex<span class="token punctuation">[</span><span class="token number">1000010</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> num<span class="token punctuation">[</span><span class="token number">1000010</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> pos <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">void</span> <span class="token function">Insert</span><span class="token punctuation">(</span><span class="token keyword">char</span> str<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">register</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> n <span class="token operator">=</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">'a'</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nex<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                nex<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> pos<span class="token operator">++</span><span class="token punctuation">;</span>            p <span class="token operator">=</span> nex<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>            num<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>        <span class="token keyword">int</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token keyword">char</span> str<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">register</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">int</span> n <span class="token operator">=</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">'a'</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>nex<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>                 <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>            p <span class="token operator">=</span> nex<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> num<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参考：</p><p>​<a href="https://zh.wikipedia.org/wiki/Trie">Trie - 维基百科，自由的百科全书</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】Knuth-Morris-Pratt 算法</title>
      <link href="/2019/11/13/kmp/"/>
      <url>/2019/11/13/kmp/</url>
      
        <content type="html"><![CDATA[<h3 id="Part-1-简介"><a href="#Part-1-简介" class="headerlink" title="Part 1 简介"></a>Part 1 简介</h3><p>模式串匹配，就是给定一个需要处理的文本串（理论上应该很长）和一个需要在文本串中搜索的模式串（理论上长度应该远小于文本串），查询在该文本串中，给出的模式串的出现有无、次数、位置等。 </p><h3 id="Part-2-前缀函数"><a href="#Part-2-前缀函数" class="headerlink" title="Part 2 前缀函数"></a>Part 2 前缀函数</h3><p>给定一个长度为 $n$ 的字符串 ，其<strong>前缀函数</strong>被定义为一个长度为 $n$ 的数组$Next$。其中 $n$ 为既是子串 $s[0…i]$ 的前缀同时也是该子串的后缀的最长真前缀（proper prefix）长度。一个字符串的真前缀是其前缀但不等于该字符串自身。根据定义， $Next[0] = 0$ 。<br>$$<br>Next[i] = \max_{k = 0 \dots i}{k: s[0 \dots k - 1] = s[i - (k - 1) \dots i]}<br>$$</p><h3 id="Part-3-KMP代码实现"><a href="#Part-3-KMP代码实现" class="headerlink" title="Part 3 KMP代码实现"></a>Part 3 KMP代码实现</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/* * @Author: thyzzs * @Date: 2019-11-13 15:27:35 * @LastEditTime: 2019-11-13 16:48:08 */</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_N</span> <span class="token expression"><span class="token number">1000005</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">char</span> str<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">,</span> pattern<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> Next<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> cnt<span class="token punctuation">;</span><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">get_Next</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>p<span class="token punctuation">,</span> <span class="token keyword">int</span> p_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//预处理Next数组</span>    Next<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> Next<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">register</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> p_len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">int</span> j <span class="token operator">=</span> Next<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> p<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            j <span class="token operator">=</span> Next<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        Next<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> p<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">kmp</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>pat<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// s中匹配pat</span>    <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> last <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> s_len <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">,</span> p_len <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>pat<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">get_Next</span><span class="token punctuation">(</span>pat<span class="token punctuation">,</span> p_len<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">register</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s_len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//匹配s和pat的每个字符</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&amp;&amp;</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> pat<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            j <span class="token operator">=</span> Next<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//失配，根据Next[]找到j的回溯位置</span>        <span class="token punctuation">}</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> pat<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> j<span class="token operator">++</span><span class="token punctuation">;</span>  <span class="token comment">//当前位置字符匹配，继续进行</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">==</span> p_len<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> p_len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//因下标从1开始，所以+1</span>                                                <span class="token comment">//输出匹配的位置</span>            <span class="token comment">/*            if (i - last &gt;= p_len) {  //判断新的匹配和上一个匹配能否分开                cnt++;                last = i;  //last指向上一个匹配的末尾位置            }  //输出匹配个数cnt            */</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">register</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> p_len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//因下标从1开始，所以i加了1</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> Next<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> cnt<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">kmp</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> pattern<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// printf("%d\n", kmp(str, pattern));</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】CDQ分治</title>
      <link href="/2019/11/12/cdq-fen-zhi/"/>
      <url>/2019/11/12/cdq-fen-zhi/</url>
      
        <content type="html"><![CDATA[<h3 id="Part-1-简介"><a href="#Part-1-简介" class="headerlink" title="Part 1 简介"></a>Part 1 简介</h3><p>CDQ分治，即基于时间的分治算法，最早被陈丹琦引入国内而得名。</p><h3 id="Part-2-点对问题"><a href="#Part-2-点对问题" class="headerlink" title="Part 2 点对问题"></a>Part 2 点对问题</h3><ol><li><p>找到这个序列的中点</p></li><li><p>将所有点对$(i, j)$ 划分为 3 类</p><p>第一种是$1 ≤ i ≤ mid, 1 ≤ j ≤ mid$ 的点对</p><p>第二种是$1 ≤ i ≤ mid, mid + 1 ≤ j ≤ n$ 的点对</p><p>第三种是$mid + 1 ≤ i ≤ n, mid + 1 ≤ j ≤ n$ 的点对</p></li><li><p>将$(1, n)$ 这个序列拆成两个序列$(1, mid)$ 和$(mid + 1, n)$</p><p>会发现第一类点对和第三类点对都在这两个序列之中，递归的去解决这两类点对</p></li><li><p>想方设法处理一下第二类点对的信息</p></li></ol><h4 id="Part-2-1-偏序问题"><a href="#Part-2-1-偏序问题" class="headerlink" title="Part 2.1 偏序问题"></a>Part 2.1 偏序问题</h4><p>一维偏序直接sort</p><p>二维偏序第1维sort，第2维CDQ分治</p><p>三维偏序第1维sort，第2维CDQ分治，第3维数据结构</p><h5 id="Part-2-1-1-二维偏序"><a href="#Part-2-1-1-二维偏序" class="headerlink" title="Part 2.1.1 二维偏序"></a>Part 2.1.1 二维偏序</h5><p>有 $n$ 个元素，第 $i$ 个元素有 $a_i、b_i$ 两个属性，设 $f(i)$ 表示满足 $a_j \leq a_i$ 且 $b_j \leq b_i$ 的 $j$ 的数量。</p><p>对于 $d \in [0, n)$，求 $f(i) = d$ 的数量</p><p>我们可以把两个元素抽象成一个点 $(a,b)$, 那么我们就是求一个矩形中有多少个点。 </p><p>首先我们可以按照 $x$ 轴 (a的值) 排个序，发现矩形右边的点已经不在答案的贡献里了。那么 $f(i)$ 就是在排序后的数组中找 $1\sim i-1$ 中有几个元素 $b$ 比 $b_i$ 小。</p><p>那么我们直接树状数组即可，时间复杂度 $O(n \log n)$</p><p>当我们插入一个 $b$ 值等于 $x$ 的点时，我们就令树状数组的 $x$ 位置单点 + 1，而查询数据结构里有多少个点小于 $x$ 的操作实际上就是在求前缀和</p><h5 id="Part-2-1-2-三维偏序"><a href="#Part-2-1-2-三维偏序" class="headerlink" title="Part 2.1.2 三维偏序"></a>Part 2.1.2 三维偏序</h5><p>有 $n$ 个元素，第 $i$ 个元素有 $a_i、b_i、c_i$ 三个属性，设 $f(i)$ 表示满足 $a_j \leq a_i$且 $b_j \leq b_i$ 且 $c_j \leq c_i$ 的 $j$ 的数量。</p><p>对于 $d \in [0, n)$，求 $f(i) = d$ 的数量</p>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 离线算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】珂朵莉树</title>
      <link href="/2019/11/12/ke-duo-li-shu/"/>
      <url>/2019/11/12/ke-duo-li-shu/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>转载自<a href="https://studyingfather.com/archives/1718">珂朵莉树学习笔记 - Studying Father’s blog</a></strong></p></blockquote><p>珂朵莉树（Chtholly Tree），又名老司机树（Old Driver Tree, ODT），是一种非常暴力的维护序列信息的数据结构。</p><p>其通过维护值相同的连续段来保证效率，在特殊构造的数据下会退化为普通暴力算法。</p><h3 id="Part-1-前置知识"><a href="#Part-1-前置知识" class="headerlink" title="Part 1 前置知识"></a>Part 1 前置知识</h3><p> 熟练掌握 <code>std::set</code> 的用法。 </p><p> 没了？没错。 </p><h3 id="Part-2-一个例子"><a href="#Part-2-一个例子" class="headerlink" title="Part 2 一个例子"></a>Part 2 一个例子</h3><p><a href="http://codeforces.com/problemset/problem/896/C">CF896C</a> 是一个非常经典的模板题，珂朵莉树也正是来源于本题。</p><p>下面是题面部分：</p><p>你需要维护一个序列，并支持如下几种操作：</p><ol><li>给区间 [l,r] 内的所有数字加上 x。</li><li>将区间 [l,r] 内的所有数字赋值为 x。</li><li>求区间 [l,r] 内所有数字中第 x 小的数字（重复数字多次计算）。</li><li>求$ ∑_{i=l}^r a_i^x\mod y $ 的值。</li></ol><p>题目保证数据随机。</p><hr><p>前三个操作都不算太难，使用常规的数据结构都可以圆满解决。</p><p>问题在于第四个操作。为什么常规的数据结构在第四个操作面前无能为力呢？主要在于其并不能方便地分解为两个子区间的问题。</p><p>这时候珂朵莉树就要出场了。</p><h3 id="Part-3-正文"><a href="#Part-3-正文" class="headerlink" title="Part 3 正文"></a>Part 3 正文</h3><h4 id="Part-3-1-节点结构"><a href="#Part-3-1-节点结构" class="headerlink" title="Part 3.1 节点结构"></a>Part 3.1 节点结构</h4><p> 我们这样定义一个珂朵莉树的节点： </p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">struct</span> <span class="token class-name">node</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> l<span class="token punctuation">,</span> r<span class="token punctuation">;</span>              <span class="token comment">//该节点对应的区间</span>    <span class="token keyword">mutable</span> <span class="token keyword">long</span> <span class="token keyword">long</span> val<span class="token punctuation">;</span> <span class="token comment">//mutable 修饰该变量之后，就可以直接在 set 中修改该变量的值，而不是取出元素修改后再重新插入 set</span>    <span class="token function">node</span><span class="token punctuation">(</span><span class="token keyword">int</span> L<span class="token punctuation">,</span> <span class="token keyword">int</span> R <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> Val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        l <span class="token operator">=</span> L<span class="token punctuation">,</span> r <span class="token operator">=</span> R<span class="token punctuation">,</span> val <span class="token operator">=</span> Val<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">const</span> node <span class="token operator">&amp;</span>a<span class="token punctuation">)</span> <span class="token keyword">const</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> l <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>l<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 接下来，我们定义一个 <code>set&lt;node&gt; odt</code> 来维护一棵 ODT。 </p><h4 id="Part-3-2-分割区间操作：split"><a href="#Part-3-2-分割区间操作：split" class="headerlink" title="Part 3.2 分割区间操作：split"></a>Part 3.2 分割区间操作：split</h4><p>给出一个区间 [l,r] 和一个位置 pos ，怎么把这个区间分割为 [l,pos−1] 和 [pos,r] 两个区间呢？</p><p>大致流程很简单：</p><ol><li>先在 ODT 中找到含有 pos 位置的区间。</li><li>如果 pos 已经是一个区间的左端点，则无需分割。</li><li>否则我们把原来的区间删除，插入两个新区间。</li></ol><p>详细代码如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">auto</span> <span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">auto</span> it <span class="token operator">=</span> odt<span class="token punctuation">.</span><span class="token function">lower_bound</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//找到左端点不小于 pos 的区间</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">!=</span> odt<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> it<span class="token operator">-&gt;</span>l <span class="token operator">==</span> pos<span class="token punctuation">)</span>        <span class="token keyword">return</span> it<span class="token punctuation">;</span> <span class="token comment">//pos 是区间左端点时无需分割</span>    it<span class="token operator">--</span><span class="token punctuation">;</span>          <span class="token comment">//pos 一定在前一个区间中</span>    <span class="token keyword">int</span> l <span class="token operator">=</span> it<span class="token operator">-&gt;</span>l<span class="token punctuation">,</span> r <span class="token operator">=</span> it<span class="token operator">-&gt;</span>r<span class="token punctuation">;</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> val <span class="token operator">=</span> it<span class="token operator">-&gt;</span>val<span class="token punctuation">;</span>    odt<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//删除原来的区间</span>    odt<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> pos <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> odt<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> r<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">;</span> <span class="token comment">//插入两个新区间</span>                                                <span class="token comment">//这里的返回值是后半段区间对应的迭代器</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 经过这样的分割操作后，容易发现任意两个区间没有相交的部分，这是保证我们接下来操作正确性的前提。 </p><h4 id="Part-3-3-合并区间操作：assign"><a href="#Part-3-3-合并区间操作：assign" class="headerlink" title="Part 3.3 合并区间操作：assign"></a>Part 3.3 合并区间操作：assign</h4><p>如果光分割区间而不合并的话，我们事实上就是对一堆长度为 1 的区间进行操作，珂朵莉树也就会退化为普通暴力算法。</p><p>通过合并操作，我们可以迅速降低珂朵莉树的大小，保证珂朵莉树的效率。</p><p>这里先给出合并操作的代码：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> val<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">auto</span> itr <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> itl <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>    odt<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>itl<span class="token punctuation">,</span> itr<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//删除[itl,itr)区间内的所有元素（注意左闭右开区间）</span>    odt<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//将原来的诸多小区间用一个大区间代替</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：在执行 <code>split</code> 操作时，应先 <code>split</code> 右端点，再 <code>split</code> 左端点，否则可能会RE。</strong></p><p>通过两次 <code>split</code> 操作，[l,r] 区间内一定都是整段区间。因此我们可以安全地删除原来的零散区间，用大区间代替。</p><p>经过 <code>assign</code> 操作后，ODT 的规模会下降不少，从而保证 ODT 的实际运行效率。</p><h4 id="Part-3-4-其他操作"><a href="#Part-3-4-其他操作" class="headerlink" title="Part 3.4 其他操作"></a>Part 3.4 其他操作</h4><p>所有区间操作都可以套这样的一个模板：</p><ol><li>先 <code>split</code> 右端点，再 <code>split</code> 左端点，获得两个端点（左闭右开）的迭代器。</li><li>对两个端点之间的所有区间暴力更改。</li></ol><p>代码差不多长这样：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">auto</span> itr <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> itl <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> itl<span class="token punctuation">;</span> it <span class="token operator">!=</span> itr<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token comment">//do something</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们回到那道模板题。</p><p>首先是区间加一个值：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> val<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">auto</span> itr <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> itl <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> itl<span class="token punctuation">;</span> it <span class="token operator">!=</span> itr<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>        it<span class="token operator">-&gt;</span>val <span class="token operator">+=</span> val<span class="token punctuation">;</span> <span class="token comment">//因为 val 被 mutable 关键字修饰，从而可以直接修改 set 里元素的值</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 接下来是区间第 k 小，暴力取出区间内所有段排序一遍即可： </p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">typedef</span> pair<span class="token operator">&lt;</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> pii<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">kth</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>    vector<span class="token operator">&lt;</span>pii<span class="token operator">&gt;</span> a<span class="token punctuation">;</span>    <span class="token keyword">auto</span> itr <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> itl <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> itl<span class="token punctuation">;</span> it <span class="token operator">!=</span> itr<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>        a<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token function">pii</span><span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>val<span class="token punctuation">,</span> <span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>r<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>l<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it <span class="token operator">!=</span> a<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        k <span class="token operator">-=</span> it<span class="token operator">-&gt;</span>second<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> it<span class="token operator">-&gt;</span>first<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 然后是区间幂次和，还是暴力，取出区间内所有段累加求和： </p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">auto</span> itr <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> itl <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> itl<span class="token punctuation">;</span> it <span class="token operator">!=</span> itr<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>        ans <span class="token operator">=</span> <span class="token punctuation">(</span>ans <span class="token operator">+</span> <span class="token function">fpow</span><span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>val<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>r<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>l<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> y<span class="token punctuation">;</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意到我们的区间操作都是直接对值相同的连续段进行处理，当段数较多的时候，效率就会降低。</strong></p><p>模板题的完整代码如下：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;set&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MOD</span> <span class="token expression"><span class="token number">1000000007</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">node</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> l<span class="token punctuation">,</span> r<span class="token punctuation">;</span>    <span class="token keyword">mutable</span> <span class="token keyword">long</span> <span class="token keyword">long</span> val<span class="token punctuation">;</span>    <span class="token function">node</span><span class="token punctuation">(</span><span class="token keyword">int</span> L<span class="token punctuation">,</span> <span class="token keyword">int</span> R <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> Val <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        l <span class="token operator">=</span> L<span class="token punctuation">,</span> r <span class="token operator">=</span> R<span class="token punctuation">,</span> val <span class="token operator">=</span> Val<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token keyword">const</span> node <span class="token operator">&amp;</span>a<span class="token punctuation">)</span> <span class="token keyword">const</span>    <span class="token punctuation">{</span>        <span class="token keyword">return</span> l <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>l<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">typedef</span> pair<span class="token operator">&lt;</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> pii<span class="token punctuation">;</span>set<span class="token operator">&lt;</span>node<span class="token operator">&gt;</span> odt<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> a<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> seed<span class="token punctuation">,</span> vmax<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">rnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> ret <span class="token operator">=</span> seed<span class="token punctuation">;</span>    seed <span class="token operator">=</span> <span class="token punctuation">(</span>seed <span class="token operator">*</span> <span class="token number">7</span> <span class="token operator">+</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">%</span> MOD<span class="token punctuation">;</span>    <span class="token keyword">return</span> ret<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">auto</span> <span class="token function">split</span><span class="token punctuation">(</span><span class="token keyword">int</span> pos<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">auto</span> it <span class="token operator">=</span> odt<span class="token punctuation">.</span><span class="token function">lower_bound</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>it <span class="token operator">!=</span> odt<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> it<span class="token operator">-&gt;</span>l <span class="token operator">==</span> pos<span class="token punctuation">)</span>        <span class="token keyword">return</span> it<span class="token punctuation">;</span>    it<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> l <span class="token operator">=</span> it<span class="token operator">-&gt;</span>l<span class="token punctuation">,</span> r <span class="token operator">=</span> it<span class="token operator">-&gt;</span>r<span class="token punctuation">;</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> val <span class="token operator">=</span> it<span class="token operator">-&gt;</span>val<span class="token punctuation">;</span>    odt<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span><span class="token punctuation">;</span>    odt<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> pos <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> odt<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>pos<span class="token punctuation">,</span> r<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>first<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> val<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">auto</span> itr <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> itl <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>    odt<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>itl<span class="token punctuation">,</span> itr<span class="token punctuation">)</span><span class="token punctuation">;</span>    odt<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">fpow</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span> x<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> y<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> mod<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> ans <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    x <span class="token operator">%=</span> mod<span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>y<span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>y <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span>            ans <span class="token operator">=</span> ans <span class="token operator">*</span> x <span class="token operator">%</span> mod<span class="token punctuation">;</span>        x <span class="token operator">=</span> x <span class="token operator">*</span> x <span class="token operator">%</span> mod<span class="token punctuation">;</span>        y <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> val<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">auto</span> itr <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> itl <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> itl<span class="token punctuation">;</span> it <span class="token operator">!=</span> itr<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>        it<span class="token operator">-&gt;</span>val <span class="token operator">+=</span> val<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">kth</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span>    vector<span class="token operator">&lt;</span>pii<span class="token operator">&gt;</span> a<span class="token punctuation">;</span>    <span class="token keyword">auto</span> itr <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> itl <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> itl<span class="token punctuation">;</span> it <span class="token operator">!=</span> itr<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>        a<span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token function">pii</span><span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>val<span class="token punctuation">,</span> <span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>r<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>l<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> a<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it <span class="token operator">!=</span> a<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        k <span class="token operator">-=</span> it<span class="token operator">-&gt;</span>second<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> it<span class="token operator">-&gt;</span>first<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">auto</span> itr <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>r <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> itl <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">auto</span> it <span class="token operator">=</span> itl<span class="token punctuation">;</span> it <span class="token operator">!=</span> itr<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span>        ans <span class="token operator">=</span> <span class="token punctuation">(</span>ans <span class="token operator">+</span> <span class="token function">fpow</span><span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>val<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>r<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>it<span class="token operator">-&gt;</span>l<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> y<span class="token punctuation">;</span>    <span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m <span class="token operator">&gt;&gt;</span> seed <span class="token operator">&gt;&gt;</span> vmax<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">rnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> vmax <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        odt<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token function">node</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>        <span class="token keyword">int</span> op <span class="token operator">=</span> <span class="token function">rnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token function">rnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token function">rnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&gt;</span> r<span class="token punctuation">)</span>            <span class="token function">swap</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>            x <span class="token operator">=</span> <span class="token function">rnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            x <span class="token operator">=</span> <span class="token function">rnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> vmax <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span>            y <span class="token operator">=</span> <span class="token function">rnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> vmax <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>            <span class="token function">add</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>            <span class="token function">assign</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">)</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token function">kth</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> x<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token keyword">else</span>            cout <span class="token operator">&lt;&lt;</span> <span class="token function">sum</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Part-4-总结"><a href="#Part-4-总结" class="headerlink" title="Part 4 总结"></a>Part 4 总结</h3><p><strong>在数据中区间赋值操作较多的时候，珂朵莉树的规模较小，实际运行效率较高。但特殊构造的数据往往并不具有这样的性质，导致其退化为普通暴力算法，因此要结合题目性质来考虑是否使用珂朵莉树来解题。</strong></p><p>虽然事实上珂朵莉树在很多题目中都可以用其他常规数据结构代替之，但其简单直接，易于调试的特点让它成为了一个解决不少题目的第二选择。</p>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】扫描线</title>
      <link href="/2019/11/12/sao-miao-xian/"/>
      <url>/2019/11/12/sao-miao-xian/</url>
      
        <content type="html"><![CDATA[<h3 id="Part-1-简介"><a href="#Part-1-简介" class="headerlink" title="Part 1 简介"></a>Part 1 简介</h3><p><strong>扫描线</strong>一般运用在图形上面，它和它的字面意思十分相似，就是一条线在整个图上扫来扫去，它一般被用来解决图形面积，周长等问题。 </p><h3 id="Part-2-应用"><a href="#Part-2-应用" class="headerlink" title="Part 2 应用"></a>Part 2 应用</h3><h4 id="Atlantis-问题"><a href="#Atlantis-问题" class="headerlink" title="Atlantis 问题"></a>Atlantis 问题</h4><p>在二维坐标系上，给出多个矩形的左下以及右上坐标，求出所有矩形构成的图形的面积。</p><h3 id="Part-3-代码实现"><a href="#Part-3-代码实现" class="headerlink" title="Part 3 代码实现"></a>Part 3 代码实现</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_N</span> <span class="token expression"><span class="token number">1000005</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> lazy<span class="token punctuation">[</span>MAX_N <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//标记这条线段出现的次数</span><span class="token keyword">long</span> <span class="token keyword">long</span> s<span class="token punctuation">[</span>MAX_N <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> n<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> ans<span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">Segment_tree</span> <span class="token punctuation">{</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> l<span class="token punctuation">,</span> r<span class="token punctuation">;</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> sum<span class="token punctuation">;</span><span class="token punctuation">}</span> tree<span class="token punctuation">[</span>MAX_N <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">//线段树</span><span class="token keyword">struct</span> <span class="token class-name">node</span> <span class="token punctuation">{</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> x<span class="token punctuation">,</span> y_1<span class="token punctuation">,</span> y_2<span class="token punctuation">;</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> flag<span class="token punctuation">;</span>  <span class="token comment">//flag表示该边是矩形的左边界或右边界</span><span class="token punctuation">}</span> p<span class="token punctuation">[</span>MAX_N <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">//坐标</span><span class="token keyword">inline</span> <span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> f <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>ch <span class="token operator">&lt;</span> <span class="token char">'0'</span> <span class="token operator">||</span> ch <span class="token operator">&gt;</span> <span class="token char">'9'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">'-'</span><span class="token punctuation">)</span> f <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>ch <span class="token operator">&gt;=</span> <span class="token char">'0'</span> <span class="token operator">&amp;&amp;</span> ch <span class="token operator">&lt;=</span> <span class="token char">'9'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        x <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>ch <span class="token operator">^</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> x <span class="token operator">*</span> f<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//定义sort比较</span><span class="token keyword">bool</span> <span class="token function">cmp</span><span class="token punctuation">(</span>node a<span class="token punctuation">,</span> node b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a<span class="token punctuation">.</span>x <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>x<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token comment">//上传</span><span class="token keyword">void</span> <span class="token function">pushup</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>lazy<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>        tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>sum <span class="token operator">=</span> tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token operator">-</span> tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>l<span class="token punctuation">;</span>    <span class="token keyword">else</span>        tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>sum <span class="token operator">=</span> tree<span class="token punctuation">[</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sum <span class="token operator">+</span> tree<span class="token punctuation">[</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sum<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//建树</span><span class="token keyword">void</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span> k<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> l<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">=</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>        tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token operator">=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token function">build</span><span class="token punctuation">(</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">build</span><span class="token punctuation">(</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pushup</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">=</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>        tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token operator">=</span> s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">;</span>        tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//更新</span><span class="token keyword">void</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token keyword">long</span> k<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> y_1<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> y_2<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token keyword">long</span> flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">==</span> y_1 <span class="token operator">&amp;&amp;</span> tree<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token operator">==</span> y_2<span class="token punctuation">)</span> <span class="token punctuation">{</span>        lazy<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">+=</span> flag<span class="token punctuation">;</span>        <span class="token function">pushup</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>tree<span class="token punctuation">[</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>r <span class="token operator">&gt;</span> y_1<span class="token punctuation">)</span> <span class="token function">update</span><span class="token punctuation">(</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">,</span> y_1<span class="token punctuation">,</span> <span class="token function">min</span><span class="token punctuation">(</span>tree<span class="token punctuation">[</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>r<span class="token punctuation">,</span> y_2<span class="token punctuation">)</span><span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>tree<span class="token punctuation">[</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>l <span class="token operator">&lt;</span> y_2<span class="token punctuation">)</span> <span class="token function">update</span><span class="token punctuation">(</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">max</span><span class="token punctuation">(</span>tree<span class="token punctuation">[</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>l<span class="token punctuation">,</span> y_1<span class="token punctuation">)</span><span class="token punctuation">,</span> y_2<span class="token punctuation">,</span> flag<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pushup</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">long</span> <span class="token keyword">long</span> x_1<span class="token punctuation">,</span> y_1<span class="token punctuation">,</span> x_2<span class="token punctuation">,</span> y_2<span class="token punctuation">;</span>    n <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        x_1 <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        y_1 <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        x_2 <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        y_2 <span class="token operator">=</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x_1<span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y_1 <span class="token operator">=</span> y_1<span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y_2 <span class="token operator">=</span> y_2<span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i <span class="token operator">+</span> n<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">=</span> x_2<span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i <span class="token operator">+</span> n<span class="token punctuation">]</span><span class="token punctuation">.</span>y_1 <span class="token operator">=</span> y_1<span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i <span class="token operator">+</span> n<span class="token punctuation">]</span><span class="token punctuation">.</span>y_2 <span class="token operator">=</span> y_2<span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i <span class="token operator">+</span> n<span class="token punctuation">]</span><span class="token punctuation">.</span>flag <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        s<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> y_1<span class="token punctuation">;</span>        s<span class="token punctuation">[</span>i <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> y_2<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">sort</span><span class="token punctuation">(</span>s <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> s <span class="token operator">+</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">|</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//离散化</span>    <span class="token function">sort</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> p <span class="token operator">+</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> cmp<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">//把矩形的边的纵坐标从小到大排序</span>    <span class="token function">build</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//建树</span>    <span class="token function">memset</span><span class="token punctuation">(</span>lazy<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>lazy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">update</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y_1<span class="token punctuation">,</span> p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>y_2<span class="token punctuation">,</span> p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ans <span class="token operator">+=</span> <span class="token punctuation">(</span>p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>x <span class="token operator">-</span> p<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>x<span class="token punctuation">)</span> <span class="token operator">*</span> tree<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sum<span class="token punctuation">;</span>        <span class="token function">update</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y_1<span class="token punctuation">,</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>y_2<span class="token punctuation">,</span> p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参考：</p><p>​ <a href="https://oi-wiki.org/geometry/scanning/">扫描线 - OI Wiki</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算几何 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】可持久化线段树（主席树）</title>
      <link href="/2019/11/10/zhu-xi-shu/"/>
      <url>/2019/11/10/zhu-xi-shu/</url>
      
        <content type="html"><![CDATA[<h3 id="Part-1-简介"><a href="#Part-1-简介" class="headerlink" title="Part 1 简介"></a>Part 1 简介</h3><p> <strong>可持久化线段树</strong>(在中国国内信息学竞赛社区中又称<strong>总书记树</strong>、<strong>主席树</strong>或<strong>函数式线段树</strong>)是一种<strong>可持久化数据结构</strong>（Persistent data structure）. 由于引入者黄嘉泰姓名的缩写与前中共中央总书记、国家主席胡锦涛相同，因此这种数据结构也可被称为<strong>总书记树</strong>或<strong>主席树</strong>。这种数据结构在普通线段树的基础之上支持查询某个历史版本，同时时间复杂度与线段树是同级，空间复杂度相较而言更高。</p><h3 id="Part-2-应用"><a href="#Part-2-应用" class="headerlink" title="Part 2 应用"></a>Part 2 应用</h3><h4 id="静态区间第k大数值"><a href="#静态区间第k大数值" class="headerlink" title="静态区间第k大数值"></a>静态区间第k大数值</h4><p>这类问题需要求解在一个长度为$ {\displaystyle n}$ 的数列中，第$ {\displaystyle i} $个数为$ {\displaystyle a_{i}}$. 现在给定一些形如 ${\displaystyle (l,r,k)} $的三元组作为询问，设计程序计算数列第$ {\displaystyle l~r} $这些元素中出现次数排在第$ {\displaystyle k} $位的是多少。</p><p>利用可持久化线段树，维护区间$ {\displaystyle (l,r)} $代表区间$ {\displaystyle [l,r]} $中的元素出现了多少次，以此作为原始版本$ {\displaystyle S_{0}}$，此后每次建立一个新版本 ${\displaystyle S_{i}}$，代表去掉原数列中 ${\displaystyle a_{0}~a_{i-1}} $的元素之后建立的线段树，维护目标与上述相同。具体过程可以每次将$ {\displaystyle a_{i}}$的出现次数减一，并保存此时生成的新版本。</p><h3 id="Part-3-代码实现"><a href="#Part-3-代码实现" class="headerlink" title="Part 3 代码实现"></a>Part 3 代码实现</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;set&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_N</span> <span class="token expression"><span class="token number">200005</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> tot<span class="token punctuation">,</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span><span class="token keyword">int</span> sum<span class="token punctuation">[</span><span class="token punctuation">(</span>MAX_N <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rt<span class="token punctuation">[</span>MAX_N <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> leftson<span class="token punctuation">[</span><span class="token punctuation">(</span>MAX_N <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rightson<span class="token punctuation">[</span><span class="token punctuation">(</span>MAX_N <span class="token operator">&lt;&lt;</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span>MAX_N <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ind<span class="token punctuation">[</span>MAX_N <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">,</span> len<span class="token punctuation">;</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> k<span class="token punctuation">;</span><span class="token comment">//查找最小下标的匹配值</span><span class="token keyword">int</span> <span class="token function">getid</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">int</span> <span class="token operator">&amp;</span>val<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token function">lower_bound</span><span class="token punctuation">(</span>ind <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> ind <span class="token operator">+</span> len <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span> <span class="token operator">-</span> ind<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> root <span class="token operator">=</span> <span class="token operator">++</span>tot<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> r<span class="token punctuation">)</span> <span class="token keyword">return</span> root<span class="token punctuation">;</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>    leftson<span class="token punctuation">[</span>root<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">build</span><span class="token punctuation">(</span>l<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>    rightson<span class="token punctuation">[</span>root<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">build</span><span class="token punctuation">(</span>mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> root<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">//建树</span><span class="token comment">//节点k代表区间[l,r]</span><span class="token comment">//插入操作</span><span class="token keyword">int</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> dir <span class="token operator">=</span> <span class="token operator">++</span>tot<span class="token punctuation">;</span>    leftson<span class="token punctuation">[</span>dir<span class="token punctuation">]</span> <span class="token operator">=</span> leftson<span class="token punctuation">[</span>root<span class="token punctuation">]</span><span class="token punctuation">,</span> rightson<span class="token punctuation">[</span>dir<span class="token punctuation">]</span> <span class="token operator">=</span> rightson<span class="token punctuation">[</span>root<span class="token punctuation">]</span><span class="token punctuation">,</span> sum<span class="token punctuation">[</span>dir<span class="token punctuation">]</span> <span class="token operator">=</span> sum<span class="token punctuation">[</span>root<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//新节点</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> r<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//sum[dir] = t; 如果题目要求sum加t，去掉注释然后去掉上面的+1</span><span class="token keyword">return</span> dir<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">//递归底层返回新节点编号，修改父节点的儿子指向</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span>        leftson<span class="token punctuation">[</span>dir<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">update</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> l<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> leftson<span class="token punctuation">[</span>dir<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>        rightson<span class="token punctuation">[</span>dir<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">update</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> rightson<span class="token punctuation">[</span>dir<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//sum[dir] = sum[lc[dir]] + sum[rightson[dir]];在该题中，不需要这样做，但是很多情况下是要这样更新的</span>    <span class="token keyword">return</span> dir<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment">//初始的u和v分别代表的是点l-1和点r，l和r分别表示线段树点代表的区间，初始的k表示查询第k小</span><span class="token comment">//查询（历史区间和）</span><span class="token keyword">int</span> <span class="token function">section_ask</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">int</span> x <span class="token operator">=</span> sum<span class="token punctuation">[</span>leftson<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">-</span> sum<span class="token punctuation">[</span>leftson<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//左儿子的信息</span><span class="token comment">//因为主席树是区间统计好了的，只要减一下即可，无需递归到叶子再处理</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> r<span class="token punctuation">)</span> <span class="token keyword">return</span> l<span class="token punctuation">;</span> <span class="token comment">//找到目标位置</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;=</span> x<span class="token punctuation">)</span> <span class="token comment">//说明在左儿子中</span>        <span class="token keyword">return</span> <span class="token function">section_ask</span><span class="token punctuation">(</span>leftson<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> leftson<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token comment">//说明在右儿子中</span>        <span class="token keyword">return</span> <span class="token function">section_ask</span><span class="token punctuation">(</span>rightson<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> rightson<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">,</span> k <span class="token operator">-</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">,</span> <span class="token operator">&amp;</span>m<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> a <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">memcpy</span><span class="token punctuation">(</span>ind<span class="token punctuation">,</span> a<span class="token punctuation">,</span> <span class="token keyword">sizeof</span> ind<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">sort</span><span class="token punctuation">(</span>ind <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> ind <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    len <span class="token operator">=</span> <span class="token function">unique</span><span class="token punctuation">(</span>ind <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> ind <span class="token operator">+</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">-</span> ind <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>    rt<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> rt<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token function">getid</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">,</span> rt<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>m<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>l<span class="token punctuation">,</span> <span class="token operator">&amp;</span>r<span class="token punctuation">,</span> <span class="token operator">&amp;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> ind<span class="token punctuation">[</span><span class="token function">section_ask</span><span class="token punctuation">(</span>rt<span class="token punctuation">[</span>l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rt<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> len<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">work</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>参考：</p><p>​ <a href="%5Bhttps://zh.wikipedia.org/wiki/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91%5D(https://zh.wikipedia.org/wiki/%E5%8F%AF%E6%8C%81%E4%B9%85%E5%8C%96%E7%BA%BF%E6%AE%B5%E6%A0%91)">可持久化线段树 - 维基百科，自由的百科全书</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-S 2019 冲刺训练计划</title>
      <link href="/2019/10/26/2019-xun-lian-ji-hua/"/>
      <url>/2019/10/26/2019-xun-lian-ji-hua/</url>
      
        <content type="html"><![CDATA[<p>根据 <a href="https://github.com/SFOI-Team/luogu-problem-list">luogu-problem-list 2.0 版本</a> 制作</p><p><del>待修改</del></p><h2 id="Part-1-入门阶段"><a href="#Part-1-入门阶段" class="headerlink" title="Part 1 入门阶段"></a>Part 1 入门阶段</h2><h2 id="Part-2-基础算法"><a href="#Part-2-基础算法" class="headerlink" title="Part 2 基础算法"></a>Part 2 基础算法</h2><blockquote><p>这一部分的内容包含了 OI 中的基础算法，供各位巩固基础。</p><p>当然，这里面也有一些难度比较高的题目。</p></blockquote><h3 id="Part-2-1-模拟"><a href="#Part-2-1-模拟" class="headerlink" title="Part 2.1 模拟"></a>Part 2.1 模拟</h3><blockquote><p>模拟，顾名思义就是题目要求你做什么你就做什么，这样的题目很考验选手的代码组织能力。</p><p>这里不仅仅有非常基础的模拟，也有一些非常复杂的题目。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1003">P1003 铺地毯</a></li><li><a href="https://www.luogu.org/problem/P1067">P1067 多项式输出</a></li><li><a href="https://www.luogu.org/problem/P1328">P1328 生活大爆炸版石头剪刀布</a></li><li><a href="https://www.luogu.org/problem/P1563">P1563 玩具谜题</a></li><li><a href="https://www.luogu.org/problem/P1042">P1042 乒乓球</a></li><li><a href="https://www.luogu.org/problem/P1179">P1179 数字统计</a></li><li><a href="https://www.luogu.org/problem/P2615">P2615 神奇的幻方</a></li><li><a href="https://www.luogu.org/problem/P3952">P3952 时间复杂度</a></li><li><a href="https://www.luogu.org/problem/P2482">P2482 [SDOI2010]猪国杀</a></li><li><a href="https://www.luogu.org/problem/P5380">P5380 [THUPC2019]鸭棋</a></li></ul><h3 id="Part-2-2-排序算法"><a href="#Part-2-2-排序算法" class="headerlink" title="Part 2.2 排序算法"></a>Part 2.2 排序算法</h3><blockquote><p>通过排序，我们可以将数据有序化，这让我们对数据的处理方便了很多。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1177">P1177 【模板】快速排序</a></li><li><a href="https://www.luogu.org/problem/P1059">P1059 明明的随机数</a></li><li><a href="https://www.luogu.org/problem/P1068">P1068 分数线划定</a></li><li><a href="https://www.luogu.org/problem/P1051">P1051 谁拿了最多奖学金</a></li><li><a href="https://www.luogu.org/problem/P1309">P1309 瑞士轮</a></li><li><a href="https://www.luogu.org/problem/P1908">P1908 逆序对</a></li></ul><h3 id="Part-2-3-二分答案"><a href="#Part-2-3-二分答案" class="headerlink" title="Part 2.3 二分答案"></a>Part 2.3 二分答案</h3><blockquote><p>对一个满足单调性质的问题，我们可以采用二分答案的方法来解决。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1024">P1024 一元三次方程求解</a></li><li><a href="https://www.luogu.org/problem/P2678">P2678 跳石头</a></li><li><a href="https://www.luogu.org/problem/P1316">P1316 丢瓶盖</a></li><li><a href="https://www.luogu.org/problem/P1902">P1902 刺杀大使</a></li><li><a href="https://www.luogu.org/problem/P1314">P1314 聪明的质监员</a></li><li><a href="https://www.luogu.org/problem/P1083">P1083 借教室</a></li><li><a href="https://www.luogu.org/problem/P4343">P4343 [SHOI2015]自动刷题机</a></li></ul><h3 id="Part-2-4-分治"><a href="#Part-2-4-分治" class="headerlink" title="Part 2.4 分治"></a>Part 2.4 分治</h3><blockquote><p>分治，即分而治之，将大问题分解为小问题，分别求解，最后合并结果。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1226">P1226 【模板】快速幂||取余运算</a></li><li><a href="https://www.luogu.org/problem/P1010">P1010 幂次方</a></li><li><a href="https://www.luogu.org/problem/P1429">P1429 平面最近点对（加强版）</a></li><li><a href="https://www.luogu.org/problem/P3612">P3612 [USACO17JAN]Secret Cow Code</a></li></ul><h3 id="Part-2-5-贪心"><a href="#Part-2-5-贪心" class="headerlink" title="Part 2.5 贪心"></a>Part 2.5 贪心</h3><blockquote><p>贪心，指的是决策时都采取当前最优解的算法。有的时候，这样做确实可以获得最优解。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1208">P1208 [USACO1.3]Mixing Milk</a></li><li><a href="https://www.luogu.org/problem/P4995">P4995 跳跳！</a></li><li><a href="https://www.luogu.org/problem/P1094">P1094 纪念品分组</a></li><li><a href="https://www.luogu.org/problem/P1199">P1199 三国游戏</a></li><li><a href="https://www.luogu.org/problem/P2672">P2672 推销员</a></li><li><a href="https://www.luogu.org/problem/P1080">P1080 国王游戏</a></li><li><a href="https://www.luogu.org/problem/P2123">P2123 皇后游戏</a></li><li><a href="https://www.luogu.org/problem/P5521">P5521 [yLOI2019]梅深不见冬</a></li></ul><h3 id="Part-2-6-构造"><a href="#Part-2-6-构造" class="headerlink" title="Part 2.6 构造"></a>Part 2.6 构造</h3><blockquote><p>构造题是一种形式灵活多样的题型。正是因为这个特点，使得构造题没有一种通用的方法。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3599">P3599 Koishi Loves Construction</a></li><li><a href="https://www.luogu.org/problem/P5441">P5441 【XR-2】伤痕</a></li></ul><h3 id="Part-2-7-高精度"><a href="#Part-2-7-高精度" class="headerlink" title="Part 2.7 高精度"></a>Part 2.7 高精度</h3><blockquote><p>在 C++ 中，long long 都无法表示我们需要的整数时怎么办？那就用高精度吧！</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1601">P1601 A+B Problem（高精）</a></li><li><a href="https://www.luogu.org/problem/P2142">P2142 高精度减法</a></li><li><a href="https://www.luogu.org/problem/P1303">P1303 A*B Problem</a></li><li><a href="https://www.luogu.org/problem/P1480">P1480 A/B Problem</a></li><li><a href="https://www.luogu.org/problem/P1009">P1009 阶乘之和</a></li></ul><h3 id="Part-2-8-前缀和-差分"><a href="#Part-2-8-前缀和-差分" class="headerlink" title="Part 2.8 前缀和 &amp; 差分"></a>Part 2.8 前缀和 &amp; 差分</h3><blockquote><p>前缀和是一种重要的预处理，能大大降低查询的时间复杂度，而差分则是一种和前缀和相对的策略。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3131">P3131 [USACO16JAN]Subsequences Summing to Sevens</a></li><li><a href="https://www.luogu.org/problem/P1387">P1387 最大正方形</a></li><li><a href="https://www.luogu.org/problem/P3397">P3397 地毯</a></li></ul><h2 id="Part-3-搜索"><a href="#Part-3-搜索" class="headerlink" title="Part 3 搜索"></a>Part 3 搜索</h2><blockquote><p>搜索其实就是高级的枚举，很多题目都可以用搜索完成。就算不能，搜索也是骗分神器。</p></blockquote><h3 id="Part-3-1-深度优先搜索"><a href="#Part-3-1-深度优先搜索" class="headerlink" title="Part 3.1 深度优先搜索"></a>Part 3.1 深度优先搜索</h3><blockquote><p>深度优先搜索（DFS），即按照深度优先的顺序搜索的算法。</p><p>深度优先搜索一般使用栈来实现。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1219">P1219 八皇后</a></li><li><a href="https://www.luogu.org/problem/P1019">P1019 单词接龙</a></li><li><a href="https://www.luogu.org/problem/P5194">P5194 [USACO05DEC]Scales</a></li><li><a href="https://www.luogu.org/problem/P5440">P5440 【XR-2】奇迹</a></li><li><a href="https://www.luogu.org/problem/P1378">P1378 油滴扩展</a></li></ul><h3 id="Part-3-2-广度优先搜索"><a href="#Part-3-2-广度优先搜索" class="headerlink" title="Part 3.2 广度优先搜索"></a>Part 3.2 广度优先搜索</h3><blockquote><p>广度优先搜索（BFS），即优先扩展浅层节点，逐渐深入的搜索算法。</p><p>广度优先搜索一般使用队列来实现。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1162">P1162 填涂颜色</a></li><li><a href="https://www.luogu.org/problem/P1443">P1443 马的遍历</a></li><li><a href="https://www.luogu.org/problem/P3956">P3956 棋盘</a></li><li><a href="https://www.luogu.org/problem/P1032">P1032 字串变换</a></li><li><a href="https://www.luogu.org/problem/P1126">P1126 机器人搬重物</a></li></ul><h3 id="Part-3-3-记忆化搜索"><a href="#Part-3-3-记忆化搜索" class="headerlink" title="Part 3.3 记忆化搜索"></a>Part 3.3 记忆化搜索</h3><blockquote><p>通过将已经遍历的状态记录下来，从而减少重复的搜索量，这就是记忆化搜索。</p><p>动态规划的时候，记忆化搜索也是一种高效简洁的实现方式。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1514">P1514 引水入城</a></li><li><a href="https://www.luogu.org/problem/P1535">P1535 游荡的奶牛</a></li><li><a href="https://www.luogu.org/problem/P1434">P1434 [SHOI2002]滑雪</a></li><li><a href="https://www.luogu.org/problem/P3953">P3953 逛公园</a></li></ul><h3 id="Part-3-4-搜索的剪枝"><a href="#Part-3-4-搜索的剪枝" class="headerlink" title="Part 3.4 搜索的剪枝"></a>Part 3.4 搜索的剪枝</h3><blockquote><p>对于一些不必要搜索的部分，我们可以避免访问这些状态，从而提高搜索效率。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1120">P1120 小木棍 ［数据加强版］</a></li><li><a href="https://www.luogu.org/problem/P1312">P1312 Mayan游戏</a></li><li><a href="https://www.luogu.org/problem/P1074">P1074 靶形数独</a></li></ul><h3 id="Part-3-5-双向搜索"><a href="#Part-3-5-双向搜索" class="headerlink" title="Part 3.5 双向搜索"></a>Part 3.5 双向搜索</h3><blockquote><p>在搜索时，如果能从初态和终态出发，同时进行搜索，就可以减小搜索树的规模，提高时间效率。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3067">P3067 [USACO12OPEN]Balanced Cow Subsets</a></li><li><a href="https://www.luogu.org/problem/P4799">P4799 [CEOI2015 Day2]世界冰球锦标赛</a></li><li><a href="https://www.luogu.org/problem/P5195">P5195 [USACO05DEC]Knights of Ni</a></li></ul><h3 id="Part-3-6-A"><a href="#Part-3-6-A" class="headerlink" title="Part 3.6 A*"></a>Part 3.6 A*</h3><blockquote><p>在 BFS 中，如果能设计一个合理的估价函数，就可以更快扩展到最优解。这就是 A*算法。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1379">P1379 八数码难题</a></li></ul><h3 id="Part-3-7-IDA"><a href="#Part-3-7-IDA" class="headerlink" title="Part 3.7 IDA*"></a>Part 3.7 IDA*</h3><blockquote><p>像 BFS 那样，每次只扩展一层节点，却采用 DFS 方式来遍历搜索树，这就是迭代加深搜索。</p><p>再加上一个估价函数来减小搜索量，就是 IDA*了。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2324">P2324 [SCOI2005]骑士精神</a></li><li><a href="https://www.luogu.org/problem/P2534">P2534 [AHOI2012]铁盘整理</a></li></ul><h3 id="Part-3-8-DLX"><a href="#Part-3-8-DLX" class="headerlink" title="Part 3.8 DLX"></a>Part 3.8 DLX</h3><blockquote><p>算法 X 是通过回溯法求解精确覆盖问题的算法，而删除列这一操作可以使用舞蹈链加速。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4929">P4929 【模板】舞蹈链（DLX）</a></li><li><a href="https://www.luogu.org/problem/P4205">P4205 [NOI2005]智慧珠游戏</a></li></ul><h2 id="Part-4-动态规划"><a href="#Part-4-动态规划" class="headerlink" title="Part 4 动态规划"></a>Part 4 动态规划</h2><blockquote><p>动态规划是一种重要的思维方法，通过利用已有的子问题信息高效求出当前问题的最优解。</p></blockquote><h3 id="Part-4-1-线性动态规划"><a href="#Part-4-1-线性动态规划" class="headerlink" title="Part 4.1 线性动态规划"></a>Part 4.1 线性动态规划</h3><blockquote><p>线性动态规划，即具有线性阶段划分的动态规划。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1216">P1216 数字三角形</a></li><li><a href="https://www.luogu.org/problem/P1020">P1020 导弹拦截</a></li><li><a href="https://www.luogu.org/problem/P1091">P1091 合唱队形</a></li><li><a href="https://www.luogu.org/problem/P1095">P1095 守望者的逃离</a></li><li><a href="https://www.luogu.org/problem/P1541">P1541 乌龟棋</a></li><li><a href="https://www.luogu.org/problem/P1868">P1868 饥饿的奶牛</a></li><li><a href="https://www.luogu.org/problem/P2679">P2679 子串</a></li><li><a href="https://www.luogu.org/problem/P2501">P2501 [HAOI2006]数字序列</a></li><li><a href="https://www.luogu.org/problem/P3336">P3336 [ZJOI2013]话旧</a></li><li><a href="https://www.luogu.org/problem/P3558">P3558 [POI2013]BAJ-Bytecomputer</a></li><li><a href="https://www.luogu.org/problem/P4158">P4158 [SCOI2009]粉刷匠</a></li><li><a href="https://www.luogu.org/problem/P5301">P5301 [GXOI/GZOI2019]宝牌一大堆</a></li></ul><h3 id="Part-4-2-背包动态规划"><a href="#Part-4-2-背包动态规划" class="headerlink" title="Part 4.2 背包动态规划"></a>Part 4.2 背包动态规划</h3><blockquote><p>背包动态规划是线性动态规划中特殊的一类，NOIP中考到的次数也不少。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1048">P1048 采药</a></li><li><a href="https://www.luogu.org/problem/P1060">P1060 开心的金明</a></li><li><a href="https://www.luogu.org/problem/P1855">P1855 榨取kkksc03</a></li><li><a href="https://www.luogu.org/problem/P5020">P5020 货币系统</a></li><li><a href="https://www.luogu.org/problem/P1757">P1757 通天之分组背包</a></li><li><a href="https://www.luogu.org/problem/P1064">P1064 金明的预算方案</a></li><li><a href="https://www.luogu.org/problem/P2946">P2946 [USACO09MAR]Cow Frisbee Team</a></li><li><a href="https://www.luogu.org/problem/P1156">P1156 垃圾陷阱</a></li><li><a href="https://www.luogu.org/problem/P5322">P5322 [BJOI2019]排兵布阵</a></li><li><a href="https://www.luogu.org/problem/P5289">P5289 [十二省联考2019]皮配</a></li></ul><h3 id="Part-4-3-区间动态规划"><a href="#Part-4-3-区间动态规划" class="headerlink" title="Part 4.3 区间动态规划"></a>Part 4.3 区间动态规划</h3><blockquote><p>区间动态规划一般以区间作为动态规划的阶段。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1880">P1880 [NOI1995]石子合并</a></li><li><a href="https://www.luogu.org/problem/P3146">P3146 [USACO16OPEN]248</a></li><li><a href="https://www.luogu.org/problem/P1063">P1063 能量项链</a></li><li><a href="https://www.luogu.org/problem/P1005">P1005 矩阵取数游戏</a></li><li><a href="https://www.luogu.org/problem/P4170">P4170 [CQOI2007]涂色</a></li><li><a href="https://www.luogu.org/problem/P4302">P4302 [SCOI2003]字符串折叠</a></li><li><a href="https://www.luogu.org/problem/P2466">P2466 [SDOI2008]Sue的小球</a></li></ul><h3 id="Part-4-4-树形动态规划"><a href="#Part-4-4-树形动态规划" class="headerlink" title="Part 4.4 树形动态规划"></a>Part 4.4 树形动态规划</h3><blockquote><p>树形动态规划，即在树上进行的动态规划。</p><p>因为树的递归性质，树形动态规划一般都是递归求解的。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1352">P1352 没有上司的舞会</a></li><li><a href="https://www.luogu.org/problem/P1040">P1040 加分二叉树</a></li><li><a href="https://www.luogu.org/problem/P1122">P1122 最大子树和</a></li><li><a href="https://www.luogu.org/problem/P1270">P1270 “访问”美术馆</a></li><li><a href="https://www.luogu.org/problem/P1273">P1273 有线电视网</a></li><li><a href="https://www.luogu.org/problem/P2014">P2014 选课</a></li><li><a href="https://www.luogu.org/problem/P3177">P3177 [HAOI2015]树上染色</a></li><li><a href="https://www.luogu.org/problem/P4516">P4516 [JSOI2018]潜入行动</a></li></ul><h3 id="Part-4-5-状态压缩动态规划"><a href="#Part-4-5-状态压缩动态规划" class="headerlink" title="Part 4.5 状态压缩动态规划"></a>Part 4.5 状态压缩动态规划</h3><blockquote><p>将一个状态压缩为一个整数（通常为二进制数），就可以在更为方便地进行状态转移的同时，达到节约空间的目的。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2704">P2704 [NOI2001]炮兵阵地</a></li><li><a href="https://www.luogu.org/problem/P1879">P1879 [USACO06NOV]Corn Fields</a></li><li><a href="https://www.luogu.org/problem/P1896">P1896 [SCOI2005]互不侵犯</a></li><li><a href="https://www.luogu.org/problem/P3092">P3092 [USACO13NOV]No Change</a></li><li><a href="https://www.luogu.org/problem/P3694">P3694 邦邦的大合唱站队</a></li><li><a href="https://www.luogu.org/problem/P4925">P4925 [1007]Scarlet的字符串不可能这么可爱</a></li><li><a href="https://www.luogu.org/problem/P2157">P2157 [SDOI2009]学校食堂</a></li><li><a href="https://www.luogu.org/problem/P2167">P2167 [SDOI2009]Bill的挑战</a></li><li><a href="https://www.luogu.org/problem/P2396">P2396 yyy loves Maths VII</a></li><li><a href="https://www.luogu.org/problem/P4363">P4363 [九省联考2018]一双木棋</a></li><li><a href="https://www.luogu.org/problem/P5005">P5005 中国象棋 - 摆上马</a></li><li><a href="https://www.luogu.org/problem/P2150">P2150 [NOI2015]寿司晚宴</a></li></ul><h3 id="Part-4-6-倍增优化动态规划"><a href="#Part-4-6-倍增优化动态规划" class="headerlink" title="Part 4.6 倍增优化动态规划"></a>Part 4.6 倍增优化动态规划</h3><blockquote><p>利用倍增的方式，我们可以将状态转移的效率大大提高。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1613">P1613 跑路</a></li><li><a href="https://www.luogu.org/problem/P1081">P1081 开车旅行</a></li><li><a href="https://www.luogu.org/problem/P5024">P5024 保卫王国</a></li></ul><h3 id="Part-4-7-数据结构优化动态规划"><a href="#Part-4-7-数据结构优化动态规划" class="headerlink" title="Part 4.7 数据结构优化动态规划"></a>Part 4.7 数据结构优化动态规划</h3><blockquote><p>利用数据结构来维护已有信息，也可以达到优化状态转移的目的。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4719">P4719 【模板】动态dp</a></li><li><a href="https://www.luogu.org/problem/P4751">P4751 动态dp【加强版】</a></li><li><a href="https://www.luogu.org/problem/P3287">P3287 [SCOI2014]方伯伯的玉米田</a></li><li><a href="https://www.luogu.org/problem/P2605">P2605 [ZJOI2010]基站选址</a></li></ul><h3 id="Part-4-8-单调队列优化动态规划"><a href="#Part-4-8-单调队列优化动态规划" class="headerlink" title="Part 4.8 单调队列优化动态规划"></a>Part 4.8 单调队列优化动态规划</h3><blockquote><p>借助单调队列，排除不可能的决策，可以起到优化状态转移的效果。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1776">P1776 宝物筛选</a></li><li><a href="https://www.luogu.org/problem/P3089">P3089 [USACO13NOV]Pogo-Cow</a></li><li><a href="https://www.luogu.org/problem/P3572">P3572 [POI2014]PTA-Little Bird</a></li><li><a href="https://www.luogu.org/problem/P3522">P3522 [POI2011]TEM-Temperature</a></li><li><a href="https://www.luogu.org/problem/P4544">P4544 [USACO10NOV]Buying Feed</a></li><li><a href="https://www.luogu.org/problem/P1973">P1973 [NOI2011]Noi嘉年华</a></li><li><a href="https://www.luogu.org/problem/P2569">P2569 [SCOI2010]股票交易</a></li><li><a href="https://www.luogu.org/problem/P4852">P4852 yyf hates choukapai</a></li></ul><h3 id="Part-4-9-斜率优化动态规划"><a href="#Part-4-9-斜率优化动态规划" class="headerlink" title="Part 4.9 斜率优化动态规划"></a>Part 4.9 斜率优化动态规划</h3><blockquote><p>通过用单调队列维护一个凸壳，来达到优化转移的目的。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2900">P2900 [USACO08MAR]Land Acquisition</a></li><li><a href="https://www.luogu.org/problem/P3195">P3195 [HNOI2008]玩具装箱</a></li><li><a href="https://www.luogu.org/problem/P3628">P3628 [APIO2010]特别行动队</a></li><li><a href="https://www.luogu.org/problem/P3648">P3648 [APIO2014]序列分割</a></li><li><a href="https://www.luogu.org/problem/P4027">P4027 [NOI2007]货币兑换</a></li><li><a href="https://www.luogu.org/problem/P4360">P4360 [CEOI2004]锯木厂选址</a></li><li><a href="https://www.luogu.org/problem/P5468">P5468 [NOI2019]回家路线</a></li><li><a href="https://www.luogu.org/problem/P2305">P2305 [NOI2014]购票</a></li></ul><h3 id="Part-4-10-决策单调性优化动态规划"><a href="#Part-4-10-决策单调性优化动态规划" class="headerlink" title="Part 4.10 决策单调性优化动态规划"></a>Part 4.10 决策单调性优化动态规划</h3><blockquote><p>利用决策间的递变规律，也能实现优化状态转移的目的。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3515">P3515 [POI2011]Lightning Conductor</a></li><li><a href="https://www.luogu.org/problem/P4767">P4767 [IOI2000]邮局</a></li><li><a href="https://www.luogu.org/problem/P1912">P1912 [NOI2009]诗人小G</a></li><li><a href="https://www.luogu.org/problem/P1973">P1973 [NOI2011]Noi嘉年华</a></li><li><a href="https://www.luogu.org/problem/P3724">P3724 [AH2017/HNOI2017]大佬</a></li><li><a href="https://www.luogu.org/problem/P5574">P5574 [CmdOI2019]任务分配问题</a></li></ul><h3 id="Part-4-11-数位统计类动态规划"><a href="#Part-4-11-数位统计类动态规划" class="headerlink" title="Part 4.11 数位统计类动态规划"></a>Part 4.11 数位统计类动态规划</h3><blockquote><p>统计一个区间中满足条件的数有多少，就是数位统计类动态规划。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2602">P2602 [ZJOI2010]数字计数</a></li><li><a href="https://www.luogu.org/problem/P3281">P3281 [SCOI2013]数数</a></li><li><a href="https://www.luogu.org/problem/P2518">P2518 [HAOI2010]计数</a></li><li><a href="https://www.luogu.org/problem/P2657">P2657 [SCOI2009]windy数</a></li><li><a href="https://www.luogu.org/problem/P3286">P3286 [SCOI2014]方伯伯的商场之旅</a></li><li><a href="https://www.luogu.org/problem/P4124">P4124 [CQOI2016]手机号码</a></li><li><a href="https://www.luogu.org/problem/P4999">P4999 烦人的数学作业</a></li><li><a href="https://www.luogu.org/problem/P2606">P2606 [ZJOI2010]排列计数</a></li><li><a href="https://www.luogu.org/problem/P4798">P4798 [CEOI2015 Day1]卡尔文球锦标赛</a></li></ul><h3 id="Part-4-12-轮廓线动态规划"><a href="#Part-4-12-轮廓线动态规划" class="headerlink" title="Part 4.12 轮廓线动态规划"></a>Part 4.12 轮廓线动态规划</h3><blockquote><p>轮廓线动态规划（即常说的插头 DP）是一种特殊的状压动态规划，通过以轮廓线为状态来实现状态转移。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P5056">P5056 【模板】插头dp</a></li><li><a href="https://www.luogu.org/problem/P2289">P2289 [HNOI2004]邮递员</a></li><li><a href="https://www.luogu.org/problem/P2337">P2337 [SCOI2012]喵星人的入侵</a></li><li><a href="https://www.luogu.org/problem/P5347">P5347 【XR-1】俄罗斯方块</a></li></ul><h2 id="Part-5-字符串"><a href="#Part-5-字符串" class="headerlink" title="Part 5 字符串"></a>Part 5 字符串</h2><blockquote><p>字符串问题有很多自己的特点。</p></blockquote><h3 id="Part-5-1-字符串哈希"><a href="#Part-5-1-字符串哈希" class="headerlink" title="Part 5.1 字符串哈希"></a>Part 5.1 字符串哈希</h3><blockquote><p>字符串哈希通过牺牲很小的准确率，达到快速进行字符串匹配的效果。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3370">P3370 【模板】字符串哈希</a></li><li><a href="https://www.luogu.org/problem/P5270">P5270 无论怎样神树大人都会删库跑路</a></li><li><a href="https://www.luogu.org/problem/P5537">P5537 【XR-3】系统设计</a></li></ul><h3 id="Part-5-2-KMP"><a href="#Part-5-2-KMP" class="headerlink" title="Part 5.2 KMP"></a>Part 5.2 KMP</h3><blockquote><p>KMP 算法可以用来解决模式串匹配问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3375">P3375 【模板】KMP字符串匹配</a></li><li><a href="https://www.luogu.org/problem/P4391">P4391 [BOI2009]Radio Transmission</a></li><li><a href="https://www.luogu.org/problem/P3435">P3435 [POI2006]OKR-Periods of Words</a></li><li><a href="https://www.luogu.org/problem/P4824">P4824 [USACO15FEB]Censoring (Silver)</a></li><li><a href="https://www.luogu.org/problem/P2375">P2375 [NOI2014]动物园</a></li><li><a href="https://www.luogu.org/problem/P3426">P3426 [POI2005]SZA-Template</a></li><li><a href="https://www.luogu.org/problem/P3193">P3193 [HNOI2008]GT考试</a></li></ul><h3 id="Part-5-3-Manacher"><a href="#Part-5-3-Manacher" class="headerlink" title="Part 5.3 Manacher"></a>Part 5.3 Manacher</h3><blockquote><p>Manacher 可以在线性时间内求出一个字符串的最长回文子串。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3805">P3805 【模板】manacher算法</a></li><li><a href="https://www.luogu.org/problem/P4555">P4555 [国家集训队]最长双回文串</a></li><li><a href="https://www.luogu.org/problem/P1659">P1659 [国家集训队]拉拉队排练</a></li></ul><h3 id="Part-5-4-Trie树"><a href="#Part-5-4-Trie树" class="headerlink" title="Part 5.4 Trie树"></a>Part 5.4 Trie树</h3><blockquote><p>Trie树可以像查字典一样把多个字符串组织到一棵树上。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3879">P3879 [TJOI2010]阅读理解</a></li><li><a href="https://www.luogu.org/problem/P2292">P2292 [HNOI2004]L语言</a></li><li><a href="https://www.luogu.org/problem/P2922">P2922 [USACO08DEC]Secret Message</a></li><li><a href="https://www.luogu.org/problem/P3065">P3065 [USACO12DEC]First!</a></li><li><a href="https://www.luogu.org/problem/P3294">P3294 [SCOI2016]背单词</a></li><li><a href="https://www.luogu.org/problem/P4407">P4407 [JSOI2009]电子字典</a></li><li><a href="https://www.luogu.org/problem/P4551">P4551 最长异或路径</a></li><li><a href="https://www.luogu.org/problem/P4683">P4683 [IOI2008]Type Printer</a></li><li><a href="https://www.luogu.org/problem/P3783">P3783 [SDOI2017]天才黑客</a></li></ul><h3 id="Part-5-5-AC自动机"><a href="#Part-5-5-AC自动机" class="headerlink" title="Part 5.5 AC自动机"></a>Part 5.5 AC自动机</h3><blockquote><p>AC自动机可以看成是 KMP 和 Trie 的结合体，用于解决多字符串匹配问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3808">P3808 【模板】AC自动机（简单版）</a></li><li><a href="https://www.luogu.org/problem/P3796">P3796 【模板】AC自动机（加强版）</a></li><li><a href="https://www.luogu.org/problem/P5357">P5357 【模板】AC自动机（二次加强版）</a></li><li><a href="https://www.luogu.org/problem/P3121">P3121 [USACO15FEB]Censoring (Gold)</a></li><li><a href="https://www.luogu.org/problem/P2414">P2414 [NOI2011]阿狸的打字机</a></li><li><a href="https://www.luogu.org/problem/P3966">P3966 [TJOI2013]单词</a></li><li><a href="https://www.luogu.org/problem/P2444">P2444 [POI2000]病毒</a></li><li><a href="https://www.luogu.org/problem/P3311">P3311 [SDOI2014]数数</a></li><li><a href="https://www.luogu.org/problem/P4052">P4052 [JSOI2007]文本生成器</a></li><li><a href="https://www.luogu.org/problem/P5599">P5599 【XR-4】文本编辑器</a></li></ul><h3 id="Part-5-6-回文自动机"><a href="#Part-5-6-回文自动机" class="headerlink" title="Part 5.6 回文自动机"></a>Part 5.6 回文自动机</h3><blockquote><p>回文自动机是解决回文串问题的有力工具。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P5496">P5496 【模板】回文自动机（PAM）</a></li><li><a href="https://www.luogu.org/problem/P3649">P3649 [APIO2014]回文串</a></li><li><a href="https://www.luogu.org/problem/solution/P4287">P4287 [SHOI2011]双倍回文</a></li><li><a href="https://www.luogu.org/problem/P4762">P4762 [CERC2014]Virus synthesis</a></li></ul><h3 id="Part-5-7-后缀数组"><a href="#Part-5-7-后缀数组" class="headerlink" title="Part 5.7 后缀数组"></a>Part 5.7 后缀数组</h3><blockquote><p>后缀数组可以解决很多字符串匹配的问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3809">P3809 【模板】后缀排序</a></li><li><a href="https://www.luogu.org/problem/P5353">P5353 【模板】树上后缀排序</a></li><li><a href="https://www.luogu.org/problem/P2336">P2336 [SCOI2012]喵星球上的点名</a></li><li><a href="https://www.luogu.org/problem/P2463">P2463 [SDOI2008]Sandy的卡片</a></li><li><a href="https://www.luogu.org/problem/P2852">P2852 [USACO06DEC]Milk Patterns</a></li><li><a href="https://www.luogu.org/problem/P4051">P4051 [JSOI2007]字符加密</a></li><li><a href="https://www.luogu.org/problem/P1117">P1117 [NOI2016]优秀的拆分</a></li><li><a href="https://www.luogu.org/problem/P2178">P2178 [NOI2015]品酒大会</a></li><li><a href="https://www.luogu.org/problem/P5346">P5346 【XR-1】柯南家族</a></li><li><a href="https://www.luogu.org/problem/P5576">P5576 [CmdOI2019]口头禅</a></li></ul><h3 id="Part-5-8-后缀自动机"><a href="#Part-5-8-后缀自动机" class="headerlink" title="Part 5.8 后缀自动机"></a>Part 5.8 后缀自动机</h3><blockquote><p>后缀自动机是一种处理字符串问题的强大工具。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3804">P3804 【模板】后缀自动机</a></li><li><a href="https://www.luogu.org/problem/P3649">P3649 [APIO2014]回文串</a></li><li><a href="https://www.luogu.org/problem/P3975">P3975 [TJOI2015]弦论</a></li><li><a href="https://www.luogu.org/problem/P4248">P4248 [AHOI2013]差异</a></li><li><a href="https://www.luogu.org/problem/P5341">P5341 [TJOI2019]甲苯先生和大中锋的字符串</a></li><li><a href="https://www.luogu.org/problem/P4770">P4770 [NOI2018]你的名字</a></li><li><a href="https://www.luogu.org/problem/P5284">P5284 [十二省联考2019]字符串问题</a></li><li><a href="https://www.luogu.org/problem/P5319">P5319 [BJOI2019]奥术神杖</a></li></ul><h2 id="Part-6-数学"><a href="#Part-6-数学" class="headerlink" title="Part 6 数学"></a>Part 6 数学</h2><blockquote><p>OI 中的数学知识很多，也有些杂乱。</p></blockquote><h3 id="Part-6-1-位运算"><a href="#Part-6-1-位运算" class="headerlink" title="Part 6.1 位运算"></a>Part 6.1 位运算</h3><blockquote><p>将十进制整数转换为二进制后，有很多按位运算的运算符。</p><p>如果能善于利用位运算的一些性质，往往能达到事半功倍的效果。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P5514">P5514 [MtOI2019]永夜的报应</a></li><li><a href="https://www.luogu.org/problem/P5538">P5538 【XR-3】Namid[A]me</a></li><li><a href="https://www.luogu.org/problem/P5539">P5539 【XR-3】Unknown Mother-Goose</a></li><li><a href="https://www.luogu.org/problem/P5523">P5523 [yLOI2019]珍珠</a></li></ul><h3 id="Part-6-2-整除相关"><a href="#Part-6-2-整除相关" class="headerlink" title="Part 6.2 整除相关"></a>Part 6.2 整除相关</h3><blockquote><p>与整除相关的概念有很多，比较常用的有素数，最大公约数和欧拉函数。</p></blockquote><h4 id="Part-6-2-1-素数"><a href="#Part-6-2-1-素数" class="headerlink" title="Part 6.2.1 素数"></a>Part 6.2.1 素数</h4><blockquote><p>素数，指的是除 1 和它本身之外没有其他约数的数。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4718">P4718 【模板】Pollard-Rho算法</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P1075">P1075 质因数分解</a></li><li><input disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P2441">P2441 角色属性树</a></li><li><a href="https://www.luogu.org/problem/P5535">P5535 【XR-3】小道消息</a></li></ul><h4 id="Part-6-2-2-最大公约数"><a href="#Part-6-2-2-最大公约数" class="headerlink" title="Part 6.2.2 最大公约数"></a>Part 6.2.2 最大公约数</h4><blockquote><p>如果两个数有一个共同的约数，那么这个约数就被称为公约数。最大公约数就是指这两个数的所有公约数中，最大的一个。</p><p>求解两个数的最大公约数，可以采用欧几里得算法解决。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P5435">P5435 【模板】快速 GCD</a></li><li><a href="https://www.luogu.org/problem/P5436">P5436 【XR-2】缘分</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P1029">P1029 最大公约数和最小公倍数问题</a></li><li><a href="https://www.luogu.org/problem/P1414">P1414 又是毕业季II</a></li><li><a href="https://www.luogu.org/problem/P2152">P2152 [SDOI2009]SuperGCD</a></li><li><a href="https://www.luogu.org/problem/P1072">P1072 Hankson 的趣味题</a></li></ul><h4 id="Part-6-2-3-欧拉函数"><a href="#Part-6-2-3-欧拉函数" class="headerlink" title="Part 6.2.3 欧拉函数"></a>Part 6.2.3 欧拉函数</h4><blockquote><p>欧拉函数 $ \varphi (x) $ 表示了小于 $ x $ 的数字中，与 $ x $ 互质的数字个数。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2158">P2158 [SDOI2008]仪仗队</a></li><li><a href="https://www.luogu.org/problem/P2568">P2568 GCD</a></li><li><a href="https://www.luogu.org/problem/P2398">P2398 GCD SUM</a></li><li><a href="https://www.luogu.org/problem/P4139">P4139 上帝与集合的正确用法</a></li></ul><h3 id="Part-6-3-同余方程"><a href="#Part-6-3-同余方程" class="headerlink" title="Part 6.3 同余方程"></a>Part 6.3 同余方程</h3><blockquote><p>求解同余方程往往可以引出不少话题。</p></blockquote><h4 id="Part-6-3-1-线性同余方程-乘法逆元"><a href="#Part-6-3-1-线性同余方程-乘法逆元" class="headerlink" title="Part 6.3.1 线性同余方程&amp;乘法逆元"></a>Part 6.3.1 线性同余方程&amp;乘法逆元</h4><blockquote><p>线性同余方程是同余方程中最基础的内容。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P4549">P4549 【模板】裴蜀定理</a></li><li><a href="https://www.luogu.org/problem/P2613">P2613 【模板】有理数取余</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3811">P3811 【模板】乘法逆元</a></li><li><a href="https://www.luogu.org/problem/P5431">P5431 【模板】乘法逆元2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P1082">P1082 同余方程</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3951">P3951 小凯的疑惑</a></li><li><a href="https://www.luogu.org/problem/P1516">P1516 青蛙的约会</a></li></ul><h4 id="Part-6-3-2-中国剩余定理"><a href="#Part-6-3-2-中国剩余定理" class="headerlink" title="Part 6.3.2 中国剩余定理"></a>Part 6.3.2 中国剩余定理</h4><blockquote><p>中国剩余定理可以快速解一元线性同余方程组。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4777">P4777 【模板】扩展中国剩余定理（EXCRT）</a></li><li><a href="https://www.luogu.org/problem/P3868">P3868 [TJOI2009]猜数字</a></li><li><a href="https://www.luogu.org/problem/P2480">P2480 [SDOI2010]古代猪文</a></li><li><a href="https://www.luogu.org/problem/P4774">P4774 [NOI2018]屠龙勇士</a></li><li><a href="https://www.luogu.org/problem/P5345">P5345 【XR-1】快乐肥宅</a></li></ul><h4 id="Part-6-3-3-高次同余方程"><a href="#Part-6-3-3-高次同余方程" class="headerlink" title="Part 6.3.3 高次同余方程"></a>Part 6.3.3 高次同余方程</h4><blockquote><p>BSGS 算法可以高效计算离散对数。</p><p>而高次剩余的求解更加复杂，其中二次剩余作为高次剩余中比较特殊的情况，可以使用 Cipolla 法求解。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4195">P4195 【模板】exBSGS</a></li><li><a href="https://www.luogu.org/problem/P5491">P5491 【模板】二次剩余</a></li><li><a href="https://www.luogu.org/problem/P3306">P3306 [SDOI2013]随机数生成器</a></li></ul><h3 id="Part-6-4-博弈论"><a href="#Part-6-4-博弈论" class="headerlink" title="Part 6.4 博弈论"></a>Part 6.4 博弈论</h3><blockquote><p>博弈论考虑游戏中的个体的预测行为和实际行为，并研究它们的优化策略。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2197">P2197 【模板】nim游戏</a></li><li><a href="https://www.luogu.org/problem/P1288">P1288 取数游戏II</a></li><li><a href="https://www.luogu.org/problem/P1290">P1290 欧几里德的游戏</a></li><li><a href="https://www.luogu.org/problem/P1247">P1247 取火柴游戏</a></li><li><a href="https://www.luogu.org/problem/P2252">P2252 取石子游戏</a></li></ul><h3 id="Part-6-5-概率与期望"><a href="#Part-6-5-概率与期望" class="headerlink" title="Part 6.5 概率与期望"></a>Part 6.5 概率与期望</h3><blockquote><p>概率和期望是紧密相连的，OI 中往往会出现和概率期望相关的动态规划问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P5104">P5104 红包发红包</a></li><li><a href="https://www.luogu.org/problem/P1850">P1850 换教室</a></li><li><a href="https://www.luogu.org/problem/P3830">P3830 [SHOI2012]随机树</a></li><li><a href="https://www.luogu.org/problem/P4564">P4564 [CTSC2018]假面</a></li><li><a href="https://www.luogu.org/problem/P2473">P2473 [SCOI2008]奖励关</a></li><li><a href="https://www.luogu.org/problem/P2221">P2221 [HAOI2012]高速公路</a></li><li><a href="https://www.luogu.org/problem/P3239">P3239 [HNOI2015]亚瑟王</a></li><li><a href="https://www.luogu.org/problem/P3750">P3750 [六省联考2017]分手是祝愿</a></li><li><a href="https://www.luogu.org/problem/P4284">P4284 [SHOI2014]概率充电器</a></li><li><a href="https://www.luogu.org/problem/P5249">P5249 [LnOI2019]加特林轮盘赌</a></li><li><a href="https://www.luogu.org/problem/P2081">P2081 [NOI2012]迷失游乐园</a></li><li><a href="https://www.luogu.org/problem/P3343">P3343 [ZJOI2015]地震后的幻想乡</a></li><li><a href="https://www.luogu.org/problem/P3600">P3600 随机数生成器</a></li><li><a href="https://www.luogu.org/problem/P5326">P5326 [ZJOI2019]开关</a></li></ul><h3 id="Part-6-6-组合数学"><a href="#Part-6-6-组合数学" class="headerlink" title="Part 6.6 组合数学"></a>Part 6.6 组合数学</h3><blockquote><p>组合数学常常与计数问题，概率期望紧密相连。</p></blockquote><h4 id="Part-6-6-1-排列组合"><a href="#Part-6-6-1-排列组合" class="headerlink" title="Part 6.6.1 排列组合"></a>Part 6.6.1 排列组合</h4><blockquote><p>排列组合是组合数学的基础。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3807">P3807 【模板】卢卡斯定理</a></li><li><a href="https://www.luogu.org/problem/P2822">P2822 组合数问题</a></li><li><a href="https://www.luogu.org/problem/P5520">P5520 [yLOI2019]青原樱</a></li><li><a href="https://www.luogu.org/problem/P3197">P3197 [HNOI2008]越狱</a></li><li><a href="https://www.luogu.org/problem/P2290">P2290 [HNOI2004]树的计数</a></li><li><a href="https://www.luogu.org/problem/P4981">P4981 父子</a></li><li><a href="https://www.luogu.org/problem/P4769">P4769 [NOI2018]冒泡排序</a></li><li><a href="https://www.luogu.org/problem/P4931">P4931 情侣？给我烧了！（加强版）</a></li><li><a href="https://www.luogu.org/problem/P5596">P5596 【XR-4】题</a></li><li><a href="https://www.luogu.org/problem/P5598">P5598 【XR-4】混乱度</a></li></ul><h4 id="Part-6-6-2-卡特兰数-斯特林数"><a href="#Part-6-6-2-卡特兰数-斯特林数" class="headerlink" title="Part 6.6.2 卡特兰数&amp;斯特林数"></a>Part 6.6.2 卡特兰数&amp;斯特林数</h4><blockquote><p>卡特兰数和斯特林数是两类常见的组合递推数列。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P5395">P5395 【模板】第二类斯特林数·行</a></li><li><a href="https://www.luogu.org/problem/P5396">P5396 【模板】第二类斯特林数·列</a></li><li><a href="https://www.luogu.org/problem/P5408">P5408 【模板】第一类斯特林数·行</a></li><li><a href="https://www.luogu.org/problem/P5409">P5409 【模板】第一类斯特林数·列</a></li><li><a href="https://www.luogu.org/problem/P1655">P1655 小朋友的球</a></li><li><a href="https://www.luogu.org/problem/P2532">P2532 [AHOI2012]树屋阶梯</a></li><li><a href="https://www.luogu.org/problem/P3200">P3200 [HNOI2009]有趣的数列</a></li><li><a href="https://www.luogu.org/problem/P3978">P3978 [TJOI2015]概率论</a></li><li><a href="https://www.luogu.org/problem/P4091">P4091 [HEOI2016/TJOI2016]求和</a></li><li><a href="https://www.luogu.org/problem/P4827">P4827 [国家集训队]Crash 的文明世界</a></li></ul><h4 id="Part-6-6-3-容斥原理"><a href="#Part-6-6-3-容斥原理" class="headerlink" title="Part 6.6.3 容斥原理"></a>Part 6.6.3 容斥原理</h4><blockquote><p>容斥原理常常用于解决集合的计数问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1450">P1450 [HAOI2008]硬币购物</a></li><li><a href="https://www.luogu.org/problem/P3214">P3214 [HNOI2011]卡农</a></li><li><a href="https://www.luogu.org/problem/P3270">P3270 [JLOI2016]成绩比较</a></li><li><a href="https://www.luogu.org/problem/P4336">P4336 [SHOI2016]黑暗前的幻想乡</a></li><li><a href="https://www.luogu.org/problem/P4448">P4448 [AHOI2018初中组]球球的排列</a></li><li><a href="https://www.luogu.org/problem/P4491">P4491 [HAOI2018]染色</a></li><li><a href="https://www.luogu.org/problem/P5339">P5339 [TJOI2019]唱、跳、rap和篮球</a></li><li><a href="https://www.luogu.org/problem/P5400">P5400 [CTS2019]随机立方体</a></li></ul><h3 id="Part-6-7-线性代数"><a href="#Part-6-7-线性代数" class="headerlink" title="Part 6.7 线性代数"></a>Part 6.7 线性代数</h3><blockquote><p>线性代数主要用于解决线性关系问题。</p></blockquote><h4 id="Part-6-7-1-矩阵"><a href="#Part-6-7-1-矩阵" class="headerlink" title="Part 6.7.1 矩阵"></a>Part 6.7.1 矩阵</h4><blockquote><p>利用矩阵优化数列递推，可以实现复杂度从线性到对数级的转变。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3390">P3390 【模板】矩阵快速幂</a></li><li><a href="https://www.luogu.org/problem/P1939">P1939 【模板】矩阵加速（数列）</a></li><li><a href="https://www.luogu.org/problem/P4783">P4783 【模板】矩阵求逆</a></li><li><a href="https://www.luogu.org/problem/P1962">P1962 斐波那契数列</a></li><li><a href="https://www.luogu.org/problem/P1349">P1349 广义斐波那契数列</a></li><li><a href="https://www.luogu.org/problem/P4000">P4000 斐波那契数列</a></li><li><a href="https://www.luogu.org/problem/P3758">P3758 [TJOI2017]可乐</a></li><li><a href="https://www.luogu.org/problem/P4967">P4967 黑暗打击</a></li><li><a href="https://www.luogu.org/problem/P5343">P5343 【XR-1】分块</a></li><li><a href="https://www.luogu.org/problem/P5337">P5337 [TJOI2019]甲苯先生的字符串</a></li><li><a href="https://www.luogu.org/problem/P5303">P5303 [GXOI/GZOI2019]逼死强迫症</a></li></ul><h4 id="Part-6-7-2-高斯消元"><a href="#Part-6-7-2-高斯消元" class="headerlink" title="Part 6.7.2 高斯消元"></a>Part 6.7.2 高斯消元</h4><blockquote><p>高斯消元可以用来求解方程组。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3389">P3389 【模板】高斯消元法</a></li><li><a href="https://www.luogu.org/problem/P4387">P4387 付公主的函数</a></li><li><a href="https://www.luogu.org/problem/P2447">P2447 [SDOI2010]外星千足虫</a></li><li><a href="https://www.luogu.org/problem/P4035">P4035 [JSOI2008]球形空间产生器</a></li><li><a href="https://www.luogu.org/problem/P5516">P5516 [MtOI2019]小铃的烦恼</a></li><li><a href="https://www.luogu.org/problem/P4111">P4111 [HEOI2015]小Z的房间</a></li><li><a href="https://www.luogu.org/problem/P4457">P4457 [BJOI2018]治疗之雨</a></li></ul><h4 id="Part-6-7-3-线性基"><a href="#Part-6-7-3-线性基" class="headerlink" title="Part 6.7.3 线性基"></a>Part 6.7.3 线性基</h4><blockquote><p>线性基可以求解最大异或和的一类问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3812">P3812 【模板】线性基</a></li><li><a href="https://www.luogu.org/problem/P3857">P3857 [TJOI2008]彩灯</a></li><li><a href="https://www.luogu.org/problem/P4570">P4570 [BJWC2011]元素</a></li><li><a href="https://www.luogu.org/problem/P4301">P4301 [CQOI2013]新Nim游戏</a></li><li><a href="https://www.luogu.org/problem/P3292">P3292 [SCOI2016]幸运数字</a></li><li><a href="https://www.luogu.org/problem/P4151">P4151 [WC2011]最大XOR和路径</a></li></ul><h3 id="Part-6-8-多项式"><a href="#Part-6-8-多项式" class="headerlink" title="Part 6.8 多项式"></a>Part 6.8 多项式</h3><blockquote><p>对多项式的运算进行优化，从而能够解决规模更大的问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1919">P1919 【模板】A*B Problem升级版（FFT快速傅里叶）</a></li><li><a href="https://www.luogu.org/problem/P3803">P3803 【模板】多项式乘法（FFT）</a></li><li><a href="https://www.luogu.org/problem/P4238">P4238 【模板】多项式求逆</a></li><li><a href="https://www.luogu.org/problem/P4239">P4239 【模板】多项式求逆（加强版）</a></li><li><a href="https://www.luogu.org/problem/P4245">P4245 【模板】任意模数NTT</a></li><li><a href="https://www.luogu.org/problem/P4512">P4512 【模板】多项式除法</a></li><li><a href="https://www.luogu.org/problem/P4717">P4717 【模板】快速沃尔什变换</a></li><li><a href="https://www.luogu.org/problem/P4721">P4721 【模板】分治 FFT</a></li><li><a href="https://www.luogu.org/problem/P4725">P4725 【模板】多项式对数函数</a></li><li><a href="https://www.luogu.org/problem/P4726">P4726 【模板】多项式指数函数</a></li><li><a href="https://www.luogu.org/problem/P4781">P4781 【模板】拉格朗日插值</a></li><li><a href="https://www.luogu.org/problem/P5050">P5050 【模板】多项式多点求值</a></li><li><a href="https://www.luogu.org/problem/P5158">P5158 【模板】多项式快速插值</a></li><li><a href="https://www.luogu.org/problem/P5205">P5205 【模板】多项式开根</a></li><li><a href="https://www.luogu.org/problem/P5245">P5245 【模板】多项式快速幂</a></li><li><a href="https://www.luogu.org/problem/P5264">P5264 【模板】多项式三角函数</a></li><li><a href="https://www.luogu.org/problem/P5265">P5265 【模板】多项式反三角函数</a></li><li><a href="https://www.luogu.org/problem/P5273">P5273 【模板】多项式幂函数 (加强版)</a></li><li><a href="https://www.luogu.org/problem/P5277">P5277 【模板】多项式开根（加强版）</a></li><li><a href="https://www.luogu.org/problem/P5282">P5282 【模板】快速阶乘算法</a></li><li><a href="https://www.luogu.org/problem/P5373">P5373 【模板】多项式复合函数</a></li><li><a href="https://www.luogu.org/problem/P5383">P5383 【模板】普通多项式转下降幂多项式</a></li><li><a href="https://www.luogu.org/problem/P5393">P5393 【模板】下降幂多项式转普通多项式</a></li><li><a href="https://www.luogu.org/problem/P5394">P5394 【模板】下降幂多项式乘法</a></li><li><a href="https://www.luogu.org/problem/P5494">P5494 【模板】多项式双曲函数</a></li><li><a href="https://www.luogu.org/problem/P3338">P3338 [ZJOI2014]力</a></li><li><a href="https://www.luogu.org/problem/P3723">P3723 [AH2017/HNOI2017]礼物</a></li><li><a href="https://www.luogu.org/problem/P5437">P5437 【XR-2】约定</a></li><li><a href="https://www.luogu.org/problem/P5293">P5293 [HNOI2019]白兔之舞</a></li><li><a href="https://www.luogu.org/problem/P5432">P5432 A/B Problem (加强版)</a></li><li><a href="https://www.luogu.org/problem/P5472">P5472 [NOI2019]斗主地</a></li><li><a href="https://www.luogu.org/problem/P5519">P5519 [MtOI2019]埋骨于弘川</a></li><li><a href="https://www.luogu.org/problem/P5577">P5577 [CmdOI2019]算力训练</a></li></ul><h3 id="Part-6-9-莫比乌斯反演"><a href="#Part-6-9-莫比乌斯反演" class="headerlink" title="Part 6.9 莫比乌斯反演"></a>Part 6.9 莫比乌斯反演</h3><blockquote><p>运用莫比乌斯反演，我们可以将一些函数转化，从而降低计算难度。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3172">P3172 [CQOI2015]选数</a></li><li><a href="https://www.luogu.org/problem/P3455">P3455 [POI2007]ZAP-Queries</a></li><li><a href="https://www.luogu.org/problem/P3327">P3327 [SDOI2015]约数个数和</a></li><li><a href="https://www.luogu.org/problem/P4619">P4619 [SDOI2018]旧试题</a></li><li><a href="https://www.luogu.org/problem/P5518">P5518 [MtOI2019]幽灵乐团</a></li></ul><h3 id="Part-6-10-筛法"><a href="#Part-6-10-筛法" class="headerlink" title="Part 6.10 筛法"></a>Part 6.10 筛法</h3><blockquote><p>利用数列的性质，有多种筛法可以求出我们想要的信息。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3383">P3383 【模板】线性筛素数</a></li><li><a href="https://www.luogu.org/problem/P4213">P4213 【模板】杜教筛（Sum）</a></li><li><a href="https://www.luogu.org/problem/P5325">P5325 【模板】Min_25筛</a></li><li><a href="https://www.luogu.org/problem/P1865">P1865 A % B Problem</a></li><li><a href="https://www.luogu.org/problem/P1621">P1621 集合</a></li><li><a href="https://www.luogu.org/problem/P3768">P3768 简单的数学题</a></li><li><a href="https://www.luogu.org/problem/P5438">P5438 【XR-2】记忆</a></li></ul><h3 id="Part-6-11-线性规划"><a href="#Part-6-11-线性规划" class="headerlink" title="Part 6.11 线性规划"></a>Part 6.11 线性规划</h3><blockquote><p>线性规划是研究线性约束条件下线性目标函数极值问题的方法。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3980">P3980 [NOI2008]志愿者招募</a></li><li><a href="https://www.luogu.org/problem/P4232">P4232 无意识之外的捉迷藏</a></li></ul><h3 id="Part-6-12-数值方法"><a href="#Part-6-12-数值方法" class="headerlink" title="Part 6.12 数值方法"></a>Part 6.12 数值方法</h3><blockquote><p>在算法领域，有很多求近似值的数值方法。</p></blockquote><h4 id="Part-6-12-1-三分法"><a href="#Part-6-12-1-三分法" class="headerlink" title="Part 6.12.1 三分法"></a>Part 6.12.1 三分法</h4><blockquote><p>三分法可以求出一个单峰 / 单谷函数的极值。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3382">P3382 【模板】三分法</a></li><li><a href="https://www.luogu.org/problem/P1883">P1883 函数</a></li></ul><h4 id="Part-6-12-2-自适应辛普森法"><a href="#Part-6-12-2-自适应辛普森法" class="headerlink" title="Part 6.12.2 自适应辛普森法"></a>Part 6.12.2 自适应辛普森法</h4><blockquote><p>自适应辛普森法可以高效求出给定函数的数值积分。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4525">P4525 【模板】自适应辛普森法1</a></li><li><a href="https://www.luogu.org/problem/P4526">P4526 【模板】自适应辛普森法2</a></li><li><a href="https://www.luogu.org/problem/P3779">P3779 [SDOI2017]龙与地下城</a></li></ul><h3 id="Part-6-13-置换群"><a href="#Part-6-13-置换群" class="headerlink" title="Part 6.13 置换群"></a>Part 6.13 置换群</h3><blockquote><p>置换群通常用来解决一些涉及“本质不同”的计数问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4980">P4980 【模板】Polya定理</a></li><li><a href="https://www.luogu.org/problem/P1446">P1446 [HNOI2008]Cards</a></li><li><a href="https://www.luogu.org/problem/P2561">P2561 [AHOI2002]黑白瓷砖</a></li><li><a href="https://www.luogu.org/problem/P4128">P4128 [SHOI2006]有色图</a></li><li><a href="https://www.luogu.org/problem/P4727">P4727 [HNOI2009]图的同构记数</a></li></ul><h2 id="Part-7-数据结构"><a href="#Part-7-数据结构" class="headerlink" title="Part 7 数据结构"></a>Part 7 数据结构</h2><blockquote><p>灵活地运用数据结构可以高效地查询并处理需要的信息。</p></blockquote><h3 id="Part-7-1-链表"><a href="#Part-7-1-链表" class="headerlink" title="Part 7.1 链表"></a>Part 7.1 链表</h3><blockquote><p>在一个数列中高效插入一个元素，链表毫无疑问是最好的选择。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1996">P1996 约瑟夫问题</a></li><li><a href="https://www.luogu.org/problem/P1160">P1160 队列安排</a></li></ul><h3 id="Part-7-2-栈"><a href="#Part-7-2-栈" class="headerlink" title="Part 7.2 栈"></a>Part 7.2 栈</h3><blockquote><p>栈，是一种后进先出（FILO）的数据结构。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1449">P1449 后缀表达式</a></li><li><a href="https://www.luogu.org/problem/P1739">P1739 表达式括号匹配</a></li><li><a href="https://www.luogu.org/problem/P1981">P1981 表达式求值</a></li><li><a href="https://www.luogu.org/problem/P1175">P1175 表达式的转换</a></li></ul><h3 id="Part-7-3-队列"><a href="#Part-7-3-队列" class="headerlink" title="Part 7.3 队列"></a>Part 7.3 队列</h3><blockquote><p>队列，是一种先进先出（FIFO）的数据结构。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P1540">P1540 机器翻译</a></li></ul><h3 id="Part-7-4-并查集"><a href="#Part-7-4-并查集" class="headerlink" title="Part 7.4 并查集"></a>Part 7.4 并查集</h3><blockquote><p>并查集常用于处理一些不相交集合的合并和查询问题。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P1111">P1111 修复公路</a></li><li><a href="https://www.luogu.org/problem/P3958">P3958 奶酪</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P1525">P1525 关押罪犯</a></li><li><a href="https://www.luogu.org/problem/P2024">P2024 [NOI2001]食物链</a></li><li><a href="https://www.luogu.org/problem/P1197">P1197 [JSOI2008]星球大战</a></li><li><a href="https://www.luogu.org/problem/P1196">P1196 [NOI2002]银河英雄传说</a></li><li><a href="https://www.luogu.org/problem/P1955">P1955 [NOI2015]程序自动分析</a></li></ul><h3 id="Part-7-5-二叉堆"><a href="#Part-7-5-二叉堆" class="headerlink" title="Part 7.5 二叉堆"></a>Part 7.5 二叉堆</h3><blockquote><p>二叉堆是一棵完全二叉树，堆中某个节点的值总是不大于或不小于其父节点的值。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3378">P3378 【模板】堆</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P1090">P1090 合并果子</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P1168">P1168 中位数</a></li><li><a href="https://www.luogu.org/problem/P2085">P2085 最小函数值</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P2827">P2827 蚯蚓</a></li></ul><h3 id="Part-7-6-ST表"><a href="#Part-7-6-ST表" class="headerlink" title="Part 7.6 ST表"></a>Part 7.6 ST表</h3><blockquote><p>ST表可以离线查询区间最值。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3865">P3865 【模板】ST表</a></li><li><a href="https://www.luogu.org/problem/P2251">P2251 质量检测</a></li><li><a href="https://www.luogu.org/problem/P1816">P1816 忠诚</a></li><li><a href="https://www.luogu.org/problem/P1198">P1198 [JSOI2008]最大数</a></li><li><a href="https://www.luogu.org/problem/P2880">P2880 [USACO07JAN]Balanced Lineup</a></li><li><a href="https://www.luogu.org/problem/P5012">P5012 水の数列</a></li><li><a href="https://www.luogu.org/problem/P5344">P5344 【XR-1】逛森林</a></li></ul><h3 id="Part-7-7-树状数组"><a href="#Part-7-7-树状数组" class="headerlink" title="Part 7.7 树状数组"></a>Part 7.7 树状数组</h3><blockquote><p>树状数组是一种简洁高效的树形数据结构。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3374">P3374 【模板】树状数组 1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3368">P3368 【模板】树状数组 2</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P1908">P1908 逆序对</a></li><li><a href="https://www.luogu.org/problem/P1966">P1966 火柴排队</a></li><li><a href="https://www.luogu.org/problem/P1972">P1972 [SDOI2009]HH的项链</a></li><li><a href="https://www.luogu.org/problem/P3586">P3586 [POI2015]LOG</a></li><li><a href="https://www.luogu.org/problem/P4054">P4054 [JSOI2009]计数问题</a></li><li><a href="https://www.luogu.org/problem/P4113">P4113 [HEOI2012]采花</a></li><li><a href="https://www.luogu.org/problem/P3960">P3960 列队</a></li></ul><h3 id="Part-7-8-线段树"><a href="#Part-7-8-线段树" class="headerlink" title="Part 7.8 线段树"></a>Part 7.8 线段树</h3><blockquote><p>线段树的通用性比树状数组更强，可以处理更多涉及区间操作的题目。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3372">P3372 【模板】线段树 1</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3373">P3373 【模板】线段树 2</a></li><li><a href="https://www.luogu.org/problem/P5490">P5490 【模板】扫描线</a></li><li><a href="https://www.luogu.org/problem/P1471">P1471 方差</a></li><li><a href="https://www.luogu.org/problem/P4588">P4588 [TJOI2018]数学计算</a></li><li><a href="https://www.luogu.org/problem/P1502">P1502 窗口的星星</a></li><li><a href="https://www.luogu.org/problem/P2471">P2471 [SCOI2007]降雨量</a></li><li><a href="https://www.luogu.org/problem/P2824">P2824 [HEOI2016/TJOI2016]排序</a></li><li><a href="https://www.luogu.org/problem/P3722">P3722 [AH2017/HNOI2017]影魔</a></li><li><a href="https://www.luogu.org/problem/P4097">P4097 [HEOI2013]Segment</a></li><li><input disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P4198">P4198 楼房重建</a></li><li><a href="https://www.luogu.org/problem/P4513">P4513 小白逛公园</a></li><li><a href="https://www.luogu.org/problem/P4556">P4556 [Vani有约会]雨天的尾巴</a></li><li><a href="https://www.luogu.org/problem/P5324">P5324 [BJOI2019]删数</a></li><li><a href="https://www.luogu.org/problem/P5327">P5327 [ZJOI2019]语言</a></li><li><a href="https://www.luogu.org/problem/P5500">P5500 [LnOI2019]真正的OIer从不女装</a></li></ul><h3 id="Part-7-9-分块"><a href="#Part-7-9-分块" class="headerlink" title="Part 7.9 分块"></a>Part 7.9 分块</h3><blockquote><p>分块是一种非常通用的暴力方法，虽然效率不如线段树和树状数组，但可以解决很多线段树和树状数组处理不了的问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3870">P3870 [TJOI2009]开关</a></li><li><a href="https://www.luogu.org/problem/P3396">P3396 哈希冲突</a></li><li><a href="https://www.luogu.org/problem/P3863">P3863 序列</a></li><li><a href="https://www.luogu.org/problem/P1975">P1975 [国家集训队]排队</a></li><li><a href="https://www.luogu.org/problem/P3710">P3710 方方方的数据结构</a></li><li><a href="https://www.luogu.org/problem/P3992">P3992 [BJOI2017]开车</a></li><li><a href="https://www.luogu.org/problem/P4168">P4168 [Violet]蒲公英</a></li><li><a href="https://www.luogu.org/problem/P4119">P4119 [Ynoi2018]未来日记</a></li></ul><h3 id="Part-7-10-可并堆"><a href="#Part-7-10-可并堆" class="headerlink" title="Part 7.10 可并堆"></a>Part 7.10 可并堆</h3><blockquote><p>可并堆分为左偏树和配对堆两种，它们都具有堆的性质，且可以高效合并。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3377">P3377 【模板】左偏树（可并堆）</a></li><li><a href="https://www.luogu.org/problem/P2713">P2713 罗马游戏</a></li><li><a href="https://www.luogu.org/problem/P1456">P1456 Monkey King</a></li><li><a href="https://www.luogu.org/problem/P1552">P1552 [APIO2012]派遣</a></li><li><a href="https://www.luogu.org/problem/P3261">P3261 [JLOI2015]城池攻占</a></li><li><a href="https://www.luogu.org/problem/P3273">P3273 [SCOI2011]棘手的操作</a></li><li><a href="https://www.luogu.org/problem/P4331">P4331 [BOI2004]Sequence</a></li></ul><h3 id="Part-7-11-主席树"><a href="#Part-7-11-主席树" class="headerlink" title="Part 7.11 主席树"></a>Part 7.11 主席树</h3><blockquote><p>主席树，即可持久化权值线段树。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2468">P2468 [SDOI2010]粟粟的书架</a></li><li><a href="https://www.luogu.org/problem/P3302">P3302 [SDOI2013]森林</a></li><li><a href="https://www.luogu.org/problem/P3168">P3168 [CQOI2015]任务查询系统</a></li><li><a href="https://www.luogu.org/problem/P4559">P4559 [JSOI2018]列队</a></li><li><a href="https://www.luogu.org/problem/P2633">P2633 Count on a tree</a></li><li><a href="https://www.luogu.org/problem/P3293">P3293 [SCOI2016]美味</a></li><li><a href="https://www.luogu.org/problem/P4618">P4618 [SDOI2018]原题识别</a></li></ul><h3 id="Part-7-12-平衡树"><a href="#Part-7-12-平衡树" class="headerlink" title="Part 7.12 平衡树"></a>Part 7.12 平衡树</h3><blockquote><p>二叉搜索树可以用来维护有序序列。</p><p>为了保证查询效率，有多种使二叉搜索树保持平衡的实现方法。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3369">P3369 【模板】普通平衡树</a></li><li><a href="https://www.luogu.org/problem/P3391">P3391 【模板】文艺平衡树（Splay）</a></li><li><a href="https://www.luogu.org/problem/P3850">P3850 [TJOI2007]书架</a></li><li><a href="https://www.luogu.org/problem/P4008">P4008 [NOI2003]文本编辑器</a></li><li><a href="https://www.luogu.org/problem/P5338">P5338 [TJOI2019]甲苯先生的滚榜</a></li><li><a href="https://www.luogu.org/problem/P2042">P2042 [NOI2005]维护数列</a></li><li><a href="https://www.luogu.org/problem/P1110">P1110 [ZJOI2007]报表统计</a></li><li><a href="https://www.luogu.org/problem/P3644">P3644 [APIO2015]八邻旁之桥</a></li><li><a href="https://www.luogu.org/problem/P1486">P1486 [NOI2004]郁闷的出纳员</a></li><li><a href="https://www.luogu.org/problem/P2710">P2710 数列</a></li><li><a href="https://www.luogu.org/problem/P3224">P3224 [HNOI2012]永无乡</a></li><li><a href="https://www.luogu.org/problem/P3285">P3285 [SCOI2014]方伯伯的OJ</a></li><li><a href="https://www.luogu.org/problem/P5321">P5321 [BJOI2019]送别</a></li></ul><h3 id="Part-7-13-树链剖分"><a href="#Part-7-13-树链剖分" class="headerlink" title="Part 7.13 树链剖分"></a>Part 7.13 树链剖分</h3><blockquote><p>树链剖分可以将任意一条树上路径划分成若干条连续的链，并用线段树等数据结构高效维护链上信息。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3384">P3384 【模板】树链剖分</a></li><li><a href="https://www.luogu.org/problem/P3313">P3313 [SDOI2014]旅行</a></li><li><a href="https://www.luogu.org/problem/P2590">P2590 [ZJOI2008]树的统计</a></li><li><a href="https://www.luogu.org/problem/P1505">P1505 [国家集训队]旅游</a></li><li><a href="https://www.luogu.org/problem/P2486">P2486 [SDOI2011]染色</a></li><li><a href="https://www.luogu.org/problem/P2146">P2146 [NOI2015]软件包管理器</a></li><li><a href="https://www.luogu.org/problem/P3178">P3178 [HAOI2015]树上操作</a></li><li><a href="https://www.luogu.org/problem/P3258">P3258 [JLOI2014]松鼠的新家</a></li><li><a href="https://www.luogu.org/problem/P4069">P4069 [SDOI2016]游戏</a></li><li><a href="https://www.luogu.org/problem/P4211">P4211 [LNOI2014]LCA</a></li><li><a href="https://www.luogu.org/problem/P4592">P4592 [TJOI2018]异或</a></li><li><a href="https://www.luogu.org/problem/P5305">P5305 [GXOI/GZOI2019]旧词</a></li><li><a href="https://www.luogu.org/problem/P5354">P5354 [Ynoi2017]由乃的OJ</a></li><li><a href="https://www.luogu.org/problem/P5499">P5499 [LnOI2019]Abbi并不想研学</a></li></ul><h3 id="Part-7-14-树套树"><a href="#Part-7-14-树套树" class="headerlink" title="Part 7.14 树套树"></a>Part 7.14 树套树</h3><blockquote><p>树套树可以用来维护多维度信息。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3380">P3380 【模板】二逼平衡树（树套树）</a></li><li><a href="https://www.luogu.org/problem/P1975">P1975 [国家集训队]排队</a></li><li><a href="https://www.luogu.org/problem/P3332">P3332 [ZJOI2013]K大数查询</a></li><li><a href="https://www.luogu.org/problem/P4278">P4278 带插入区间K小值</a></li><li><a href="https://www.luogu.org/problem/P1903">P1903 [国家集训队]数颜色 / 维护队列</a></li><li><a href="https://www.luogu.org/problem/P3759">P3759 [TJOI2017]不勤劳的图书管理员</a></li><li><a href="https://www.luogu.org/problem/P3242">P3242 [HNOI2015]接水果</a></li><li><a href="https://www.luogu.org/problem/P3248">P3248 [HNOI2016]树</a></li><li><a href="https://www.luogu.org/problem/P5445">P5445 [APIO2019]路灯</a></li><li><a href="https://www.luogu.org/problem/P5471">P5471 [NOI2019]弹跳</a></li></ul><h3 id="Part-7-15-动态树"><a href="#Part-7-15-动态树" class="headerlink" title="Part 7.15 动态树"></a>Part 7.15 动态树</h3><blockquote><p>Link-Cut Tree 可以用来解决动态树一类问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3690">P3690 【模板】Link Cut Tree （动态树）</a></li><li><a href="https://www.luogu.org/problem/P3203">P3203 [HNOI2010]弹飞绵羊</a></li><li><a href="https://www.luogu.org/problem/P4338">P4338 [ZJOI2018]历史</a></li><li><a href="https://www.luogu.org/problem/P4312">P4312 [COCI2009]OTOCI</a></li><li><a href="https://www.luogu.org/problem/P1501">P1501 [国家集训队]Tree II</a></li><li><a href="https://www.luogu.org/problem/P2387">P2387 [NOI2014]魔法森林</a></li><li><a href="https://www.luogu.org/problem/P3348">P3348 [ZJOI2016]大森林</a></li><li><a href="https://www.luogu.org/problem/P3703">P3703 [SDOI2017]树点涂色</a></li><li><a href="https://www.luogu.org/problem/P4172">P4172 [WC2006]水管局长</a></li><li><a href="https://www.luogu.org/problem/P4219">P4219 [BJOI2014]大融合</a></li><li><a href="https://www.luogu.org/problemnew/solution/P5489">P5489 EntropyIncreaser 与 动态图</a></li></ul><h3 id="Part-7-16-可持久化数据结构"><a href="#Part-7-16-可持久化数据结构" class="headerlink" title="Part 7.16 可持久化数据结构"></a>Part 7.16 可持久化数据结构</h3><blockquote><p>可持久化数据结构实现了在更新信息的时候保留历史版本。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3919">P3919 【模板】可持久化数组（可持久化线段树/平衡树）</a></li><li><a href="https://www.luogu.org/problem/P3834">P3834 【模板】可持久化线段树 1（主席树）</a></li><li><a href="https://www.luogu.org/problem/P3402">P3402 【模板】可持久化并查集</a></li><li><a href="https://www.luogu.org/problem/P3835">P3835 【模板】可持久化平衡树</a></li><li><a href="https://www.luogu.org/problem/P5055">P5055 【模板】可持久化文艺平衡树</a></li><li><a href="https://www.luogu.org/problem/P5283">P5283 [十二省联考2019]异或粽子</a></li></ul><h3 id="Part-7-17-K-D-Tree"><a href="#Part-7-17-K-D-Tree" class="headerlink" title="Part 7.17 K-D Tree"></a>Part 7.17 K-D Tree</h3><blockquote><p>K-D Tree 是一种高效处理 $ k $ 维信息的数据结构。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4357">P4357 [CQOI2016]K远点对</a></li><li><a href="https://www.luogu.org/problem/P4148">P4148 简单题</a></li><li><a href="https://www.luogu.org/problem/P2479">P2479 [SDOI2010]捉迷藏</a></li><li><a href="https://www.luogu.org/problem/P3769">P3769 [CH弱省胡策R2]TATT</a></li><li><a href="https://www.luogu.org/problem/P4169">P4169 [Violet]天使玩偶/SJY摆棋子</a></li><li><a href="https://www.luogu.org/problem/P4390">P4390 [BOI2007]Mokia</a></li><li><a href="https://www.luogu.org/problem/P4475">P4475 巧克力王国</a></li><li><a href="https://www.luogu.org/problem/P2093">P2093 [国家集训队]JZPFAR</a></li></ul><h3 id="Part-7-18-珂朵莉树"><a href="#Part-7-18-珂朵莉树" class="headerlink" title="Part 7.18 珂朵莉树"></a>Part 7.18 珂朵莉树</h3><blockquote><p>珂朵莉树，是一种基于 <code>std::set</code> 的暴力数据结构，在数据随机的情况下表现优秀。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P5251">P5251 [LnOI2019]第二代图灵机</a></li><li><a href="https://www.luogu.org/problem/P5350">P5350 序列</a></li></ul><h2 id="Part-8-图论"><a href="#Part-8-图论" class="headerlink" title="Part 8 图论"></a>Part 8 图论</h2><blockquote><p>图论是数学的一个分支，它以图为研究的对象。</p></blockquote><h3 id="Part-8-1-图的存储与遍历"><a href="#Part-8-1-图的存储与遍历" class="headerlink" title="Part 8.1 图的存储与遍历"></a>Part 8.1 图的存储与遍历</h3><blockquote><p>这里的图论内容都比较简单，涉及图的存储以及遍历图的方式。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2661">P2661 信息传递</a></li><li><a href="https://www.luogu.org/problem/P2921">P2921 [USACO08DEC]Trick or Treat on the Farm</a></li></ul><h3 id="Part-8-2-最短路问题"><a href="#Part-8-2-最短路问题" class="headerlink" title="Part 8.2 最短路问题"></a>Part 8.2 最短路问题</h3><blockquote><p>很多题目都可以转化为最短路的模型。因此，掌握最短路算法非常重要。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3371">P3371 【模板】单源最短路径（弱化版）</a></li><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P4779">P4779 【模板】单源最短路径（标准版）</a></li><li><a href="https://www.luogu.org/problem/P1144">P1144 最短路计数</a></li><li><a href="https://www.luogu.org/problem/P5001">P5001 魔法祝福</a></li><li><a href="https://www.luogu.org/problem/P1462">P1462 通往奥格瑞玛的道路</a></li><li><a href="https://www.luogu.org/problem/P1522">P1522 牛的旅行 Cow Tours</a></li><li><a href="https://www.luogu.org/problem/P1266">P1266 速度限制</a></li><li><a href="https://www.luogu.org/problem/P4568">P4568 [JLOI2011]飞行路线</a></li><li><a href="https://www.luogu.org/problem/P3238">P3238 [HNOI2014]道路堵塞</a></li><li><a href="https://www.luogu.org/problem/P5304">P5304 [GXOI/GZOI2019]旅行者</a></li></ul><h3 id="Part-8-3-树上问题"><a href="#Part-8-3-树上问题" class="headerlink" title="Part 8.3 树上问题"></a>Part 8.3 树上问题</h3><blockquote><p>作为一种特殊的图，树上的问题具有很多鲜明的特点。</p></blockquote><h4 id="Part-8-3-1-二叉树"><a href="#Part-8-3-1-二叉树" class="headerlink" title="Part 8.3.1 二叉树"></a>Part 8.3.1 二叉树</h4><blockquote><p>二叉树是一种特殊的树，它有很多特殊的性质。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1087">P1087 FBI树</a></li><li><a href="https://www.luogu.org/problem/P1030">P1030 求先序排列</a></li><li><a href="https://www.luogu.org/problem/P1305">P1305 新二叉树</a></li><li><a href="https://www.luogu.org/problem/P1229">P1229 遍历问题</a></li><li><a href="https://www.luogu.org/problem/P5018">P5018 对称二叉树</a></li><li><a href="https://www.luogu.org/problem/P5597">P5597 【XR-4】复读</a></li></ul><h4 id="Part-8-3-2-树的直径"><a href="#Part-8-3-2-树的直径" class="headerlink" title="Part 8.3.2 树的直径"></a>Part 8.3.2 树的直径</h4><blockquote><p>树的直径被定义为树上最远的两点间的距离。</p><p>计算树的直径，可以通过两遍 DFS 解决。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2195">P2195 HXY造公园</a></li><li><a href="https://www.luogu.org/problem/P3629">P3629 [APIO2010]巡逻</a></li><li><a href="https://www.luogu.org/problem/P5536">P5536 【XR-3】核心城市</a></li><li><a href="https://www.luogu.org/problem/P1099">P1099 树网的核</a></li><li><a href="https://www.luogu.org/problem/P4408">P4408 [NOI2003]逃学的小孩</a></li></ul><h4 id="Part-8-3-3-最近公共祖先"><a href="#Part-8-3-3-最近公共祖先" class="headerlink" title="Part 8.3.3 最近公共祖先"></a>Part 8.3.3 最近公共祖先</h4><blockquote><p>两个点的最近公共祖先，即两个点的所有公共祖先中，离根节点最远的一个节点。</p><p>求解最近公共祖先，常用的方法是树上倍增或者树链剖分。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3379">P3379 【模板】最近公共祖先（LCA）</a></li><li><a href="https://www.luogu.org/problem/P3938">P3938 斐波那契</a></li><li><a href="https://www.luogu.org/problem/P4281">P4281 [AHOI2008]紧急集合 / 聚会</a></li></ul><h3 id="Part-8-4-生成树"><a href="#Part-8-4-生成树" class="headerlink" title="Part 8.4 生成树"></a>Part 8.4 生成树</h3><blockquote><p>用 $ n-1 $ 条边将图上的 $ n $ 个点连接起来，形成的树就被称为生成树。</p></blockquote><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://www.luogu.org/problem/P3366">P3366 【模板】最小生成树</a></li><li><a href="https://www.luogu.org/problem/P4180">P4180 【模板】严格次小生成树[BJWC2010]</a></li><li><a href="https://www.luogu.org/problem/P2872">P2872 [USACO07DEC]Building Roads</a></li><li><a href="https://www.luogu.org/problem/P1991">P1991 无线通讯网</a></li><li><a href="https://www.luogu.org/problem/P1967">P1967 货车运输</a></li><li><a href="https://www.luogu.org/problem/P4047">P4047 [JSOI2010]部落划分</a></li></ul><h3 id="Part-8-5-拓扑排序"><a href="#Part-8-5-拓扑排序" class="headerlink" title="Part 8.5 拓扑排序"></a>Part 8.5 拓扑排序</h3><blockquote><p>将一个有向无环图排序，使得所有排在前面的节点不能依赖于排在后面的节点，这就是拓扑排序。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1113">P1113 杂务</a></li><li><a href="https://www.luogu.org/problem/P1983">P1983 车站分级</a></li><li><a href="https://www.luogu.org/problem/P1038">P1038 神经网络</a></li></ul><h3 id="Part-8-6-差分约束"><a href="#Part-8-6-差分约束" class="headerlink" title="Part 8.6 差分约束"></a>Part 8.6 差分约束</h3><blockquote><p>差分约束要解决的问题是：求出一组 $ n $ 元不等式的一组解，使得所有约束关系都能得到满足。 </p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3275">P3275 [SCOI2011]糖果</a></li><li><a href="https://www.luogu.org/problem/P2294">P2294 [HNOI2005]狡猾的商人</a></li><li><a href="https://www.luogu.org/problem/P4926">P4926 [1007]倍杀测量者</a></li><li><a href="https://www.luogu.org/problem/P5590">P5590 赛车游戏</a></li></ul><h3 id="Part-8-7-图的连通性相关"><a href="#Part-8-7-图的连通性相关" class="headerlink" title="Part 8.7 图的连通性相关"></a>Part 8.7 图的连通性相关</h3><blockquote><p>利用 Tarjan 算法，我们可以解决很多与图的连通性相关的问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3387">P3387 【模板】缩点</a></li><li><a href="https://www.luogu.org/problem/P3388">P3388 【模板】割点（割顶）</a></li><li><a href="https://www.luogu.org/problem/P2863">P2863 [USACO06JAN]The Cow Prom</a></li><li><a href="https://www.luogu.org/problem/P2746">P2746 [USACO5.3]Network of Schools</a></li><li><a href="https://www.luogu.org/problem/P1407">P1407 [国家集训队]稳定婚姻</a></li><li><a href="https://www.luogu.org/problem/P2272">P2272 [ZJOI2007]最大半连通子图</a></li><li><a href="https://www.luogu.org/problem/P2341">P2341 [HAOI2006]受欢迎的牛</a></li><li><a href="https://www.luogu.org/problem/P3225">P3225 [HNOI2012]矿场搭建</a></li><li><a href="https://www.luogu.org/problem/P4819">P4819 [中山市选]杀人游戏</a></li><li><a href="https://www.luogu.org/problem/P5058">P5058 [ZJOI2004]嗅探器</a></li><li><a href="https://www.luogu.org/problem/P2515">P2515 [HAOI2010]软件安装</a></li></ul><h3 id="Part-8-8-二分图"><a href="#Part-8-8-二分图" class="headerlink" title="Part 8.8 二分图"></a>Part 8.8 二分图</h3><blockquote><p>二分图上的不少问题都可以转化成网络流解决，当然也有独特的其他方法。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3386">P3386 【模板】二分图匹配</a></li><li><a href="https://www.luogu.org/problem/P2756">P2756 飞行员配对方案问题</a></li><li><a href="https://www.luogu.org/problem/P1129">P1129 [ZJOI2007]矩阵游戏</a></li><li><a href="https://www.luogu.org/problem/P1559">P1559 运动员最佳匹配问题</a></li><li><a href="https://www.luogu.org/problem/P2423">P2423 [HEOI2012]朋友圈</a></li><li><a href="https://www.luogu.org/problem/P2764">P2764 最小路径覆盖问题</a></li><li><a href="https://www.luogu.org/problem/P2825">P2825 [HEOI2016/TJOI2016]游戏</a></li><li><a href="https://www.luogu.org/problem/P3033">P3033 [USACO11NOV]Cow Steeplechase</a></li><li><a href="https://www.luogu.org/problem/P3731">P3731 [HAOI2017]新型城市化</a></li><li><a href="https://www.luogu.org/problem/P4014">P4014 分配问题</a></li></ul><h3 id="Part-8-9-网络流"><a href="#Part-8-9-网络流" class="headerlink" title="Part 8.9 网络流"></a>Part 8.9 网络流</h3><blockquote><p>网络流是图论中一个重要的分支，很多题目都可以通过建立网络流的模型来解决。</p></blockquote><h4 id="Part-8-9-1-最大流"><a href="#Part-8-9-1-最大流" class="headerlink" title="Part 8.9.1 最大流"></a>Part 8.9.1 最大流</h4><blockquote><p>最大流，即求网络中最大的流量。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3376">P3376 【模板】网络最大流</a></li><li><a href="https://www.luogu.org/problem/P4722">P4722 【模板】最大流 加强版 / 预流推进</a></li><li><a href="https://www.luogu.org/problem/P2065">P2065 [TJOI2011]卡片</a></li><li><a href="https://www.luogu.org/problem/P2763">P2763 试题库问题</a></li><li><a href="https://www.luogu.org/problem/P2472">P2472 [SCOI2007]蜥蜴</a></li><li><a href="https://www.luogu.org/problem/P2754">P2754 [CTSC1999]家园</a></li><li><a href="https://www.luogu.org/problem/P2765">P2765 魔术球问题</a></li><li><a href="https://www.luogu.org/problem/P2766">P2766 最长不下降子序列问题</a></li><li><a href="https://www.luogu.org/problem/P2805">P2805 [NOI2009]植物大战僵尸</a></li><li><a href="https://www.luogu.org/problem/P3749">P3749 [六省联考2017]寿司餐厅</a></li></ul><h4 id="Part-8-9-2-最小割"><a href="#Part-8-9-2-最小割" class="headerlink" title="Part 8.9.2 最小割"></a>Part 8.9.2 最小割</h4><blockquote><p>最小割，即求一个边权最小的边集，使得源点和汇点不再连通。</p><p>可以证明，<strong>最大流=最小割</strong>。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1345">P1345 [USACO5.4]Telecowmunication</a></li><li><a href="https://www.luogu.org/problem/P2057">P2057 [SHOI2007]善意的投票</a></li><li><a href="https://www.luogu.org/problem/P2598">P2598 [ZJOI2009]狼和羊的故事</a></li><li><a href="https://www.luogu.org/problem/P2774">P2774 方格取数问题</a></li><li><a href="https://www.luogu.org/problem/P4126">P4126 [AHOI2009]最小割</a></li><li><a href="https://www.luogu.org/problem/P5039">P5039 [SHOI2010]最小生成树</a></li></ul><h4 id="Part-8-9-3-费用流"><a href="#Part-8-9-3-费用流" class="headerlink" title="Part 8.9.3 费用流"></a>Part 8.9.3 费用流</h4><blockquote><p>在网络流中给边加上一个参数——费用，就出现了费用流。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3381">P3381 【模板】最小费用最大流</a></li><li><a href="https://www.luogu.org/problem/P4016">P4016 负载平衡问题</a></li><li><a href="https://www.luogu.org/problem/P4452">P4452 [国家集训队]航班安排</a></li><li><a href="https://www.luogu.org/problem/P2045">P2045 方格取数加强版</a></li><li><a href="https://www.luogu.org/problem/P2050">P2050 [NOI2012]美食节</a></li><li><a href="https://www.luogu.org/problem/P2053">P2053 [SCOI2007]修车</a></li><li><a href="https://www.luogu.org/problem/P2153">P2153 [SDOI2009]晨跑</a></li><li><a href="https://www.luogu.org/problem/P2604">P2604 [ZJOI2010]网络扩容</a></li><li><a href="https://www.luogu.org/problem/P2770">P2770 航空路线问题</a></li><li><a href="https://www.luogu.org/problem/P3159">P3159 [CQOI2012]交换棋子</a></li><li><a href="https://www.luogu.org/problem/P3356">P3356 火星探险问题</a></li><li><a href="https://www.luogu.org/problem/P3358">P3358 最长k可重区间集问题</a></li><li><a href="https://www.luogu.org/problem/P4013">P4013 数字梯形问题</a></li><li><a href="https://www.luogu.org/problem/P4015">P4015 运输问题</a></li><li><a href="https://www.luogu.org/problem/P4249">P4249 [WC2007]剪刀石头布</a></li><li><a href="https://www.luogu.org/problem/P5331">P5331 [SNOI2019]通信</a></li></ul><h4 id="Part-8-9-4-上下界网络流"><a href="#Part-8-9-4-上下界网络流" class="headerlink" title="Part 8.9.4 上下界网络流"></a>Part 8.9.4 上下界网络流</h4><blockquote><p>在网络流问题中给每条边的流量增加一个下界，就有了上下界网络流。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3980">P3980 [NOI2008]志愿者招募</a></li><li><a href="https://www.luogu.org/problem/P4043">P4043 [AHOI2014/JSOI2014]支线剧情</a></li><li><a href="https://www.luogu.org/problem/P4553">P4553 80人环游世界</a></li><li><a href="https://www.luogu.org/problem/P4843">P4843 清理雪道</a></li></ul><h3 id="Part-8-10-2-SAT"><a href="#Part-8-10-2-SAT" class="headerlink" title="Part 8.10 2-SAT"></a>Part 8.10 2-SAT</h3><blockquote><p>k-SAT 问题的目标是对一些布尔变量赋值，满足限定的条件。</p><p>在 k-SAT 问题中，2-SAT 问题属于较为容易解决的一类。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4782">P4782 【模板】2-SAT 问题</a></li><li><a href="https://www.luogu.org/problem/P4171">P4171 [JSOI2010]满汉全席</a></li><li><a href="https://www.luogu.org/problem/P3825">P3825 [NOI2017]游戏</a></li><li><a href="https://www.luogu.org/problem/P5332">P5332 [JSOI2019]精准预测</a></li></ul><h3 id="Part-8-11-点分治"><a href="#Part-8-11-点分治" class="headerlink" title="Part 8.11 点分治"></a>Part 8.11 点分治</h3><blockquote><p>点分治是一种可以高效统计树上路径信息的算法。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3806">P3806 【模板】点分治1</a></li><li><a href="https://www.luogu.org/problem/P2634">P2634 [国家集训队]聪聪可可</a></li><li><a href="https://www.luogu.org/problem/P2664">P2664 树上游戏</a></li><li><a href="https://www.luogu.org/problem/P3714">P3714 [BJOI2017]树的难题</a></li><li><a href="https://www.luogu.org/problem/P4149">P4149 [IOI2011]Race</a></li><li><a href="https://www.luogu.org/problem/P3241">P3241 [HNOI2015]开店</a></li><li><a href="https://www.luogu.org/problem/P4075">P4075 [SDOI2016]模式字符串</a></li><li><a href="https://www.luogu.org/problem/P4183">P4183 [USACO18JAN]Cow at Large P</a></li><li><a href="https://www.luogu.org/problem/P4292">P4292 [WC2010]重建计划</a></li><li><a href="https://www.luogu.org/problem/P5306">P5306 [COCI2019]Transport</a></li></ul><h3 id="Part-8-12-虚树"><a href="#Part-8-12-虚树" class="headerlink" title="Part 8.12 虚树"></a>Part 8.12 虚树</h3><blockquote><p>将一些无用的点从树上删去，从而达到降低树的规模的效果。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2495">P2495 [SDOI2011]消耗战</a></li><li><a href="https://www.luogu.org/problem/P3233">P3233 [HNOI2014]世界树</a></li><li><a href="https://www.luogu.org/problem/P5360">P5360 [SDOI2019]世界地图</a></li><li><a href="https://www.luogu.org/problem/P5439">P5439 【XR-2】永恒</a></li></ul><h3 id="Part-8-13-矩阵树定理"><a href="#Part-8-13-矩阵树定理" class="headerlink" title="Part 8.13 矩阵树定理"></a>Part 8.13 矩阵树定理</h3><blockquote><p>矩阵树定理可以解决图的生成树计数问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4111">P4111 [HEOI2015]小Z的房间</a></li><li><a href="https://www.luogu.org/problem/P2144">P2144 [FJOI2007]轮状病毒</a></li><li><a href="https://www.luogu.org/problem/P3317">P3317 [SDOI2014]重建</a></li><li><a href="https://www.luogu.org/problem/P4208">P4208 [JSOI2008]最小生成树计数</a></li></ul><h2 id="Part-9-计算几何"><a href="#Part-9-计算几何" class="headerlink" title="Part 9 计算几何"></a>Part 9 计算几何</h2><blockquote><p>试着用计算机来解决几何问题吧！</p></blockquote><h3 id="Part-9-1-凸包"><a href="#Part-9-1-凸包" class="headerlink" title="Part 9.1 凸包"></a>Part 9.1 凸包</h3><blockquote><p>凸包指在平面上能包含所有给定点的最小凸多边形。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P2742">P2742 【模板】二维凸包</a></li><li><a href="https://www.luogu.org/problem/P2287">P2287 [HNOI2004]最佳包裹</a></li><li><a href="https://www.luogu.org/problem/P3829">P3829 [SHOI2012]信用卡凸包</a></li><li><a href="https://www.luogu.org/problem/P4680">P4680 [Ynoi2018]末日时在做什么?有没有空?可以来拯救吗?</a></li><li><a href="https://www.luogu.org/problem/P4557">P4557 [JSOI2018]战争</a></li><li><a href="https://www.luogu.org/problem/P5403">P5403 [CTS2019]田野</a></li></ul><h3 id="Part-9-2-旋转卡壳"><a href="#Part-9-2-旋转卡壳" class="headerlink" title="Part 9.2 旋转卡壳"></a>Part 9.2 旋转卡壳</h3><blockquote><p>旋转卡壳是一种求出凸包所有对踵点对的算法。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1452">P1452 Beauty Contest</a></li><li><a href="https://www.luogu.org/problem/P3187">P3187 [HNOI2007]最小矩形覆盖</a></li></ul><h3 id="Part-9-3-半平面交"><a href="#Part-9-3-半平面交" class="headerlink" title="Part 9.3 半平面交"></a>Part 9.3 半平面交</h3><blockquote><p>多个半平面的交集称之为半平面交。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3256">P3256 [JLOI2013]赛车</a></li><li><a href="https://www.luogu.org/problem/P2600">P2600 [ZJOI2008]瞭望塔</a></li><li><a href="https://www.luogu.org/problem/P4196">P4196 [CQOI2006]凸多边形</a></li><li><a href="https://www.luogu.org/problem/P3297">P3297 [SDOI2013]逃考</a></li><li><a href="https://www.luogu.org/problem/P4250">P4250 [SCOI2015]小凸想跑步</a></li><li><a href="https://www.luogu.org/problem/P5328">P5328 [ZJOI2019]浙江省选</a></li></ul><h2 id="Part-10-杂项"><a href="#Part-10-杂项" class="headerlink" title="Part 10 杂项"></a>Part 10 杂项</h2><blockquote><p>这里的专题，有很多都难以纳入前面的类别中，故将他们单独列入了杂项。</p></blockquote><h3 id="Part-10-1-模拟退火"><a href="#Part-10-1-模拟退火" class="headerlink" title="Part 10.1 模拟退火"></a>Part 10.1 模拟退火</h3><blockquote><p>模拟退火是一种随机化算法。当一个问题的方案数量极大（甚至是无穷的）而且不是一个单峰函数时，我们常使用模拟退火求解。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1337">P1337 [JSOI2004]平衡点 / 吊打XXX</a></li><li><a href="https://www.luogu.org/problem/P2503">P2503 [HAOI2006]均分数据</a></li><li><a href="https://www.luogu.org/problem/P3878">P3878 [TJOI2010]分金币</a></li></ul><h3 id="Part-10-2-0-1-分数规划"><a href="#Part-10-2-0-1-分数规划" class="headerlink" title="Part 10.2 0/1 分数规划"></a>Part 10.2 0/1 分数规划</h3><blockquote><p>0/1 分数规划用来求一个分式的极值。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4377">P4377 [USACO18OPEN]Talent Show</a></li><li><a href="https://www.luogu.org/problem/P3199">P3199 [HNOI2009]最小圈</a></li><li><a href="https://www.luogu.org/problem/P3288">P3288 [SCOI2014]方伯伯运椰子</a></li><li><a href="https://www.luogu.org/problem/P3705">P3705 [SDOI2017]新生舞会</a></li><li><a href="https://www.luogu.org/problem/P4322">P4322 [JSOI2016]最佳团体</a></li></ul><h3 id="Part-10-3-离线算法"><a href="#Part-10-3-离线算法" class="headerlink" title="Part 10.3 离线算法"></a>Part 10.3 离线算法</h3><blockquote><p>当题目不要求强制在线时，我们可以一次性读入所有询问来处理。</p></blockquote><h4 id="Part-10-3-1-CDQ-分治"><a href="#Part-10-3-1-CDQ-分治" class="headerlink" title="Part 10.3.1 CDQ 分治"></a>Part 10.3.1 CDQ 分治</h4><blockquote><p>CDQ 分治是一个基于分治思想的离线算法。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P3810">P3810 【模板】三维偏序（陌上花开）</a></li><li><a href="https://www.luogu.org/problem/P3157">P3157 [CQOI2011]动态逆序对</a></li><li><a href="https://www.luogu.org/problem/P2487">P2487 [SDOI2011]拦截导弹</a></li><li><a href="https://www.luogu.org/problem/P4690">P4690 [Ynoi2016]镜中的昆虫</a></li><li><a href="https://www.luogu.org/problem/P3206">P3206 [HNOI2010]城市建设</a></li></ul><h4 id="Part-10-3-2-整体二分"><a href="#Part-10-3-2-整体二分" class="headerlink" title="Part 10.3.2 整体二分"></a>Part 10.3.2 整体二分</h4><blockquote><p>整体二分，顾名思义就是把多个查询一起二分解决。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1527">P1527 [国家集训队]矩阵乘法</a></li><li><a href="https://www.luogu.org/problem/P2617">P2617 Dynamic Rankings</a></li><li><a href="https://www.luogu.org/problem/P3527">P3527 [POI2011]MET-Meteors</a></li></ul><h4 id="Part-10-3-3-莫队"><a href="#Part-10-3-3-莫队" class="headerlink" title="Part 10.3.3 莫队"></a>Part 10.3.3 莫队</h4><blockquote><p>莫队算法可以解决不少离线区间询问问题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4887">P4887 【模板】莫队二次离线（第十四分块(前体)）</a></li><li><a href="https://www.luogu.org/problem/P1494">P1494 [国家集训队]小Z的袜子</a></li><li><a href="https://www.luogu.org/problem/P1903">P1903 [国家集训队]数颜色 / 维护队列</a></li><li><a href="https://www.luogu.org/problem/P2709">P2709 小B的询问</a></li><li><a href="https://www.luogu.org/problem/P3674">P3674 小清新人渣的本愿</a></li><li><a href="https://www.luogu.org/problem/P3709">P3709 大爷的字符串题</a></li><li><a href="https://www.luogu.org/problem/P4074">P4074 [WC2013]糖果公园</a></li><li><a href="https://www.luogu.org/problem/P5501">P5501 [LnOI2019]来者不拒，去者不追</a></li></ul><h3 id="Part-10-4-奇怪的题目"><a href="#Part-10-4-奇怪的题目" class="headerlink" title="Part 10.4 奇怪的题目"></a>Part 10.4 奇怪的题目</h3><blockquote><p>OI 界中有一些非常规套路的题目，这里放出来分享。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P4920">P4920 [WC2015]未来程序</a></li><li><a href="https://www.luogu.org/problem/P5042">P5042 [国家集训队]丢失的题面（ydc的题面）</a></li><li><a href="https://www.luogu.org/problem/P5285">P5285 [十二省联考2019]骗分过样例</a></li><li><a href="https://www.luogu.org/problem/P5246">P5246 [集训队互测2016]消失的源代码</a></li></ul><h3 id="Part-10-5-非传统题"><a href="#Part-10-5-非传统题" class="headerlink" title="Part 10.5 非传统题"></a>Part 10.5 非传统题</h3><blockquote><p>在 NOI 等比赛中，非传统题正越来越频繁出现。</p><p>非传统题主要包括以下几类：提交答案题，交互题，通信题。</p></blockquote><h4 id="Part-10-5-1-提交答案题"><a href="#Part-10-5-1-提交答案题" class="headerlink" title="Part 10.5.1 提交答案题"></a>Part 10.5.1 提交答案题</h4><blockquote><p>给你一些输入，你只需要提交这些输入对应的答案，即为提交答案题。</p></blockquote><ul><li><a href="https://www.luogu.org/problem/P1335">P1335 [NOI2013]小Q的修炼</a></li><li><a href="https://www.luogu.org/problem/P1737">P1737 [NOI2016]旷野大计算</a></li><li><a href="https://www.luogu.org/problem/P3614">P3614 yyy棋 II</a></li><li><a href="https://www.luogu.org/problem/P3640">P3640 [APIO2013]出题人</a></li><li><a href="https://www.luogu.org/problem/P3782">P3782 [WC2017]排序</a></li><li><a href="https://www.luogu.org/problem/P3836">P3836 Nowruz</a></li><li><a href="https://www.luogu.org/problem/P4920">P4920 [WC2015]未来程序</a></li><li><a href="https://www.luogu.org/problem/P5402">P5402 [CTS2019]无处安放</a></li><li><a href="https://www.luogu.org/problem/P5418">P5418 [CTSC2016]NOIP十合一</a></li><li><a href="https://www.luogu.org/problem/P5600">P5600 【XR-4】尺规作图</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 训练 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSP-S 2019 训练略记</title>
      <link href="/2019/10/26/2019-xun-lian-lue-ji/"/>
      <url>/2019/10/26/2019-xun-lian-lue-ji/</url>
      
        <content type="html"><![CDATA[<h3 id="Day-20"><a href="#Day-20" class="headerlink" title="Day -20"></a>Day -20</h3><p>集中训练第一天。</p><p>终于还是停了周考，卸下了一部分包袱。</p><p>上午打了Luogu TG Autumn -2（其实是敲了几道暴力</p><p><del>orz zyy &amp; yxy</del></p><p>下午复习树状数组，卡死在逆序对问题QAQ</p><p>晚上Codeforces Round #596 (Div. 2)，感觉码力终于有所回升<del>（菜</del></p><h3 id="Day-19"><a href="#Day-19" class="headerlink" title="Day -19"></a>Day -19</h3><p><del>咕咕咕的lhw</del></p><p>今天Luogu LGR-062 div 2月赛，202分去世</p><p>第一题正解暴力，强行搞了字符串哈希</p><p>第二题暴力+贪心</p><h3 id="Day-18"><a href="#Day-18" class="headerlink" title="Day -18"></a>Day -18</h3><p>今晚统一集训延迟</p><p>决定复习数学部分，刷了素数和最大公约数的题</p><h3 id="Day-17"><a href="#Day-17" class="headerlink" title="Day -17"></a>Day -17</h3><p>训练前得知wch与fjc会回来出题讲评，开心qwq</p><p>晚上两道题，切了一晚上T2<del>（被题切</del></p><p>考虑了LCA，点分治与数学，终于在集训结束前切了出来</p><ul><li><input disabled="" type="checkbox"> flag: 要加强码力</li></ul><h3 id="Day-16"><a href="#Day-16" class="headerlink" title="Day -16"></a>Day -16</h3><p>听取bilibili讲评qwq</p><p><del>fjc最强！</del></p><h3 id="Day-15"><a href="#Day-15" class="headerlink" title="Day -15"></a>Day -15</h3><p>第二轮训练qaq</p><p>第一题模拟，第二题DP</p><p>第三题…（数据结构？</p><p>自闭ing…</p><h3 id="Day-14-Day-11"><a href="#Day-14-Day-11" class="headerlink" title="Day -14 ~ Day -11"></a>Day -14 ~ Day -11</h3><p>照常训练</p><p>（感动于doorwen的奉献与fjc &amp; wch的耐心讲解qwq</p><h3 id="Day-11"><a href="#Day-11" class="headerlink" title="Day -11"></a>Day -11</h3><p>制定10天冲刺计划<del>（其实就是复习了</del></p><h3 id="Day-10"><a href="#Day-10" class="headerlink" title="Day -10"></a>Day -10</h3><p>复习线段树与树状数组</p><h3 id="Day-9"><a href="#Day-9" class="headerlink" title="Day -9"></a>Day -9</h3><p>复习<del>冰茶姬</del>并查集</p><h3 id="Day-6"><a href="#Day-6" class="headerlink" title="Day -6"></a>Day -6</h3><p>晚上来打Luogu月赛</p><p>第三题不会自闭</p><p>第四题搞了$O(n^2 \log n)$的数据结构优化的大暴力</p><p>（然而8分滚粗qaq</p><h3 id="Day-5"><a href="#Day-5" class="headerlink" title="Day -5"></a>Day -5</h3><p>翘了今天的课（</p><p>上午Luogu TG -5两道题全部调炸了QAQ</p><p>下午<del>虚心学习</del>复习主席树qwq</p><p><del>orz fjc AK ICPC</del></p><h3 id="Day-4"><a href="#Day-4" class="headerlink" title="Day -4"></a>Day -4</h3><p>最后一天上文化课（欢呼</p><p>晚上开始补扫描线</p><h3 id="Day-3-期中考试-Day-1"><a href="#Day-3-期中考试-Day-1" class="headerlink" title="Day -3 &amp; 期中考试 Day 1"></a>Day -3 &amp; 期中考试 Day 1</h3><p><del>不考期中考试真好（逃</del></p><p>复习扫描线&amp;珂朵莉树（？</p><h3 id="Day-2"><a href="#Day-2" class="headerlink" title="Day -2"></a>Day -2</h3><p>越复习越感觉不会的东西好多qaq…</p><p>今天学习了KMP和CDQ分治</p>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 训练 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>肥城一中FOI 2019级宣传</title>
      <link href="/2019/09/20/2019-ji-oi-xuan-chuan/"/>
      <url>/2019/09/20/2019-ji-oi-xuan-chuan/</url>
      
        <content type="html"><![CDATA[<h3 id="OI是什么？"><a href="#OI是什么？" class="headerlink" title="OI是什么？"></a>OI是什么？</h3><p><strong>信息学奥林匹克竞赛(OI,Olympiad in Informatics)。</strong></p><p>与大家熟知的数学、物理、化学、生物竞赛合称为高中五大学科竞赛。</p><p><strong>肥城一中FOI为学校官方组织，也是唯一的官方社团，又名信息学奥赛小组。</strong></p><h3 id="OI学什么？"><a href="#OI学什么？" class="headerlink" title="OI学什么？"></a>OI学什么？</h3><p>通俗来说，OI主要考查C++语言编程以及算法和数据结构。</p><p><strong>OI不涉及电子竞技、网络安全以及软硬件开发。</strong></p><p>在义务教育阶段任何一所学校都<strong>不会</strong>涉及到有关OI的知识。</p><p>正因为如此，无论是计算机小白，还是理科大佬，都可以成为一名OIer，<strong>从零起步</strong>学习OI。</p><h3 id="OI竞赛有哪些活动？"><a href="#OI竞赛有哪些活动？" class="headerlink" title="OI竞赛有哪些活动？"></a>OI竞赛有哪些活动？</h3><ul><li><p><del>全国青少年信息学奥林匹克联赛(NOIP, National Olympiad in Informatics in Provinces)，即省级联赛，分为10月举办的初赛和11月举办的复赛。</del></p><ul><li>已替代为非专业级软件能力认证(CSP, Certified Software Professional)，分为10月举办的第一轮和11月举办的第二轮。</li></ul></li><li><p>全国青少年信息学奥林匹克冬令营(NOIWC, National Olympiad in Informatics Winter Camp)，一般于次年2月举办。</p></li><li><p>亚洲与太平洋地区信息学奥赛(APIO, Asia Pacific Informatics Olympiad)，5月举办。</p></li><li><p>IOI中国代表队选拔赛(CTS<del>C</del>, China Team Selection <del>Competition</del>)，5月举办。</p></li><li><p>全国青少年信息学奥林匹克竞赛(NOI, National Olympiad in Informatics)，即全国决赛，一般于7月举办。</p></li><li><p>国际信息学奥林匹克(IOI)，中国是世界公认的信息学奥林匹克竞赛大国，在IOI中奖牌数及金牌数位居世界第一。</p></li></ul><p><img src="https://studyingfather.com/wp-content/uploads/2019/08/leader.png"></p><p>更多详情可以参看<a href="www.noi.cn">NOI官网的有关介绍</a>。</p><h3 id="学OI的好处？"><a href="#学OI的好处？" class="headerlink" title="学OI的好处？"></a>学OI的好处？</h3><p>很多高中老师认为OI是边缘竞赛，<strong>唯一原因只是它不是高考科目而已。</strong></p><p>引自知乎-Yan Gu 在 “信息学竞赛算是边缘竞赛吗？”下的回答：</p><blockquote><p>作为高中生，尤其是优秀高中生，一定要认识到高中老师视野的狭隘性和局限性，尽量不要被他们所迷惑。</p><p>这是唯一一门既能锻炼智商又切实有用的竞赛。当然前提是你将来是IT从业者，但是从现在（美国）的发展趋势来看，今后二十年IT业都将是人类进步的主要输出力量之一和最大的劳动力需求市场，所以如果你真的喜欢的话，IT业是一定不会亏欠你的。</p></blockquote><p>OI在自主招生中，一直被各大高校重视，依据省级联赛奖、全国决赛奖，各高校可以给予降低10-60分录取分数线的优惠，最多可以降至一本线录取。</p><p>在NOI现场就会有数个国内排名前二十的高校签约获奖选手。</p><p>另外在每年5月举办的清华大学、北京大学信息学体验营中如果取得优异的成绩，也可以拿到不同的优惠政策。</p><p>很多老师家长因为不了解算法竞赛，以为就是“玩电脑”，浪费时间，影响课内学习。实际上如果训练计划科学，那么不需要担心这个问题。相反，<strong>学习编程以及算法可以训练数学能力（尤其是逻辑数学思维能力）。</strong></p><p>算法竞赛主要研究对象的是<strong>离散数学</strong>，虽然很多学生并没有意识到这一点。即使是小学生，知识储备还很有限，但是即使写一些简单的题目，也是对思维的训练。效果是对数字、形状与抽象结构的理解更加透彻。小学或者初一小朋友理解一些抽象的东西起来会有一些困难，但是经过编程的训练，就可以很大的提升这一方面的能力。对，就是非常有助于中学阶段的理科学习。</p><p>对于中学生来说，学习算法竞赛除了上一点所说的培养兴趣以外，还能学习到一些数论、概率统计方面的一些知识。这些知识很可能在学校的课堂上并不会教授，但是在学习中学数学中是可以用得到的。除此之外，学习算法竞赛可以给同学提供另外的思路，比如递推思想、枚举思想等，<strong>这些思维方式在实际生活中是很有用的。</strong></p><h3 id="OI考什么？"><a href="#OI考什么？" class="headerlink" title="OI考什么？"></a>OI考什么？</h3><p>信息学竞赛的考察形式分为笔试和上机两种形式。不仅是信息学竞赛，包括计算机考级、大学生程序设计比赛、信息技术高考等相关考试竞赛的形式也无外乎这两种。信息学竞赛以上机测试为主，但是笔试也是重要的组成部分。</p><h4 id="信息学竞赛的笔试"><a href="#信息学竞赛的笔试" class="headerlink" title="信息学竞赛的笔试"></a>信息学竞赛的笔试</h4><p>信息学竞赛无论入门组还是提高组，初赛的形式是笔试，在固定的时间内完成一份试卷，试卷内容包括计算机基本常识、计算机科学简单数学知识、程序设计语言基础和简单数据结构与算法。原则上不允许使用计算器，但是因考场而异。批改是按照市级赛区统一批改然后统一划线决定复赛名单。</p><p>信息学竞赛除了初赛是笔试以外，NOI全国决赛也有100分的笔试环节，全部都是选择题。</p><h4 id="信息学竞赛的上机测试"><a href="#信息学竞赛的上机测试" class="headerlink" title="信息学竞赛的上机测试"></a>信息学竞赛的上机测试</h4><p>复赛、省选以及冬令营、APIO、CTSC等竞赛，以及NOI的主要比赛，都是上机测试，上机测试是信息学竞赛的重头戏，能直接决定你能获得什么奖。根据比赛的不同，每场上机测试限时3-5小时，需要完成3-4个题目。NOIP提高组、NOI和某些省选会分2天进行两次上机测试。</p><p>上机测试的题型有多种形式，但是无论是什么形式，本质上都是要求你编写程序，可以将给定的输入数据按照题目要求处理成符合要求的输出。</p><p>最常见的试题形式叫做“传统题”。传统题是指给你一个题目描述、输入输出格式、输入输出样例（有时会给你样例解释帮助你更好的理解题意）以及数据范围，你需要根据这些信息编写出一个程序，能够将给定的输入进行处理，然后输出答案。</p><p>选手按照要求编写完程序后需要自己进行测试、保证程序符合题目要求。赛后统一提交并进行评测。出题人会生成构造多组测试数据，向选手编写的程序编译后的可执行文件输入，得到的选手输出和标准输出进行比对；如果选手输出和标准输出一致（或者通过特殊判断认为选手输出是合法的）就能够获得这部分的分数。如果输出了错误的答案或者运行时间过久、运行时错误等问题则不能得分。</p><h3 id="在肥城一中学习OI的优势？"><a href="#在肥城一中学习OI的优势？" class="headerlink" title="在肥城一中学习OI的优势？"></a>在肥城一中学习OI的优势？</h3><p>肥城市第一高级中学自2015年就开始组织OI培训，至今成果斐然，在每年NOIP奖项中肥城近乎全部的选手来自一中：</p><p><img src="https://i.loli.net/2019/09/20/MJpjrS5zZKNnTPA.png"></p><p>获奖学生分别被西安交通大学、北京邮电大学、南京航空航天大学等高校降分数线录取。</p><p>学校也十分重视一中OI的发展，我们有经验丰富的教练、完备的教学体系、系统的学习资源。</p><p>精致的小型活动室以及实验电教中心里3个<del>旧式</del>机房；</p><p><img src="https://i.loli.net/2019/09/20/E5fNGkeRvUo8aLM.jpg"></p><p><strong>和幽默风趣的学姐学长：</strong></p><p>由于OI知识更新换代速度极快，学生往往走在知识提出、运用的最前沿，<strong>学姐学长在新一届OIer的教学中也起着很大的作用。</strong></p><p>另外，由于OI竞赛的性质，OI圈的主要组成部分是ACGer以及技术宅，在哔哩哔哩中经常能见到OIer的身影，比如：</p><p><img src="https://s1.ax1x.com/2018/03/31/9xba3n.png"></p><p><img src="https://s1.ax1x.com/2018/03/31/9xbU9s.png"></p><h3 id="新高一OI培训计划？"><a href="#新高一OI培训计划？" class="headerlink" title="新高一OI培训计划？"></a>新高一OI培训计划？</h3><p>首先，参加OI培训无门槛，完全自愿。</p><p>目前正在计划开设第一批零基础培训班，旨在训练通过初赛的新高一学生迅速接近NOIP水准，有能力参加CSP-S 2019。</p><p>同时也有针对初赛学生的视频讲解。</p><p>开始后上课在每周五、周日晚自习，会有优质讲师与学长讲解。<strong>培训免费！</strong></p><p><strong>肥城一中FOI大家庭期待您的加入！</strong></p><p><img src="https://i.loli.net/2019/09/20/WAL7hxXQ1J6mC4o.jpg"></p><p><img src="https://s1.ax1x.com/2018/03/31/9xbE7D.png"></p><blockquote><p>参考：</p><p>Studying Father’s blog<br>kkksc03: 信息学竞赛全攻略3：信息学竞赛考什么<br>kkksc03: 信息学竞赛全攻略2：为什么要参加竞赛</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宣传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】基于链式前向星的图论算法（三） 拓扑排序</title>
      <link href="/2019/09/13/tuo-bu-pai-xu/"/>
      <url>/2019/09/13/tuo-bu-pai-xu/</url>
      
        <content type="html"><![CDATA[<p>有向无环图(DAG)可用来表示各种事物的顺序。比如以各项工作为顶点，用有向边来表示工作顺序。</p><p>如果对这种表示顺序关系的DAG进行拓扑排序， 我们便能得到一个恰当的工作顺序。</p><p>拓扑排序不是用于将n个数从小到大排序，而是对于一个DAG，对图上的点进行排序，使得对于图上的任意一条有向边(u, v)，在排序后的序列中，u出现在v之前。</p><p>如何进行拓扑排序：</p><ul><li>用边表存下边，记录下每个点的入度 (即有多少条边以该点为终点)</li><li>先将所有入度为0的点加入操作队列<br>• 在操作队列中<br>• 将队头设为操作点，并弹出队头<br>• 将操作点相连的边从图中删除<br>（实际实现中我们只需要将该点能到达的点的入度减一）<br>• 查看该点能到达的点是否有入度为0的点，有的话将其加入队列<br>• 此时点进入队列时的标号就是一种可行的拓扑排序</li></ul>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】基于链式前向星的图论算法（二） 最短路</title>
      <link href="/2019/09/13/zui-duan-lu/"/>
      <url>/2019/09/13/zui-duan-lu/</url>
      
        <content type="html"><![CDATA[<h3 id="Part-1-单源最短路（SSSP）"><a href="#Part-1-单源最短路（SSSP）" class="headerlink" title="Part 1 单源最短路（SSSP）"></a>Part 1 单源最短路（SSSP）</h3><h4 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h4><p><strong>Dijkstra只能用于无负权边的图。</strong></p><p>设图$G=(V,E)$所有顶点的集合为$V$，起点为$s$,最短路径树中包含的顶点集合为$S$。</p><p>在各计算步骤中，我们将选岀最短路径树的边和顶点并将其添加至$S$。</p><p>对于各顶点$i$，设仅经由$S$内顶点的$s$到$i$的最短路径成本为$d[i]$，$i$在最短路径树中的父结点为$p[i]$。</p><ul><li><p>初始状态下将$S$置空。</p><p>初始化$S$的$d[s] = 0$；除s以外，所有属于V的顶点i的$d[i]=\infty$</p></li><li><p>循环进行下述处理，直至$S=F$为止。</p><ul><li><p>从$V-S$中选岀$d[u]$最小的顶点$u$</p></li><li><p>将$u$添加$S$至，同时将与$u$相邻且属于$V-S$的所有顶点$v$的值按下述方式更新：</p></li></ul></li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">if</span> d<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token function">w</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span> <span class="token operator">&lt;</span> d<span class="token punctuation">[</span>v<span class="token punctuation">]</span>    d<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> d<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token function">w</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span>    p<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> u<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>伪代码：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">dijkstra</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    将所有顶点u的color<span class="token punctuation">[</span>u<span class="token punctuation">]</span>设为WHITE，d<span class="token punctuation">[</span>u<span class="token punctuation">]</span>初始化为INFTY    d<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>    p<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>    <span class="token keyword">while</span> <span class="token boolean">true</span>        mincost <span class="token operator">=</span> INFTY        <span class="token keyword">for</span> i从<span class="token number">0</span>至n<span class="token operator">-</span><span class="token number">1</span>            <span class="token keyword">if</span> color<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> BLACK <span class="token operator">&amp;&amp;</span> d<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> mincost                mincost <span class="token operator">=</span> d<span class="token punctuation">[</span>i<span class="token punctuation">]</span>                u <span class="token operator">=</span> i        <span class="token keyword">if</span> mincost <span class="token operator">==</span> INFTY            <span class="token keyword">break</span>        color<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> BLACK        <span class="token keyword">for</span> v从<span class="token number">0</span>至n<span class="token operator">-</span><span class="token number">1</span>            <span class="token keyword">if</span> color<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">!=</span> BLACK且u和v之间存在边                <span class="token keyword">if</span> d<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> M<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">&lt;</span> d<span class="token punctuation">[</span>v<span class="token punctuation">]</span>                    d<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> d<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> M<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span>                    p<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> u                    color<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> GRAY<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>邻接矩阵实现的Dijkstra算法复杂度为$O(|V|^2)$。使用邻接表时，更新最短距离只需访问每条边一次，因此更新最短距离复杂度为$O(|E|)$。<br>但是要枚举所有顶点来查找下一个使用的顶点，因此最终复杂度还是$O(|V|^2)$。</p><h4 id="Dijkstra堆优化"><a href="#Dijkstra堆优化" class="headerlink" title="Dijkstra堆优化"></a>Dijkstra堆优化</h4><p>把每个顶点当前的最短距离用堆维护，可以省去松弛和查找操作，直接把节点和数据丢进优先队列。</p><p>更新最短距离时，每次从堆中取出的最小值就是下一次要使用的顶点。</p><p>在使用堆优化时，加入堆的应为当前将要被更新的点的编号和当前距离；而当距离被更新时，应新加入一个包含当前点的编号和当前距离的节点。</p><ul><li>在单源最短路的题目中，Dijkstra是最好用的算法。</li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/* * @Author: thyzzs * @Date: 2019-11-06 19:00:52 * @LastEditTime: 2024-03-11 20:38:18 * @Description: Dijkstra */</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;utility&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;climits&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_V</span> <span class="token expression"><span class="token number">100005</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token comment">// typedef pair&lt;int,int&gt; P;</span><span class="token keyword">struct</span> <span class="token class-name">edge</span> <span class="token punctuation">{</span><span class="token keyword">int</span> to<span class="token punctuation">,</span> cost<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token keyword">int</span> V<span class="token punctuation">,</span> E<span class="token punctuation">,</span> S<span class="token punctuation">;</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> w<span class="token punctuation">;</span>edge e<span class="token punctuation">;</span>vector<span class="token operator">&lt;</span>edge<span class="token operator">&gt;</span> G<span class="token punctuation">[</span>MAX_V<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> d<span class="token punctuation">[</span>MAX_V<span class="token punctuation">]</span><span class="token punctuation">,</span> vis<span class="token punctuation">[</span>MAX_V<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">dijkstra</span><span class="token punctuation">(</span><span class="token keyword">int</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>priority_queue<span class="token operator">&lt;</span>pair<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> vector<span class="token operator">&lt;</span>pair<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&gt;</span><span class="token punctuation">,</span> greater<span class="token operator">&lt;</span>pair<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&gt;</span> <span class="token operator">&gt;</span> que<span class="token punctuation">;</span><span class="token function">fill</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> d <span class="token operator">+</span> V<span class="token punctuation">,</span> INT_MAX<span class="token punctuation">)</span><span class="token punctuation">;</span>d<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>que<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">make_pair</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>que<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>pair<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> p <span class="token operator">=</span> que<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>que<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> t <span class="token operator">=</span> p<span class="token punctuation">.</span>second<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>vis<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">continue</span><span class="token punctuation">;</span>vis<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> G<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>e <span class="token operator">=</span> G<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>d<span class="token punctuation">[</span>e<span class="token punctuation">.</span>to<span class="token punctuation">]</span> <span class="token operator">&gt;</span> d<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>cost<span class="token punctuation">)</span> <span class="token punctuation">{</span>d<span class="token punctuation">[</span>e<span class="token punctuation">.</span>to<span class="token punctuation">]</span> <span class="token operator">=</span> d<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>cost<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>vis<span class="token punctuation">[</span>e<span class="token punctuation">.</span>to<span class="token punctuation">]</span><span class="token punctuation">)</span>que<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">make_pair</span><span class="token punctuation">(</span>d<span class="token punctuation">[</span>e<span class="token punctuation">.</span>to<span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>to<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>V<span class="token punctuation">,</span> <span class="token operator">&amp;</span>E<span class="token punctuation">,</span> <span class="token operator">&amp;</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span>S<span class="token operator">--</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> E<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>u<span class="token punctuation">,</span> <span class="token operator">&amp;</span>v<span class="token punctuation">,</span> <span class="token operator">&amp;</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>u<span class="token operator">--</span><span class="token punctuation">;</span>v<span class="token operator">--</span><span class="token punctuation">;</span>e<span class="token punctuation">.</span>to <span class="token operator">=</span> v<span class="token punctuation">;</span>e<span class="token punctuation">.</span>cost <span class="token operator">=</span> w<span class="token punctuation">;</span>G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//e.to = u;</span><span class="token comment">//G[v].push_back(e);</span><span class="token punctuation">}</span><span class="token function">dijkstra</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> V<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Bellman-Ford"><a href="#Bellman-Ford" class="headerlink" title="Bellman-Ford"></a>Bellman-Ford</h4><p>Bellman-Ford算法基于动态规划的思想，即反复用已有的边来更新最短距离。即如果$d[u] + cost(u, v) &lt; d[v]$则更新d[v]。</p><p>因为最短路经过的边数量不超过n − 1，所以至多n − 1次更新后d[x]即为源点S到地图上其余每个点的最短距离。</p><ul><li><p>d[S] = 0，其余d[x] = INF</p></li><li><p>对于每条边$(u, v)$，如果$d[u] &lt; INF$且$d[u] + cost(u, v) &lt; d[v]$，则$d[v] = d[u] + cost(u, v) &lt; d[v]$</p></li><li><p>循环上一步至多n − 1次</p></li><li><p>对于每条边$(u, v)$，如果$d[u] &lt; INF$且$d[u] + cost(u, v) &lt; d[v]$，则图中存在负权回路</p></li></ul><p>总时间复杂度$O(nm)$</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">/* * @Author: thyzzs * @Date: 2019-11-06 19:00:52 * @LastEditTime: 2024-03-11 20:38:18 * @Description: Bellman-Ford */</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;climits&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_E</span> <span class="token expression"><span class="token number">500005</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_V</span> <span class="token expression"><span class="token number">10005</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">edge</span> <span class="token punctuation">{</span><span class="token keyword">int</span> from<span class="token punctuation">,</span> to<span class="token punctuation">,</span> cost<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>edge es<span class="token punctuation">[</span>MAX_E<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> d<span class="token punctuation">[</span>MAX_V<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> V<span class="token punctuation">,</span> E<span class="token punctuation">,</span> S<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">Bellman_Ford</span><span class="token punctuation">(</span><span class="token keyword">int</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> V<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>d<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> INT_MAX<span class="token punctuation">;</span>d<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">bool</span> update <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> E<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>edge e <span class="token operator">=</span> es<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>d<span class="token punctuation">[</span>e<span class="token punctuation">.</span>from<span class="token punctuation">]</span> <span class="token operator">!=</span> INT_MAX <span class="token operator">&amp;&amp;</span> d<span class="token punctuation">[</span>e<span class="token punctuation">.</span>to<span class="token punctuation">]</span> <span class="token operator">&gt;</span> d<span class="token punctuation">[</span>e<span class="token punctuation">.</span>from<span class="token punctuation">]</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>cost<span class="token punctuation">)</span> <span class="token punctuation">{</span>d<span class="token punctuation">[</span>e<span class="token punctuation">.</span>to<span class="token punctuation">]</span> <span class="token operator">=</span> d<span class="token punctuation">[</span>e<span class="token punctuation">.</span>from<span class="token punctuation">]</span> <span class="token operator">+</span> e<span class="token punctuation">.</span>cost<span class="token punctuation">;</span>update <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>update<span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>V<span class="token punctuation">,</span> <span class="token operator">&amp;</span>E<span class="token punctuation">,</span> <span class="token operator">&amp;</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> E<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>es<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>from<span class="token punctuation">,</span> <span class="token operator">&amp;</span>es<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>to<span class="token punctuation">,</span> <span class="token operator">&amp;</span>es<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>cost<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">Bellman_Ford</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> V<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d "</span><span class="token punctuation">,</span> d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Bellman-Ford队列优化（SPFA）"><a href="#Bellman-Ford队列优化（SPFA）" class="headerlink" title="Bellman-Ford队列优化（SPFA）"></a>Bellman-Ford队列优化（SPFA）</h4><p>SPFA队列优化在随机数据下复杂度较优，但在构造数据下容易被卡。</p><p>通常来讲，就是有网格套链式菊花图外挂诱导次短路节点就可以用一个数据卡掉所有的SPFA。</p><h3 id="Part-2-所有点对间最短路径（APSP）"><a href="#Part-2-所有点对间最短路径（APSP）" class="headerlink" title="Part 2 所有点对间最短路径（APSP）"></a>Part 2 所有点对间最短路径（APSP）</h3><p>所有点对间最短路径问题（All Pairs Shortest Path, APSP) 是以图$G = (V, E)$为对象，求$G$中每两点之间的最短路径（距离）的问题。</p><h4 id="Dijkstra-1"><a href="#Dijkstra-1" class="headerlink" title="Dijkstra"></a>Dijkstra</h4><p>如果$G$中不存在权值为负的边，我们可以将各个顶点作为起点执行$|K|$次Dijkstra算法来求解这类问题。</p><p>这样做的算法复杂度为$O(|V|^3)$</p><p>用优先级队列实现的话可以简化至$O(|V|(|E|+|V|) \log |V|)$</p><h4 id="Floyd"><a href="#Floyd" class="headerlink" title="Floyd"></a>Floyd</h4><p><strong>使用邻接矩阵存图</strong></p><p>先初始化f[i][i] = 0；若i不能到j，f[i][j] = INF</p><p>若从i到j有一条边权为a[i][j]的边，则f[i][j] = a[i][j]</p><p>Floyd的本质是一个三维的DP，f[k][i][j]表示可以用1到k的点作为中间点从i到j的最短距离。</p><p><code>f[k][i][j] = min(f[k − 1][i][j], f[k − 1][i][k] + f[k − 1][k][j])</code></p><p>而实际我们可以去掉k这一维</p><p><code>f[i][j] = min(f[i][j], f[i][k] + f[k][j])</code></p><ul><li><p>值f[i][j]不变就对应<code>f[k][i][j] = f[k − 1][i][j]</code></p></li><li><p>值改变就对应<code>f[k][i][j] = f[k − 1][i][k] + f[k − 1][k][j]</code></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】基于链式前向星的图论算法（一） 搜索</title>
      <link href="/2019/09/08/sou-suo/"/>
      <url>/2019/09/08/sou-suo/</url>
      
        <content type="html"><![CDATA[<h3 id="Part-0-缘起"><a href="#Part-0-缘起" class="headerlink" title="Part 0 缘起"></a>Part 0 缘起</h3><p>近日整理笔记时发现，初学时的图论算法都是基于邻接矩阵储存的，使用时非常不方便。所以就写了这篇博文，聊作图论学习的回顾。</p><h3 id="Part-1-图的链式前向星表示"><a href="#Part-1-图的链式前向星表示" class="headerlink" title="Part 1 图的链式前向星表示"></a>Part 1 图的链式前向星表示</h3><p>链式前向星又称为邻接表的静态建表方式，其最开始确实是基于前向星，是以提高前向星的构造效率为目的设计的存储方式，最终演变成了一个变形的邻接表这一数据结构。</p><p>链式前向星采用数组模拟链表的方式实现邻接表的功能。（为方便使用，以下代码使用vector实现链式前向星）</p><h4 id="无权图的链式前向星表示"><a href="#无权图的链式前向星表示" class="headerlink" title="无权图的链式前向星表示"></a>无权图的链式前向星表示</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> G<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//表示有MAX_N个顶点的图的链式前向星</span><span class="token operator">:</span> <span class="token operator">:</span>G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//从顶点u向顶点v连边</span><span class="token comment">//G[v].push_back(u); //无向图时再从顶点v向顶点u连边</span><span class="token operator">:</span> <span class="token operator">:</span><span class="token comment">//搜索与顶点u相邻的顶点v</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> v <span class="token operator">=</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">:</span> <span class="token operator">:</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="加权图的链式前向星表示"><a href="#加权图的链式前向星表示" class="headerlink" title="加权图的链式前向星表示"></a>加权图的链式前向星表示</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">vector<span class="token operator">&lt;</span>pair<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&gt;</span> G<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//表示有MAX_N个顶点的图的链式前向星</span><span class="token operator">:</span> <span class="token operator">:</span>G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span><span class="token function">make_pair</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//从顶点u向顶点v连权值为c的边</span><span class="token comment">//G[v].push_back(make_pair(u, c)); //无向图时再从顶点v向顶点u连权值为c的边</span><span class="token operator">:</span> <span class="token operator">:</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment">//搜索与顶点u相邻的顶点v</span>    <span class="token keyword">int</span> v <span class="token operator">=</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>first<span class="token punctuation">;</span>    <span class="token operator">:</span> <span class="token operator">:</span>    <span class="token comment">//顶点u与顶点v之间的边权</span>    <span class="token keyword">int</span> d <span class="token operator">=</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>second<span class="token punctuation">;</span>    <span class="token operator">:</span> <span class="token operator">:</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Part-2-图的深度优先搜索"><a href="#Part-2-图的深度优先搜索" class="headerlink" title="Part 2 图的深度优先搜索"></a>Part 2 图的深度优先搜索</h3><p>在图的搜索算法中，深度优先搜索采取的思路是尽可能地访问相邻顶点。</p><p>设仍存在未搜索邻接边的顶点中最后一个被发现的顶点为v，那么深度优先搜索就是对顶点v的邻接边递归地进行搜索, 当v的边全部搜索完毕后，程序沿发现v时所经过的边回归，继续搜索前一顶点。</p><p>搜索一直持续到发现当前起点可到达的所有顶点为止。如果仍有顶点未被发现，则选择其中编号最小的一个作为新起点继续搜索。</p><p>深度优先搜索中，对各顶点记录以下两个时间戳：</p><ul><li>时间戳d[v]: 记录第一次访问v的时刻（发现时刻）</li><li>时间戳f[v]: 记录调查完v的相邻顶点的时刻（结束时刻）</li></ul><p>该算法通常的时间复杂度为$O(|V| + |E|)$</p><h4 id="使用栈的深度优先搜索"><a href="#使用栈的深度优先搜索" class="headerlink" title="使用栈的深度优先搜索"></a>使用栈的深度优先搜索</h4><ul><li><p>将最初访问的顶点压入栈。</p></li><li><p>只要栈中仍有顶点，就循环进行下述操作：</p><ul><li><p>访问栈顶部的顶点u</p></li><li><p>从当前访问的顶点u移动至顶点v时，将v压入栈。如果当前顶点不存在末访问的相邻顶点，则将u从栈中删除</p></li></ul></li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">dfs_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//顶点编号为 0 起点</span>    将所有顶点的 color 设置为 WHITE    <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">//以顶点0为起点进行深度优先搜索</span><span class="token function">dfs</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>    S<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token comment">//将起点u压入栈</span>    color<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> GRAY    d<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>time<span class="token keyword">while</span> S 不为空    u <span class="token operator">=</span> S<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    v <span class="token operator">=</span> <span class="token function">next</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span> <span class="token comment">//依次获取与 u 相邻的顶点</span>    <span class="token keyword">if</span> v <span class="token operator">!=</span> NIL    <span class="token keyword">if</span> color<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">==</span> WHITE        color<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> GRAY        d<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>time        S<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>    <span class="token keyword">else</span>        s<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        color<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> BLACK        f<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>time<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用递归的深度优先搜索"><a href="#使用递归的深度优先搜索" class="headerlink" title="使用递归的深度优先搜索"></a>使用递归的深度优先搜索</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">dfs_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//顶点编号为 0 起点</span>    将所有顶点的 color 设置为 WHITE    <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token function">dfs</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>    color<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> GRAY    d<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>time    <span class="token keyword">for</span> 顶点 v 从 <span class="token number">0</span> 到<span class="token operator">|</span>V<span class="token operator">|</span><span class="token operator">-</span><span class="token number">1</span>        <span class="token keyword">if</span> M<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> color<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">==</span> WHITE            <span class="token function">dfs</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>    color<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> BLACK    f<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>time<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_N</span> <span class="token expression"><span class="token number">100</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">WHITE</span> <span class="token expression"><span class="token number">0</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">GRAY</span> <span class="token expression"><span class="token number">1</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">BLACK</span> <span class="token expression"><span class="token number">2</span></span></span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> color<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">,</span> d<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">,</span> tt<span class="token punctuation">;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> G<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">dfs_visit</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span> <span class="token punctuation">{</span>color<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> GRAY<span class="token punctuation">;</span>d<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tt<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> v <span class="token operator">=</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>color<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">==</span> WHITE<span class="token punctuation">)</span><span class="token function">dfs_visit</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>color<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> BLACK<span class="token punctuation">;</span>f<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">++</span>tt<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//init</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>color<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> WHITE<span class="token punctuation">;</span>tt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token punctuation">(</span>color<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> WHITE<span class="token punctuation">)</span><span class="token function">dfs_visit</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d %d\n"</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> k<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>u<span class="token punctuation">,</span> <span class="token operator">&amp;</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>u<span class="token operator">--</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> k<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token operator">--</span><span class="token punctuation">;</span>G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>G<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">dfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在某些语言或环境下，对规模较大的图使用递归思路的深度优先搜索算法会导致栈溢出。</p><p>目前大部分算法竞赛（包括CSP<del>NOIP</del>、大部分省选以及 CCF 举办的各项赛事）都支持无限栈空间 ，即：栈空间不单独限制，但总内存空间仍然受题面限制。</p><h3 id="Part-3-图的广度优先搜索"><a href="#Part-3-图的广度优先搜索" class="headerlink" title="Part 3 图的广度优先搜索"></a>Part 3 图的广度优先搜索</h3><ul><li><p>将最初访问的顶点压入队列。</p></li><li><p>只要队列中仍有顶点，就循环进行下述操作：</p><ul><li><p>访问队首的顶点u</p></li><li><p>从当前访问的顶点u移动至顶点v时，将v压入队列</p></li></ul></li></ul><p>该算法通常的时间复杂度为$O(|V| + |E|)$</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">bfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//顶点编号为 0 起点</span>    将所有顶点的 color 设置为 WHITE    将所有顶点的 d<span class="token punctuation">[</span>u<span class="token punctuation">]</span> 设置为 INFTY    color<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> GRAY    d<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>    Q<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>    <span class="token keyword">while</span> Q不为空        u <span class="token operator">=</span> Q<span class="token punctuation">.</span><span class="token function">dequeue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> v 为 <span class="token number">0</span> 到<span class="token operator">|</span>V<span class="token operator">|</span><span class="token operator">-</span><span class="token number">1</span>            <span class="token keyword">if</span> M<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> color<span class="token punctuation">[</span>v<span class="token punctuation">]</span>                color<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> GRAY                d<span class="token punctuation">[</span>v<span class="token punctuation">]</span> <span class="token operator">=</span> d<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>                Q<span class="token punctuation">.</span><span class="token function">enqueue</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>        color<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> BLACK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAX_N</span> <span class="token expression"><span class="token number">110</span></span></span><span class="token keyword">int</span> n<span class="token punctuation">;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> G<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> num<span class="token punctuation">,</span> u<span class="token punctuation">,</span> v<span class="token punctuation">;</span><span class="token keyword">int</span> flag<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> d<span class="token punctuation">[</span>MAX_N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">bfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>queue<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> q<span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span>q<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> t <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token function">front</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>q<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> j <span class="token operator">=</span> G<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">// 标记为已经访问</span>flag<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 更新长度</span>d<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> d<span class="token punctuation">[</span>t<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 压入栈内</span>q<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">memset</span><span class="token punctuation">(</span>d<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d %d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>u<span class="token punctuation">,</span> <span class="token operator">&amp;</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span>u<span class="token operator">--</span><span class="token punctuation">;</span><span class="token comment">// 初始化</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>d<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> num<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>v<span class="token operator">--</span><span class="token punctuation">;</span>G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>G<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push_back</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token function">bfs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d\n"</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> d<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【笔记】C++的常数优化技巧</title>
      <link href="/2019/09/08/c-chang-shu-you-hua/"/>
      <url>/2019/09/08/c-chang-shu-you-hua/</url>
      
        <content type="html"><![CDATA[<h3 id="Part-0-时间复杂度常数优化的意义"><a href="#Part-0-时间复杂度常数优化的意义" class="headerlink" title="Part 0 时间复杂度常数优化的意义"></a>Part 0 时间复杂度常数优化的意义</h3><p>在科学研究意义上，时间复杂度的常数优化并不是十分重要的。</p><p>但在信息学竞赛中，同样的复杂度为$O(n^2)$的程序，对于一组 $n=5000$ 的数据，有的可能常数为20，需要运行1000ms，有的可能常数为5，需要运行500ms。</p><p>这样，两个看似相同的算法，一个超时错误，一个正确得分。</p><p>同一个程序设计思想，用不同算法，会有不同的运行效率；而即使是同样的算法，由于在代码的细节方面设计有所不同，执行起来效率也会有所不同。</p><p>当遇到所需时间较长的问题时，一个常数级优化可能是AC的关键所在。</p><h3 id="Part-1-基本运算"><a href="#Part-1-基本运算" class="headerlink" title="Part 1 基本运算"></a>Part 1 基本运算</h3><p>众所周知，除法和取模运算的运行时间相对赋值、比较、加、减、乘运算要慢得多，而由于计算机内部的原因，位运算的速度是最快的。</p><p>因此，我们应当尽可能用速度较快的运算代替速度慢的运算。</p><h4 id="位压缩的技巧："><a href="#位压缩的技巧：" class="headerlink" title="位压缩的技巧："></a>位压缩的技巧：</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">读取第 k 位： a <span class="token operator">&gt;&gt;</span> k <span class="token operator">&amp;</span> <span class="token number">1</span>读取第 k 位并取反： <span class="token operator">~</span>a <span class="token operator">&gt;&gt;</span> k <span class="token operator">&amp;</span> <span class="token number">1</span>将第 k 位清 <span class="token number">0</span>： a <span class="token operator">&amp;=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k<span class="token punctuation">)</span>将第 k 位置 <span class="token number">1</span>： a <span class="token operator">|=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k将第 k 位取反： a <span class="token operator">^=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> k将第 k1<span class="token operator">~</span>k2 位反转： a <span class="token operator">^=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span>k2 <span class="token operator">-</span> k1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> k2是否恰好只有一个 <span class="token boolean">true</span>： <span class="token operator">!</span><span class="token punctuation">(</span>x <span class="token operator">&amp;</span> <span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> x判断是否有两个相邻的 <span class="token boolean">true</span>： x <span class="token operator">&gt;&gt;</span> <span class="token number">1</span> <span class="token operator">&amp;</span> x是否有三个相邻的 <span class="token boolean">true</span>： x <span class="token operator">&gt;&gt;</span> <span class="token number">1</span> <span class="token operator">&amp;</span> x <span class="token operator">&gt;&gt;</span> <span class="token number">2</span> <span class="token operator">&amp;</span> x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="特殊运算："><a href="#特殊运算：" class="headerlink" title="特殊运算："></a>特殊运算：</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">乘除<span class="token number">2</span>的整数幂x<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>k<span class="token punctuation">)</span><span class="token operator">=</span>x<span class="token operator">&lt;&lt;</span>kx<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>k<span class="token punctuation">)</span><span class="token operator">=</span>x<span class="token operator">&gt;&gt;</span>k乘除常数的优化x<span class="token operator">*</span><span class="token number">10</span><span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">3</span><span class="token punctuation">)</span>x<span class="token operator">*</span><span class="token number">13</span><span class="token operator">=</span>x<span class="token operator">+</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span>x<span class="token operator">*</span><span class="token number">14</span><span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span>x<span class="token operator">*</span><span class="token number">17</span><span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>xx<span class="token operator">*</span><span class="token number">63</span><span class="token operator">=</span><span class="token punctuation">(</span>x<span class="token operator">&lt;&lt;</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token operator">-</span>x对<span class="token number">2</span><span class="token operator">^</span>k取模优化x<span class="token operator">%</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>k<span class="token punctuation">)</span><span class="token operator">=</span>x<span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span>k<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="位运算代替四则运算："><a href="#位运算代替四则运算：" class="headerlink" title="位运算代替四则运算："></a>位运算代替四则运算：</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">return</span> a<span class="token punctuation">;</span><span class="token keyword">int</span> sum <span class="token operator">=</span> a <span class="token operator">^</span> b<span class="token punctuation">;</span><span class="token keyword">int</span> carry <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&amp;</span> b<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token function">add</span><span class="token punctuation">(</span>sum<span class="token punctuation">,</span> carry<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">//加法</span><span class="token keyword">int</span> <span class="token function">negative</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token operator">~</span>a<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">//取补码</span><span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">return</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token function">negative</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">//减法</span><span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>b <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">//b最后一位是否为1</span>ans <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>a <span class="token operator">&lt;&lt;=</span> <span class="token number">1</span><span class="token punctuation">;</span>b <span class="token operator">&gt;&gt;=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">//正数乘法</span><span class="token keyword">int</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> ans <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token comment">//比较x是否大于y的(1&lt;&lt;i)次方，避免将x与(y&lt;&lt;i)比较，因为不确定y的(1&lt;&lt;i)次方是否溢出</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x <span class="token operator">&gt;&gt;</span> i<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>ans <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>x <span class="token operator">-=</span> <span class="token punctuation">(</span>y <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">return</span> ans<span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token comment">//除法</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="对于取模的优化："><a href="#对于取模的优化：" class="headerlink" title="对于取模的优化："></a>对于取模的优化：</h4><p>可以将其优化为：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">MOD</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">&lt;</span> Mod <span class="token operator">?</span> x <span class="token operator">:</span> x <span class="token operator">%</span> Mod<span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>而对于某些题目，仅需要对答案取模。这类题目要边运算边取模的目的一般是防止溢出。<br>故我们甚至可以写成这样：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">MOD</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">&lt;=</span> <span class="token number">0x3f3f3f3f</span> <span class="token operator">?</span> x <span class="token operator">:</span> x <span class="token operator">%</span> Mod<span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果是乘法，我们相应地可以写成：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">MOD</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">&lt;=</span> <span class="token number">45000</span> <span class="token operator">?</span> x <span class="token operator">:</span> x <span class="token operator">%</span> Mod<span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>总之，这个范围要保证结果在计算时不会有溢出的风险。但采用了这种方式后，最后输出时一定要取模。</p><p>对于负数取模的优化：</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">MODF</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>x <span class="token operator">=</span> <span class="token function">MOD</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> x <span class="token operator">+</span> MOD <span class="token operator">:</span> x<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Part-2-内存优化"><a href="#Part-2-内存优化" class="headerlink" title="Part 2 内存优化"></a>Part 2 内存优化</h3><p>内存的访问是非常慢的，除了内存，还有寄存器(register)、高速缓存(cache)，它们的访问速度比内存更快。</p><h4 id="register循环："><a href="#register循环：" class="headerlink" title="register循环："></a>register循环：</h4><p>寄存器具有最高的访问速度，在变量前加关键词register即将其加入寄存器。但寄存器的空间是有限的，不应该滥用register，应该仅在访问最频繁的几个变量（如循环变量）前加register。</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">register</span> <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="让某个数组的大小能够卡进cache"><a href="#让某个数组的大小能够卡进cache" class="headerlink" title="让某个数组的大小能够卡进cache"></a>让某个数组的大小能够卡进cache</h4><p>cache即高速缓存，一般分为3级（有些电脑为2级），访问速度逐级递减。访问变量时，CPU会优先在cache而不是内存中查找，如果cache中不存在此变量，则会进入内存查找，这称为cache miss。</p><p>与register一样，cache的大小同样有限。一些过大的内存是不可以进入cache的。</p><p>基数排序时，以256为基数会比256*256更快。因为256大小的四个数组可以轻松进入cache。</p><ul><li><p>保证时空局部性</p><ul><li><p>时间局部性：当一个变量被使用时，它会在短时间内再次被使用。</p></li><li><p>空间局部性：当一个变量被使用时，它的内存附近的变量会再次被使用。</p></li></ul></li></ul><p>保证这两样东西的良好有益于减少cache miss。</p><ul><li><p>怎样优化空间局部性？</p><ul><li>将一些关系密切，例如经常连着使用的变量尽量定义在一起，或用结构体封装起来。</li><li>适当调整变量定义顺序</li><li>保证内存连续访问。例如：Floyd和矩阵乘法的程序中，将第三层循环作为第一层会大大提高速度。</li></ul></li><li><p>怎样优化时间局部性？</p><ul><li>尽量使用局部变量。因为堆栈的数据访问十分频繁。</li></ul></li></ul><h3 id="Part-3-I-O优化"><a href="#Part-3-I-O优化" class="headerlink" title="Part 3 I\O优化"></a>Part 3 I\O优化</h3><p>C++为了兼容性导致<code>cin</code>、<code>cout</code>极慢，对于大量数据的读入和输出往往不堪重负。这个时候使用读入优化、输出优化可以节省数倍的时间。<br>简单使用可以用<code>scanf</code>和<code>printf</code>代替<code>cin</code>和<code>cout</code>。</p><h4 id="基本读入优化"><a href="#基本读入优化" class="headerlink" title="基本读入优化"></a>基本读入优化</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">inline</span> <span class="token keyword">int</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> f <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">char</span> ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>ch <span class="token operator">&lt;</span> <span class="token char">'0'</span> <span class="token operator">||</span> ch <span class="token operator">&gt;</span> <span class="token char">'9'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">if</span> <span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">'-'</span><span class="token punctuation">)</span>f <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">while</span> <span class="token punctuation">(</span>ch <span class="token operator">&gt;=</span> <span class="token char">'0'</span> <span class="token operator">&amp;&amp;</span> ch <span class="token operator">&lt;=</span> <span class="token char">'9'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>x <span class="token operator">=</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>ch <span class="token operator">^</span> <span class="token number">48</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ch <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> x <span class="token operator">*</span> f<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="fread优化"><a href="#fread优化" class="headerlink" title="fread优化"></a>fread优化</h4><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">getchar</span><span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>p1<span class="token operator">==</span>p2<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>p2<span class="token operator">=</span><span class="token punctuation">(</span>p1<span class="token operator">=</span>buf<span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">fread</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">,</span>p1<span class="token operator">==</span>p2<span class="token punctuation">)</span><span class="token operator">?</span><span class="token constant">EOF</span><span class="token operator">:</span><span class="token operator">*</span>p1<span class="token operator">++</span><span class="token punctuation">)</span></span></span><span class="token keyword">char</span> buf<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">*</span>p1 <span class="token operator">=</span> buf<span class="token punctuation">,</span> <span class="token operator">*</span>p2 <span class="token operator">=</span> buf<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="基本输出优化"><a href="#基本输出优化" class="headerlink" title="基本输出优化"></a>基本输出优化</h4><p><del>其实没有<code>printf</code>快</del></p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token keyword">char</span> F<span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">inline</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token keyword">int</span> tmp <span class="token operator">=</span> x <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> x <span class="token operator">:</span> <span class="token operator">-</span>x<span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">'-'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>tmp <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>F<span class="token punctuation">[</span>cnt<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp <span class="token operator">%</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token char">'0'</span><span class="token punctuation">;</span>tmp <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">while</span> <span class="token punctuation">(</span>cnt <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token function">putchar</span><span class="token punctuation">(</span>F<span class="token punctuation">[</span><span class="token operator">--</span>cnt<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="fwrite优化"><a href="#fwrite优化" class="headerlink" title="fwrite优化"></a>fwrite优化</h4><p><del>不会ing</del></p><p>留坑待填(逃</p>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 思想方法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 T93279 【最长上升子树链】</title>
      <link href="/2019/08/22/t93279/"/>
      <url>/2019/08/22/t93279/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problem/T93279">传送门</a></p><h3 id="30-的题解："><a href="#30-的题解：" class="headerlink" title="30%的题解："></a>30%的题解：</h3><ul><li>这棵树是一个链，所以直接做一遍LIS和LDS，经典DP算法，不多赘述。</li></ul><h3 id="60-的题解："><a href="#60-的题解：" class="headerlink" title="60%的题解："></a>60%的题解：</h3><ul><li>$N&lt;=1000$,可以直接$n^2$地做满分题解所说的DP。</li></ul><h3 id="满分题解："><a href="#满分题解：" class="headerlink" title="满分题解："></a>满分题解：</h3><ul><li><p>$F1[i]$表示以从以$i$为根节点的子树中出发，以$i$为结束点的LIS，同样设计一个$F2[i]$表示相同意思的LDS。</p></li><li><p>用动态开点的线段树维护，以权值为下标，记录$F1$、$F2$的值。</p></li><li><p>计算$u$节点的$F$值时，如果是计算$F1$,那么在子树中的$0 - (val[u]-1)$中找最大值，如果是计算$F2$，那么找$val[u] - inf$中的最大值。</p></li><li><p>答案就是找最大的$F1[u]+F2[u]-1$。注意子树的线段树最后要合并到父亲。时间复杂度$O(n \log n)$</p></li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">// luogu-judger-enable-o2</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">inf</span> <span class="token expression"><span class="token number">1000000000</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXN</span> <span class="token expression"><span class="token number">110000</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">;</span><span class="token keyword">int</span> val<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> len<span class="token punctuation">,</span> first<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">struct</span> <span class="token class-name">edge</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> v<span class="token punctuation">,</span> next<span class="token punctuation">;</span><span class="token punctuation">}</span>e<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">ins</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span>    len<span class="token operator">++</span><span class="token punctuation">;</span>    e<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">.</span>v <span class="token operator">=</span> v<span class="token punctuation">;</span>    e<span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">.</span>next <span class="token operator">=</span> first<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span>    first<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> len<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> ans<span class="token punctuation">,</span> L<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">,</span> R<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">,</span> t<span class="token punctuation">[</span>MAXN <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cnt<span class="token punctuation">,</span> root<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">upd</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>u<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        u <span class="token operator">=</span> <span class="token operator">++</span>cnt<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    t<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> r<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span> <span class="token function">upd</span><span class="token punctuation">(</span>L<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> c<span class="token punctuation">,</span> l<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">else</span> <span class="token function">upd</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">,</span> c<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">Find</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> fl<span class="token punctuation">,</span> <span class="token keyword">int</span> fr<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fl <span class="token operator">&gt;</span> fr<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fl <span class="token operator">==</span> l <span class="token operator">&amp;&amp;</span> fr <span class="token operator">==</span> r<span class="token punctuation">)</span> <span class="token keyword">return</span> t<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>u <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fr <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">Find</span><span class="token punctuation">(</span>L<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> fl<span class="token punctuation">,</span> fr<span class="token punctuation">,</span> l<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">else</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fl <span class="token operator">&gt;</span> mid<span class="token punctuation">)</span>  <span class="token keyword">return</span> <span class="token function">Find</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> fl<span class="token punctuation">,</span> fr<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">else</span>    <span class="token keyword">return</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">Find</span><span class="token punctuation">(</span>L<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> fl<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> l<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">Find</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> fr<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">&amp;</span>u1<span class="token punctuation">,</span> <span class="token keyword">int</span> u2<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>u1 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        u1 <span class="token operator">=</span> u2<span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>u2 <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>    t<span class="token punctuation">[</span>u1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>t<span class="token punctuation">[</span>u1<span class="token punctuation">]</span><span class="token punctuation">,</span> t<span class="token punctuation">[</span>u2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">merge</span><span class="token punctuation">(</span>L<span class="token punctuation">[</span>u1<span class="token punctuation">]</span><span class="token punctuation">,</span> L<span class="token punctuation">[</span>u2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">merge</span><span class="token punctuation">(</span>R<span class="token punctuation">[</span>u1<span class="token punctuation">]</span><span class="token punctuation">,</span> R<span class="token punctuation">[</span>u2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">upd</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">upd</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> in <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> de <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> first<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span> k<span class="token punctuation">;</span> k <span class="token operator">=</span> e<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> v <span class="token operator">=</span> e<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>v<span class="token punctuation">;</span>        <span class="token function">dfs</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">int</span> f1 <span class="token operator">=</span> <span class="token function">Find</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1000000000</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> f2 <span class="token operator">=</span> <span class="token function">Find</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> val<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                in <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>in<span class="token punctuation">,</span> f1<span class="token punctuation">)</span><span class="token punctuation">;</span>        de <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>de<span class="token punctuation">,</span> f2<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">merge</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> root<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">merge</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> root<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>        <span class="token comment">//cout &lt;&lt; in &lt;&lt; " " &lt;&lt; de &lt;&lt; endl;</span>    <span class="token function">upd</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> in <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">upd</span><span class="token punctuation">(</span>root<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> val<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">,</span> de <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1000000000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//cout &lt;&lt; in &lt;&lt; endl;</span>    ans <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span> in <span class="token operator">+</span> de <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>cin <span class="token operator">&gt;&gt;</span> n<span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">int</span> fa<span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>val<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>fa<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>fa<span class="token punctuation">)</span> <span class="token function">ins</span><span class="token punctuation">(</span>fa<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    cout <span class="token operator">&lt;&lt;</span> ans <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 T93270 【轰炸城市】</title>
      <link href="/2019/08/20/t93270/"/>
      <url>/2019/08/20/t93270/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problem/T93270">传送门</a></p><h4 id="30-的题解："><a href="#30-的题解：" class="headerlink" title="30%的题解："></a>30%的题解：</h4><ul><li>直接每次询问枚举所有点。</li></ul><h4 id="60-的题解："><a href="#60-的题解：" class="headerlink" title="60%的题解："></a>60%的题解：</h4><ul><li>坐标值很小，可以尝试用链表，可以做到$O(n)$的时间复杂度</li></ul><h4 id="100-的题解："><a href="#100-的题解：" class="headerlink" title="100%的题解："></a>100%的题解：</h4><ul><li><p>$map$套$multiset$</p></li><li><p>$X$坐标开个$mapx$，里面存的是每个$X$坐标的不同$Y$坐标，这些$Y$坐标用$multiset$保存。</p></li><li><p>$Y$坐标也同理开一个$mapy$。</p></li><li><p>统计点的时候，以平行于$y$轴的轰炸带为例，在$X$坐标的$mapx$中，枚举所有在$n1-n2$范围内的$x$，然后统计每个x里面所有的$y$，同时删去在$mapy$中对应的点，最后把$mapx$中$n1-n2$范围的所有元素都删掉。</p></li><li><p>时间复杂度$O(n \log n)$</p></li><li><p>也可以使用珂朵莉树。</p></li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;set&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MAXN</span> <span class="token expression"><span class="token number">100010</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span><span class="token keyword">int</span> bo<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> p<span class="token punctuation">[</span>MAXN<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>map<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> multiset<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&gt;</span> mapx<span class="token punctuation">,</span> mapy<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">,</span> <span class="token operator">&amp;</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>        p<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> y<span class="token punctuation">;</span>                mapx<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>        mapy<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">int</span> o<span class="token punctuation">,</span> n1<span class="token punctuation">,</span> n2<span class="token punctuation">;</span>        <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>o<span class="token punctuation">,</span> <span class="token operator">&amp;</span>n1<span class="token punctuation">,</span> <span class="token operator">&amp;</span>n2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>o <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            map<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> multiset<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span> iterator it<span class="token punctuation">,</span> it1<span class="token punctuation">,</span> it2<span class="token punctuation">;</span>            it1 <span class="token operator">=</span> mapx<span class="token punctuation">.</span><span class="token function">lower_bound</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">;</span>            it2 <span class="token operator">=</span> mapx<span class="token punctuation">.</span><span class="token function">upper_bound</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>it <span class="token operator">=</span> it1<span class="token punctuation">;</span> it <span class="token operator">!=</span> it2<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                multiset<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span>myset <span class="token operator">=</span> <span class="token punctuation">(</span>it <span class="token operator">-&gt;</span> second<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> x <span class="token operator">=</span> it <span class="token operator">-&gt;</span> first<span class="token punctuation">;</span>                cnt <span class="token operator">+=</span>myset<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>multiset<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span> iterator it <span class="token operator">=</span> myset<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it <span class="token operator">!=</span> myset<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token operator">*</span>it<span class="token punctuation">;</span>                    mapy<span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            mapx<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it1<span class="token punctuation">,</span> it2<span class="token punctuation">)</span><span class="token punctuation">;</span>            cout <span class="token operator">&lt;&lt;</span> cnt <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token punctuation">}</span>   <span class="token keyword">else</span><span class="token punctuation">{</span>            map<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token punctuation">,</span> multiset<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span> iterator it<span class="token punctuation">,</span> it1<span class="token punctuation">,</span> it2<span class="token punctuation">;</span>            it1 <span class="token operator">=</span> mapy<span class="token punctuation">.</span><span class="token function">lower_bound</span><span class="token punctuation">(</span>n1<span class="token punctuation">)</span><span class="token punctuation">;</span>            it2 <span class="token operator">=</span> mapy<span class="token punctuation">.</span><span class="token function">upper_bound</span><span class="token punctuation">(</span>n2<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token keyword">int</span> cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>it <span class="token operator">=</span> it1<span class="token punctuation">;</span> it <span class="token operator">!=</span> it2<span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                multiset<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token operator">&amp;</span>myset <span class="token operator">=</span> <span class="token punctuation">(</span>it <span class="token operator">-&gt;</span> second<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">int</span> y <span class="token operator">=</span> it <span class="token operator">-&gt;</span> first<span class="token punctuation">;</span>                cnt <span class="token operator">+=</span>myset<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>multiset<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span><span class="token double-colon punctuation">::</span> iterator it <span class="token operator">=</span> myset<span class="token punctuation">.</span><span class="token function">begin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it <span class="token operator">!=</span> myset<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> it<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token operator">*</span>it<span class="token punctuation">;</span>                    mapx<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>            mapy<span class="token punctuation">.</span><span class="token function">erase</span><span class="token punctuation">(</span>it1<span class="token punctuation">,</span> it2<span class="token punctuation">)</span><span class="token punctuation">;</span>            cout <span class="token operator">&lt;&lt;</span> cnt <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>                    <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 T93222 【生成树】</title>
      <link href="/2019/08/20/t93222/"/>
      <url>/2019/08/20/t93222/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problem/T93222">传送门</a></p><h4 id="30-的题解："><a href="#30-的题解：" class="headerlink" title="30%的题解："></a>30%的题解：</h4><ul><li>是一棵树，所以只要枚举根，然后计算代价即可</li></ul><h4 id="100-的题解："><a href="#100-的题解：" class="headerlink" title="100%的题解："></a>100%的题解：</h4><ul><li><p>$vals[S]$表示集合$S$的权值和</p></li><li><p>设计状态$F[S][h]$, 表示现在已经选择了的点的集合是$S$，$h$表示当前深度</p></li><li><p>枚举S的补集的子集$S_2$，只要满足$S_2$中每个点都有和$S$集合中某个点相连的话，就可以转移到$F[S|S_2][h+1]$,转移费用是$(h+1)*vals[S_2]$</p></li><li><p>时间复杂度$O（n \times 3n）$</p></li><li><p>这题修改自NOIP2017宝藏</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 T93336 【最短路】</title>
      <link href="/2019/08/20/t93284/"/>
      <url>/2019/08/20/t93284/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problem/T93336">传送门</a></p><h3 id="30-的做法"><a href="#30-的做法" class="headerlink" title="30%的做法"></a>30%的做法</h3><ul><li><p>floyd预处理出每两点间的最短路,每次询问$O(1)$回答</p></li><li><p>复杂度$O(n^3+q)$</p></li></ul><hr><h3 id="另外20-的做法"><a href="#另外20-的做法" class="headerlink" title="另外20%的做法"></a>另外20%的做法</h3><ul><li><p>树的情况</p></li><li><p>对于$u,v$的最短路，求出他们的LCA为$k$，$ans=d[u]+d[v]-2*d[k]$</p></li><li><p>可以用tarjan算法离线求LCA，那么总复杂度$O(n+q)$</p></li><li><p>也可以倍增 / 转化为RMQ在线求，复杂度$O(n+q \log n)$ / $O(n \log n+q)$</p></li></ul><hr><h3 id="100-的做法"><a href="#100-的做法" class="headerlink" title="100%的做法"></a>100%的做法</h3><ul><li><p>$M&lt;=N+20$，因此考虑沿用树的做法</p></li><li><p>我们可以从任一点为根开始，将整个图当成树做一个dfs（随便取一棵生成树）</p></li><li><p>那么整个图就是在这棵生成树$T$的基础上，多加了最多21条边。</p></li><li><p>考虑两个点的最短路，有两种情况：</p></li><li><ul><li>1.不经过这多出来的21条边，那么可以用树的方法在$O(1)$或者$O(\log n)$的做法求出</li></ul></li><li><ul><li>2.经过这多出来的21条边。这种情况如何处理？</li></ul></li></ul><h3 id=""><a href="#" class="headerlink" title=""></a></h3><ul><li><p>21条多出来的边最多涉及到42个图中的点，如果最短路经过这21条多出的边，那么一定经过这些点之一。</p></li><li><p>我们可以预处理出多出来的边涉及到的点为源点，到其它各点的最短路。</p></li><li><p>那么对于第2种情况，我们只需要枚举这些点作为中转点，取$\min$即可。两种情况取一个$\min$，即为他们实际的最短路。</p></li><li><p>例：设多出来的边涉及到的点为$k_1,k_2,..k_s$，我们要求$u,v$间的最短路。先求生成树T中他们间的路径长度，然后分别尝试以$k_1,k_2…k_s$中转的最短路，对这$s+1$个值取$\min$</p></li><li><p>单源最短路用dijkstra算法求出</p></li><li><p>复杂度$O(n \log n+q)$</p></li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token comment">// luogu-judger-enable-o2</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;vector&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">pb</span> <span class="token expression">push_back</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">mp</span> <span class="token expression">make_pair</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span> <span class="token expression"><span class="token number">100005</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">typedef</span> pair<span class="token operator">&lt;</span><span class="token keyword">long</span> <span class="token keyword">long</span><span class="token punctuation">,</span><span class="token keyword">int</span><span class="token operator">&gt;</span> pa<span class="token punctuation">;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> G<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> C<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span>vector<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> G1<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> C1<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> p<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> pcnt<span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> dist<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> d<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> q<span class="token punctuation">,</span> fa<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> f<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dep<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">bool</span> index<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> x<span class="token operator">==</span>fa<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">?</span>x<span class="token operator">:</span>fa<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>fa<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">lca</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>dep<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">!=</span>dep<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>dep<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">&lt;</span>dep<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token function">swap</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>k<span class="token operator">=</span>dep<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">-</span>dep<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">;</span>k<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">if</span><span class="token punctuation">(</span>k<span class="token operator">&amp;</span><span class="token number">1</span><span class="token punctuation">)</span> u<span class="token operator">=</span>f<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>k<span class="token operator">&gt;&gt;=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>u<span class="token operator">==</span>v<span class="token punctuation">)</span> <span class="token keyword">return</span> u<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">17</span><span class="token punctuation">;</span>i<span class="token operator">&gt;=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span>f<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> u<span class="token operator">=</span>f<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token operator">=</span>f<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">return</span> f<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span><span class="token keyword">int</span> fa<span class="token punctuation">)</span><span class="token punctuation">{</span>dep<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">=</span>dep<span class="token punctuation">[</span>fa<span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>f<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>fa<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> v<span class="token operator">=</span>G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>di<span class="token operator">=</span>C<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>v<span class="token operator">==</span>fa<span class="token punctuation">)</span>    <span class="token keyword">continue</span><span class="token punctuation">;</span>d<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token operator">=</span>d<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">+</span>di<span class="token punctuation">;</span><span class="token function">dfs</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>u<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">void</span> <span class="token function">dijkstra</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">static</span> <span class="token keyword">bool</span> ok<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> s<span class="token operator">=</span>p<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    dist<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1e18</span><span class="token punctuation">;</span>    ok<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>dist<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>priority_queue<span class="token operator">&lt;</span>pa<span class="token punctuation">,</span>vector<span class="token operator">&lt;</span>pa<span class="token operator">&gt;</span><span class="token punctuation">,</span>greater<span class="token operator">&lt;</span>pa<span class="token operator">&gt;</span> <span class="token operator">&gt;</span> pq<span class="token punctuation">;</span>pq<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">mp</span><span class="token punctuation">(</span><span class="token number">0ll</span><span class="token punctuation">,</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>pq<span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> u<span class="token operator">=</span>pq<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>second<span class="token punctuation">;</span> pq<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ok<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>G1<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> v<span class="token operator">=</span>G1<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>d<span class="token operator">=</span>C1<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>ok<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>dist<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">+</span>d<span class="token operator">&lt;</span>dist<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>dist<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token operator">=</span>dist<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">+</span>d<span class="token punctuation">;</span>pq<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">mp</span><span class="token punctuation">(</span>dist<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">,</span><span class="token operator">&amp;</span>m<span class="token punctuation">,</span><span class="token operator">&amp;</span>q<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    fa<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>u<span class="token punctuation">,</span>v<span class="token punctuation">,</span>d<span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>m<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>u<span class="token punctuation">,</span><span class="token operator">&amp;</span>v<span class="token punctuation">,</span><span class="token operator">&amp;</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>G1<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">pb</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span> C1<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">pb</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>G1<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">pb</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span> C1<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">pb</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">find</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token function">find</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>fa<span class="token punctuation">[</span><span class="token function">find</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">find</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>G<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">pb</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">,</span>C<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">pb</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>G<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">pb</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">,</span>C<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">pb</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span>    index<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">=</span>index<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>p<span class="token punctuation">[</span><span class="token operator">++</span>pcnt<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token function">dijkstra</span><span class="token punctuation">(</span>pcnt<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">dfs</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;=</span><span class="token number">17</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>f<span class="token punctuation">[</span>f<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>u<span class="token punctuation">,</span>v<span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>q<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>u<span class="token punctuation">,</span><span class="token operator">&amp;</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">long</span> <span class="token keyword">long</span> ans<span class="token operator">=</span>d<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">+</span>d<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token operator">-</span>d<span class="token punctuation">[</span><span class="token function">lca</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>pcnt<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>ans<span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token operator">+</span>dist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%lld\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 T93284 【最大公因数】</title>
      <link href="/2019/08/18/t93336/"/>
      <url>/2019/08/18/t93336/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problem/T93284">传送门</a></p><h3 id="30-的做法"><a href="#30-的做法" class="headerlink" title="30%的做法"></a>30%的做法</h3><ul><li>暴力枚举删掉哪些数即可，复杂度$O(n \log (\max(a_i)) \times 2^n)$</li></ul><h3 id="另外20-的做法"><a href="#另外20-的做法" class="headerlink" title="另外20%的做法"></a>另外20%的做法</h3><ul><li><p>枚举删掉一些数后的最大公因数$g$，那么不能被$g$整除的数的个数即为要删的数的个数，对结果取$\min$即可</p></li><li><p>复杂度$O(n \times \max(a_i))$</p></li></ul><h3 id="100-的做法"><a href="#100-的做法" class="headerlink" title="100%的做法"></a>100%的做法</h3><ul><li><p>首先，用这个序列的$\gcd$去除每个$a_i$，得到一个序列$b_i$</p></li><li><p>序列$b_i$的$\gcd=1$</p></li><li><p>问题转化为最少删掉多少个数使得$b_i$的$\gcd&gt;1$</p></li><li><p>我们删掉一些数以后使得存在一个质数$p$，能整除剩下的所有$b$</p></li><li><p>我们可以统计$b_i$在$[1,10^6]$每个值有多少个点</p></li><li><p>做一次埃筛，在筛的过程中可以顺便统计出每个素数能整除多少个$b_i$</p></li><li><p>我们取能整除最多$b_i$的那个素数即可</p></li><li><p>复杂度与埃筛相同，$O(m \log \log m)$ , $m=\max(a_i)$</p></li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">int</span> N<span class="token operator">=</span><span class="token number">100005</span><span class="token punctuation">,</span> M<span class="token operator">=</span><span class="token number">1000001</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">gcd</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> b<span class="token operator">==</span><span class="token number">0</span><span class="token operator">?</span>a<span class="token operator">:</span><span class="token function">gcd</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span>a<span class="token operator">%</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> a<span class="token punctuation">[</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span> cnt<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">bool</span> is<span class="token punctuation">[</span>M<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> g <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span>a<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>g<span class="token operator">=</span><span class="token function">gcd</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">/=</span>g<span class="token punctuation">;</span> cnt<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token function">memset</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>is<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> ans<span class="token operator">=</span>N<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>M<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token keyword">if</span><span class="token punctuation">(</span>is<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> k<span class="token operator">=</span>cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span>i<span class="token operator">+</span>i<span class="token punctuation">;</span>j<span class="token operator">&lt;</span>M<span class="token punctuation">;</span>j<span class="token operator">+=</span>i<span class="token punctuation">)</span><span class="token punctuation">{</span>k<span class="token operator">+=</span>cnt<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>is<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>ans<span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>ans<span class="token punctuation">,</span>n<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>题解 T93283 【集合】</title>
      <link href="/2019/08/18/t93283/"/>
      <url>/2019/08/18/t93283/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.luogu.org/problem/T93283">传送门</a></p><h4 id="考虑如何将s中的每种数分到-a-和-b-集中"><a href="#考虑如何将s中的每种数分到-a-和-b-集中" class="headerlink" title="考虑如何将s中的每种数分到$a$和$b$集中"></a>考虑如何将s中的每种数分到$a$和$b$集中</h4><h4 id="假设一个数-x-有-k-个，可以对-a-和-b-集“好的”数的个数差产生什么影响？"><a href="#假设一个数-x-有-k-个，可以对-a-和-b-集“好的”数的个数差产生什么影响？" class="headerlink" title="假设一个数$x$有$k$个，可以对$a$和$b$集“好的”数的个数差产生什么影响？"></a>假设一个数$x$有$k$个，可以对$a$和$b$集“好的”数的个数差产生什么影响？</h4><h4 id="k-1"><a href="#k-1" class="headerlink" title="$k=1$"></a>$k=1$</h4><ul><li>让一个集合“好的”数个数++，另一集合的个数不变</li></ul><h4 id="k-2"><a href="#k-2" class="headerlink" title="$k=2$"></a>$k=2$</h4><ul><li><p>让两个集合“好的”数个数都++</p></li><li><p>让两个集合“好的”数个数不变</p></li></ul><h4 id="k-2-1"><a href="#k-2-1" class="headerlink" title="$k>2$"></a>$k&gt;2$</h4><ul><li><p>让一个集合“好的”数个数++，另一集合的个数不变</p></li><li><p>让两个集合“好的”数个数不变</p></li></ul><h4 id="因此-k-2-的情况对答案没有影响"><a href="#因此-k-2-的情况对答案没有影响" class="headerlink" title="因此$k=2$的情况对答案没有影响"></a>因此$k=2$的情况对答案没有影响</h4><p>$k=1$的$x$会使两个集合的差别++，$k&gt;2$的$x$可以起到“平衡”的作用</p><h4 id="可如下分类讨论："><a href="#可如下分类讨论：" class="headerlink" title="可如下分类讨论："></a>可如下分类讨论：</h4><ul><li><p>$k=1$的数个数为偶数，平均分到两组即可。其它的数可以不产生影响。</p></li><li><p>$k=1$的数个数为奇数，必然有一个集合多出一个。</p><ul><li><p>如果存在$k&gt;2$的数，那么可以平衡这多出的一个。</p></li><li><p>否则是唯一的无解情况。</p></li></ul></li></ul><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span> a<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">,</span> cnt<span class="token punctuation">[</span><span class="token number">105</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">int</span> T<span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>T<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>T<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token function">memset</span><span class="token punctuation">(</span>cnt<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>cnt<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> a <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    cnt<span class="token punctuation">[</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">int</span> c1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> c2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>c1 <span class="token operator">+=</span> <span class="token punctuation">(</span>cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>c2 <span class="token operator">+=</span> <span class="token punctuation">(</span>cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">if</span><span class="token punctuation">(</span>c1 <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>c2<span class="token punctuation">)</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"No"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span><span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"Yes"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Life in OI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
